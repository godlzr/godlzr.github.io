<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.3.5" created="2016-06-24 03:54" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Code Monkey needs Money </title>
	<link>http://godlzr.com</link>
	<description>Code Monkey needs Money --- Gate of Dynamic</description>
	<pubDate>Fri, 24 Jun 2016 03:54:38 +0000</pubDate>
	<language>en-CA</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://godlzr.com</wp:base_site_url>
	<wp:base_blog_url>http://godlzr.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>godlzr</wp:author_login><wp:author_email>godlzr@gmail.com</wp:author_email><wp:author_display_name><![CDATA[godlzr]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=4.3.5</generator>

<image>
	<url>http://godlzr.com/wp-content/uploads/2015/07/cropped-cropped-CodeMonkey1-32x32.jpg</url>
	<title> &#187; Code Monkey needs Money </title>
	<link>http://godlzr.com</link>
	<width>32</width>
	<height>32</height>
</image> 

	<item>
		<title>Roadmap of Weibo User Positon Visualizaiton（WUPV）</title>
		<link>http://godlzr.com/?p=9</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[首先项目的计划是建立一个web应用，用来可视的实时显示微信在线用户的地理分布。计划是使用webgl搭建一个地球模型然后显示微信用户的实时在线分布情况，初步研究决定使用php+mysql来操作服务器端+数据库。

学习了ubuntu下apache服务器， php与mysql连接，插入读取操作。

之后发现微信不提供这样的api接口，转而去寻找合适的用户数据，发现微博可能提供，可以使用网络爬虫收集微博用户数据。

知道了python可以编写脚本化的爬虫软件，登录微博收集用户信息，学习了基于django的python+mysql的连接。

计划是，再网页前端用javascript， three.js 编写可视化的地球模型，后端用php连接读取mysql数据库，使用python抓取微博用户数据写入mysql数据库。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2015-02-17 01:49:30</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorised]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_facebook</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_facebook</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IBM Phone Interview Questions (March 9th, 2015)</title>
		<link>http://godlzr.com/index.php/2015/03/16/ibm-phone-interview-question-march-9th-2015/</link>
		<pubDate>Mon, 16 Mar 2015 19:01:43 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=21</guid>
		<description></description>
		<content:encoded><![CDATA[1. Why do you think you are a smart person?

2. What property do you think is the most important for daily work?

3. Tell me about the most inactive thing you did

4. Can you imagine how does m&amp;m candy made?

5. There are 3 cube platforms A, B, C, the distance between them is 10 feet. There are 5 people on A, and 5 people on C, each group has a wood plank which is 9 feet long, 20 inch wide and 15 inch thick. Give a plan to move Group A to platform C,and move Group C to platform A, the people can't touch the ground.

6. How do you improve efficiency in life, give a example(not must in work) .]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2015-03-16 19:01:43</wp:post_date>
		<wp:post_date_gmt>2015-03-16 19:01:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ibm-phone-interview-question-march-9th-2015</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13066778315]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13066778315]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>April 1st  Sulon Tech phone screen questions</title>
		<link>http://godlzr.com/index.php/2015/04/01/april-1st-sulon-tech-phone-screen-questions/</link>
		<pubDate>Wed, 01 Apr 2015 22:38:09 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=60</guid>
		<description></description>
		<content:encoded><![CDATA[<ol>
	<li><strong>Can you describe your program experience?</strong></li>
	<li><strong>What did you do with OpenGL?</strong></li>
	<li>The top three factors for you to choose a job?</li>
	<li>What kind of work environment do you like?</li>
	<li>Salary expectation?</li>
	<li>How long can you begin to work?</li>
	<li>Are you eligible to work in Canada?</li>
	<li>Any questions for me?</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2015-04-01 22:38:09</wp:post_date>
		<wp:post_date_gmt>2015-04-01 22:38:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>april-1st-sulon-tech-phone-screen-questions</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12672331521]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12672331521]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Apirl 2，Corel Phone Interview</title>
		<link>http://godlzr.com/index.php/2015/04/09/apirl-2%ef%bc%8ccorel-phone-interview/</link>
		<pubDate>Thu, 09 Apr 2015 21:43:13 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[3 parts：
<ul>
	<li>Behavioral Questions.</li>
</ul>
<ol>
	<li>Introduce yourself</li>
	<li>Describe the tongue project</li>
	<li>Describe the haptic game project</li>
	<li>Describe the hair project</li>
</ol>
<ul>
	<li>Technique Questions</li>
</ul>
<ol>
	<li>Any mistakes? How to improve the code</li>
</ol>
<h6>class ColorManager</h6>
<h6>{</h6>
<h6> public:</h6>
<h6>     double CalculateBrightnessFromRGB( BYTE r, BYTE g, BYTE b );</h6>
<h6>     //...</h6>
<h6>};</h6>
<h6>double MaxBrightnessRGB( std::vector&lt;BYTE&gt; srcImage )</h6>
<h6>{</h6>
<h6> ColorManager* pColorManager = new ColorManager();</h6>
<h6> double maxBrightness = 0;</h6>
<h6> for( int i=0; i&lt;srcImage.size(); i++ )</h6>
<h6>{</h6>
<h6>double brightness = pColorManager-&gt;</h6>
<h6>CalculateBrightnessFromRGB( srcImage.at(i*3), srcImage.at(i *3+1), srcImage.at( i *3+2) );</h6>
<h6>      if( brightness &gt;= maxBrightness )</h6>
<h6>   maxBrightness = brightness;</h6>
<h6>}</h6>
<h6> }</h6>
<h6> delete pColorManager;</h6>
<h6> return maxBrightness;</h6>
<h6>}</h6>
面试时没有看出来如何优化，事后想想可能是让用stl iterator？

2.

In C++, design an algorithm and write code to find the first common ancestor of two nodes in a binary tree. NOTE: This is not necessarily a binary search tree.

Define the data structure for a TreeNode

<strong><strong> </strong></strong>

template&lt;typename T&gt;

class Node

{

Node *parent = new Node();

Node *lchild = new Node();

Node *rchild = new Node();

T value;

Node(){ };

}

Node* FindFirstCommonAncestor( Node* pNode1, Node* pNode2)

{

if(pNode1 ==NULL||pNode2 ==NULL)

return NULL;

map&lt;Node*, bool&gt; ancestor;

while(pNode1)

{

ancestor(pNode1) = true;

pNode1 = pNode1-&gt;parent;

}

while(pNode2 &amp;&amp; ! ancestor(pNode2))

{

pNode2 = pNode2-&gt;parent;

}

return pNode2;

}

这个程序的时间复杂度?：O(n);

map的时间复杂度?O(1);

<strong>这里犯了大错误， STL map是红黑树实现的与hashmap的原理不同，其时间复杂度是O(logn), 所以整体的时间复杂度是O(nlogn).</strong>
<ul>
	<li>Asking Questions</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2015-04-09 21:43:13</wp:post_date>
		<wp:post_date_gmt>2015-04-09 21:43:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>apirl-2%ef%bc%8ccorel-phone-interview</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13066827905]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13066827905]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>April 9th, Stilo Phone interview</title>
		<link>http://godlzr.com/index.php/2015/04/09/april-9th-stilo-phone-interview/</link>
		<pubDate>Thu, 09 Apr 2015 21:31:00 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[Resume screening, only last 25mins.

1. Your resident status, work permit?

2. Salary

3. Any other issues limit you work?

4.Your most enjoying course?

5. Your remarkable project?

6. You can ask me questions。

经验：回答问题语速要平稳，电话听不到对方反应，不要连着说大段停下来询问对方，复述像背书，需要改进

问题问题！！准备问题，总是在这里卡壳。

1. 你们组里的情况

2. 地址

3. 工作时间

4. 使用的技术

5. benifit]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2015-04-09 21:31:00</wp:post_date>
		<wp:post_date_gmt>2015-04-09 21:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>april-9th-stilo-phone-interview</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13066820848]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13066820848]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>April 13 2015, Shopify on-site interview</title>
		<link>http://godlzr.com/index.php/2015/07/25/april-13-2015-shopify-on-site-interview/</link>
		<pubDate>Sat, 25 Jul 2015 07:42:46 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=88</guid>
		<description></description>
		<content:encoded><![CDATA[今天去参加shopify的一个interview，说是interview可能就是一个resume screening，到了shopify ottawa 的HQ感觉很不错，公司很大，很开放，挺自由的工作环境，装修风格也很简洁，但是楼道里光线有点暗。

shopify所在的写字楼在downtown，写字楼内部装潢也很考究，我是从在elgin 上的正门进的，进门右前方就有电梯，但就去之后只能到7层，公司是在8层，同乘电梯的女士告诉我要下楼去一层的内部另一个门坐电梯。我以为到了7层可以走楼梯，但是出了电梯所有的门都是要门禁的，消防通道也不能到8楼，只能由消防通道回到一楼，途中所有的入口都要门禁。回到一楼，穿过走廊来到另一侧的电梯，这栋楼的电梯要再一楼处选好楼层，而且很多层都是需要门禁卡才可以选择的，shopify的8层不需要，直接到达8楼。

出电梯左手边右拐就是shopify，进门处没有明显的标示，我有些狐疑的慢慢走去，发现有绿色的装潢元素，才有些肯定是在这里，进门后，前台小姐冲我微笑，我上前说明来意后，她指示我在前台的ipad上登记，登记完后，旁边的barprinter打印了一张访客单，由另一个小姐帮我插入了一个空的门牌中，并带我到后边的休息去等待，还跟我说，可以自取饮品，我选了瓶橙汁坐在椅子上等待kayla。

大概5分钟后，kayla抱着macbook air来到我面前，我们进行了简短的寒暄，期间她特意询问了我一遍我名字的发音。之后她带着我下了两层楼，并给我就他们公司内部格局做了简单的介绍，之后我们来到一走廊旁边是一排数个小间的会议室，每个会议室门牌上都有电子显示这“open”表明现在会议室是空置的，我留意到一个会议室的整面墙壁是可擦写的，上面密密麻麻写了些讨论的内容。之后kayla选定了一个稍大一些的会议室，其中有多张椅子和一个圆桌，灯的开关是感应的，进门后直接亮起，右面墙上有一电视，墙上也有一些涂鸦似的装饰，可以感觉这个公司的风格是挺自由开放的。

我们]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2015-07-25 07:42:46</wp:post_date>
		<wp:post_date_gmt>2015-07-25 07:42:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>april-13-2015-shopify-on-site-interview</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
	</item>
	<item>
		<title>Knowledge Based - Chapter 14 Java</title>
		<link>http://godlzr.com/?p=106</link>
		<pubDate>Thu, 23 Apr 2015 04:07:09 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=106</guid>
		<description></description>
		<content:encoded><![CDATA[14.1 In terms of inheritance, what is the effect of keeping a constructor private?
<ul>
	<li>在class A 中声明一个<strong>私有的构造函数</strong>意味着只有当在<strong>A 的私有方法</strong>中你才可以访问A的构造函数</li>
	<li>除了A，谁还可以访问A的私有方法和构造函数？只有A的<strong>内部类</strong>可以。</li>
	<li>另外，如果A是class Q的内部类，Q的其他<strong>内部类</strong>也可以访问A的<strong>私有方法</strong>和<strong>构造函数</strong>。</li>
	<li>这直接影响继承（inheritance），因为子类调用父类的构造函数。</li>
	<li>class A 可以被继承，但是只能由他自己或者它的<strong>父类的内部类</strong>来继承</li>
</ul>
14.2 In Java, does the finally block get executed if we insert a return statement inside the try block of a try-catch-finally?
<ul>
	<li>是的，fianlly block会被执行，fianlly后的程序在try block执行完后执行。</li>
	<li>即使try block中有一个return退出，finally block仍会被执行。</li>
	<li>注意，finally只会随着try执行，如果程序在try之前退出，则finally也不会被执行</li>
	<li>其次如果在try中<strong>return（0）</strong>， 直接退出Java虚拟机，finally也不会被执行</li>
	<li><a href="http://www.ibm.com/developerworks/cn/java/j-lo-finally/index.html">Finally深度解析</a></li>
</ul>
14.3 What is the difference between final, finally, and finalize?

一般来说，final是用来控制一个变量或方法是不是可变的（unchangable），finally用在try/catch中确保finally中的程序会被执行，

finalize（）方法是被垃圾回收期（garbage collector）调用的，如果没有引用存在。

final，根据上下文，final拥有不用的意义
<ul>
	<li>用在变量（variable）初始名上（primitive）：变量值不可改变</li>
	<li>用在变量的引用上（reference）：该引用不能指向栈上其他的对象</li>
	<li>用在方法上：方法不能重写（overridden）</li>
	<li>用在类上：类不能子类化</li>
</ul>
finally，在try/catch中有一个optional finally block，finally中代码一定会执行（除非JVM在try中退出）。finally中多是清理资源代码

finalize（），被garbage collector调用，当他确定某些引用已失效，多是用来清理资源（clean up resource），例如关闭一个文件。

14.4 Explain the difference between templates in C++ and generics in Java.

14.5 Explain what object reflection is in Java and why it is useful

14.6 Implement a CircularArray class that supports an array-like data structure which can be efficiently rotated. The class should use a generic type, and should support iteration via the standard for(obj o : circularArray) notation.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date>2015-04-23 04:07:09</wp:post_date>
		<wp:post_date_gmt>2015-04-23 04:07:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cracking-the-coding-interview-fifth-edition"><![CDATA[Cracking the Coding Interview (Fifth edition)]]></category>
	</item>
	<item>
		<title>My Interview Questions</title>
		<link>http://godlzr.com/index.php/2015/05/04/my-interview-questions/</link>
		<pubDate>Mon, 04 May 2015 04:08:12 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=111</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Behavioral Questions</h1>
<h2>1.    Tell me a little bit about <strong>yourself</strong>. (1’ 30’’)</h2>
<ul>
	<li>My name is Zhongrui LI, I have graduated from University of Ottawa with Master degree in this March(2015), my program is Electrical and Computer Engineering.</li>
	<li>During the past two years, I worked as a research assistant in the field of computer graphics, and my research direction is 3D reconstruction and image processing.</li>
	<li>I have experience with computer graphics related development and Java web development. I am solid in C/C++, Java, Matlab, Python (and some computer vision related technologies, like OpenGL, OpenCV and so on).</li>
	<li>Also I had been TA for networking course, I am greatly interested in network area, and I have solid knowledge background of the networking, and I am familiar with the common networking protocols.</li>
	<li>Besides my technical experience, I am also motivated person and a quick learner.</li>
	<li>And I think I am a good team player. I have always worked well with others but I have no troubles getting my work done independently.</li>
	<li><strong>I know Cisco is the leader in the networking market, it designs, manufactures and sells great networking equipment and also provides advanced technologies and softwares to the world.  It also set the industry standards in the networking area. So, in my heart, cisco is the real leader and super company in networking market, and I have great passion of working in cisco, it's really my dream company, and I really appreciate this interview opportunity.</strong></li>
	<li>(I really enjoy research and development work in the CG field and this position is exactly what I am looking for.) Thus, I really appreciate this opportunity for this interview.</li>
	<li></li>
</ul>
<h2>2.    Let me know how exactly you labored effectively to <strong>pressure situation</strong>.</h2>
<ul>
	<li>Actually, during the master-study, I always faced pressure and deadlines, I do not mind the stress, and I think stressful situation is a learning and challenging experience.</li>
	<li>For example, my supervisor always give me some extra work and tasks when deadline was approaching, she usually got some new ideas when the work should be done and want me to test if her idea is correct.</li>
	<li>When I was getting into this situation, your time is limited, but you have to face multiple tasks, the first thing I do is to sort the tasks by their priority, and I prefer to finish the most important and urgent thing first.</li>
	<li>Then I would make a schedule to allocate my time properly, and I would follow this schedule strictly, so that I can finish my daily work and make sure the whole plan can be completed.</li>
	<li>I think I can handle most of stressful situation by this kind of approach.</li>
</ul>
<h2>3.    How to be more <strong>efficient </strong>at work</h2>
<ul>
	<li>I think the most important point is to keep a consolidated work schedule and follow it strictly,</li>
	<li>And I will eliminate personal distractions such as silent my phone or close the social apps. So that I can focus on my work.</li>
	<li>I think hard work with a tired body and brain is low efficiency. Keep relax and never make brain tired, have rest after a long time hard work to relax body and brain, which can help to increase work efficiency.</li>
</ul>
<h2>4.    What do you feel are your great <strong>strength</strong>?</h2>
<ul>
	<li>My strengths are problem analyzing, software programming. With my education and experience, I become solid in general programming, analyzing and debugging.</li>
	<li>I think my strength is my flexibility to handle change. I can adapted to the change quickly and revise my plan and schedule based on the change. Keep me on the correct path.</li>
	<li>And I am self-motivated, I never satisfy with small achievement and always looking for a better way to achieve my goal.</li>
	<li>My attitude is my strength. The way I think gives me confidence to complete my task, no matter how hard the task is.</li>
</ul>
<h2>5.    What’s your <strong>weakness</strong>?</h2>
<ul>
	<li>Well, I think maybe I have a bit of dependence issue, that I am dependent on my familiar work tools and technologies. Basically, I prefer to use the tools and technologies, which I am proficient in. But that doesn’t mean I don’t like to learn new stuff, I mean I am little conservative and more willing to finish my work more reliable.</li>
	<li>And I think I don’t have super memory to memorize all technique details, sometime when I was not sure with a knowledge point or an issue, I need to search it and make sure I am doing correctly, so may this work type will reduce my efficiency.</li>
</ul>
<h2>6.    How do you react to <strong>instruction and criticism</strong>?</h2>
<ul>
	<li>I would receive and execute instructions immediat</li>
	<li>And I would also accept criticisms form anybody (leader or colleagues), although sometime the criticism may be incorrect, but I accept it first and try find a proper time to discuss the criticism with my leader and colleague.</li>
</ul>
<h2>7.    How do you handle <strong>conflict</strong>?</h2>
<ul>
	<li>Well, conflict is always happened in daily life and work. I am not a rash person and I will handle conflict</li>
	<li>I believe communication is the best way to resolve conflict. Communication can help people understand others’ situation.</li>
	<li>I am really a good communicator and I am willing to review the conflict by another perspective and try to find a resolution, which can satisfy each other.</li>
	<li>For example, before my thesis submission,</li>
</ul>
<h2>8.    Why do you think you are a <strong>smart person</strong>?</h2>
<ul>
	<li>I think smartness is not only about intelligent, It also about on our thinking and our attitudes and our abilities.</li>
	<li>First, I am confident with my intelligence, and I think I am serious person, I always pay attention to details and I have a can-do attitude.</li>
	<li>And I’d like to acquire wide range knowledge, that expands my perspective.</li>
	<li>In addition, I think I am a good communicator, and I am willing to ask for help, if I got some problem that I can resolve by myself. I recognize that other’s intelligence and help are an important factor on my path to success.</li>
</ul>
<h2>9.    What salary are you expecting?</h2>
<ul>
	<li>Well, I know money is an important factor, but it is not the most important thing for me in this stage.</li>
	<li>I really think this position in your company is a great opportunity for me to start my career, it’s more important for me to work in this field and acquire more knowledge and skills, and work in a growth-oriented company and I really like a start-up environment.</li>
	<li>So I will accept any reasonable salary, and I am open for your best offer.</li>
</ul>
<ol>
	<li>What Are Your Strengths?</li>
</ol>
. 100% understood Requirement

. Wrote the best test case

. <strong>Strong communication skills and documentation skills</strong>

<strong>. Personality (detail-oriented, strong analytical skill and trouble shooting skills)</strong>
<ol start="2">
	<li>Why do we hire you?</li>
</ol>
. First of all, my experiences and skills totally match the job description and I really like this job. And this exactly what I am looking for.

Secondly, I could make a big difference in you team:

. I am detail-oriented, have strong analytical skill and trouble shooting skills
<ol start="3">
	<li>Three words descript you.</li>
</ol>
Smart, loyalty and creative.
<h1>Projects Description</h1>
<h2>1.    Hair Project</h2>
<ul>
	<li>The 3D hair reconstruction project is also my thesis project. We design a capture system, which includes 4 kinects and 4 DSLR cameras, We use Kinect to capture the 3D depth information of real-life hair model, and we also capture 2D image using DSLR camera.</li>
	<li>For the Kinects, we calibrated the all Kinects in order to align the depth data from all Kinect devices. And we built the mapping relationship between 2D and 3D by calibrating the DSLR camera and Kinect and calculate the transformation between their space coordinates.</li>
	<li>Then we used image-processing approach to track the 2D hair strands on hair image, after that we project 2D hair strands on 3D space to get the 3D hair strands.</li>
	<li>Finally, we import the 3D data of hair strands into Blender (a 3D graphic software) and reconstruct the 3D hair model, and we also do some simulation and make some animation based on our hair model.</li>
	<li>We also developed the software GUI using C++ and Qt framework.</li>
	<li>So, in this project, we use different languages like, C++, matlab and python and I got familiar with OpenGL, OpenCV, Qt, and Kinect SDK. We also published two papers based on this project.</li>
</ul>
<h2>2.    3D Tongue Reconstruction</h2>
<ul>
	<li>In this project, we use a series of ultrasound images to reconstruct the 3D tongue. We selected a series of control points and calculated their 3D position, and then we deform a generic tongue model based on the control points we got from the ultrasound images.</li>
	<li>In this project, I developed the software GUI and create tongue movement animation using C++, MFC and OpenGL.</li>
</ul>
<h2>3.    Haptic Based web 3D Game</h2>
<ul>
	<li>Actually, this is a course project of Virtual Environment, we were asked to develop a Virtual Environment related program. We have two people in our group, and at that time, my partner hold a haptic device and I was doing research on computer graphics, so we decided to developed a haptic based 3D game, to use the haptic device as game controller.</li>
	<li>We used WebGL framework so the game is browser based and we designed and implemented the game logic using JavaScript. And we create the 3D characters and scenes and movement animation, using Blender. My partner developed a Chrome haptic plugin (extension) to connect Chrome browser and haptic device so that we can integrate the haptics into our game.</li>
	<li>Briefly, we developed a 3D third perspective shooting game, the user (player) can control the character to move using Keyboard, and rotate the view point, jump and shoot using the haptic device similar to mouse, but, if there is any interaction between your character and other object, you can feel the force feedback from specific direction though the haptic device. For example, if you jump, you can feel the gravity represented by a downward force, if you hit your character on the wall you can feel the impact force, and if you are under attack and get hurt you will feel Vibration from the haptic device.</li>
	<li>The game was well implemented and interesting, we add many funny factor and audio and video in it. Finally, we got full marks.</li>
</ul>
<h2>4.    Internship- Java Development</h2>
<ul>
	<li>During my internship in ChinaSoft International, I worked in a ten people group and we developed a J2EE web based financial management system.</li>
	<li>We use Struts 2, Spring and Hibernate integration framework. I design and implement the system database using Oracle 10g.</li>
	<li>And I also participate the backend development such as DAO layer and service layer, and frontend development. I am a good team player and I worked well with others, finally, our project got the excellent project award.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>111</wp:post_id>
		<wp:post_date>2015-05-04 04:08:12</wp:post_date>
		<wp:post_date_gmt>2015-05-04 04:08:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-interview-questions</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-preparation"><![CDATA[Interview Preparation]]></category>
	</item>
	<item>
		<title>QUESTIONS FOR YOUR INTERVIEWER</title>
		<link>http://godlzr.com/index.php/2015/05/04/questions-for-your-interviewer/</link>
		<pubDate>Mon, 04 May 2015 04:29:04 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=115</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="page" title="Page 1">
<div class="layoutArea">
<div class="column">

The fateful final question of all interviewers may carry more weight than you would think. Upon hearing "Now, do you have any questions," you are given a chance to show the quality of your character and interest in the company. No matter how well the interview went, passively responding to this question with a shake of the head and a polite smile will only communicate to the employer that you are not interested in inquiring about the job, the company, and your place within their organization.

Your approach to this Question &amp; Answer time will directly impact the interviewer's assessment of you and the interview.

When thinking of questions the first things that probably come to mind regard your salary, hours, vacation, and benefits. It is not a good idea to ask these types of questions during this time. It would only express to the employer that you are more concerned about yourself than learning about the company. These kinds of questions are valid only when a job offer has been made.

When preparing for this part of the interview develop questions regarding the company or the organization. This will positively influence your interview by showing that you care more about the company and the job than just how much they will pay you. Good questions to ask are:
<ul>
	<li>How would you describe your company culture?</li>
	<li>What is the typical career path for someone in this position?</li>
	<li>What is your company's biggest challenge?</li>
	<li>Where do you see this industry in the next five years?</li>
	<li>Who is your competition and how do you compare?</li>
	<li>How does your company measure success?</li>
	<li>What skills are the most important for this position?</li>
	<li>Describe your ideal employee.</li>
	<li>Tell me about the people I'd be working with.</li>
</ul>
<p style="text-align:left;">Not only will these questions indicate to the interviewer if you are right for the job, but their answers will indicate to you if the job is what you're looking for. Just as you may not be a perfect fit for all companies, not all companies are a perfect fit for you. Just as you try to sell yourself to a company, a company should try to sell themselves to you.</p>

</div>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date>2015-05-04 04:29:04</wp:post_date>
		<wp:post_date_gmt>2015-05-04 04:29:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>questions-for-your-interviewer</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-preparation"><![CDATA[Interview Preparation]]></category>
	</item>
	<item>
		<title>May 4th 2015: XYZ RGB Interview</title>
		<link>http://godlzr.com/index.php/2015/05/22/xyz-rgb-interview/</link>
		<pubDate>Fri, 22 May 2015 15:01:26 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=118</guid>
		<description></description>
		<content:encoded><![CDATA[1. linear algebra

2. C++ pointer and reference

3. Matrix Calculation

4. C++ ':' assign the initial value to member variable

5. Keep good communication, don't stop talking, speak all things you know, keep positive emotion.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>118</wp:post_id>
		<wp:post_date>2015-05-22 15:01:26</wp:post_date>
		<wp:post_date_gmt>2015-05-22 15:01:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xyz-rgb-interview</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[10893013754]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[10893013754]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>May 27 2015: Alcatel-lucent - Customer Application Engineer</title>
		<link>http://godlzr.com/index.php/2015/05/27/alcatel-lucent-customer-application-engineer-may-27%ef%bc%8c2015/</link>
		<pubDate>Wed, 27 May 2015 19:33:13 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=133</guid>
		<description></description>
		<content:encoded><![CDATA[1. The difference between java and C++

2. OSPF

3. OSI model

4. Describe you knowledge about networking.

5. How do you know about Alcatel-lucent]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date>2015-05-27 19:33:13</wp:post_date>
		<wp:post_date_gmt>2015-05-27 19:33:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>alcatel-lucent-customer-application-engineer-may-27%ef%bc%8c2015</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11072513354]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11072513354]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Expected Cisco Questions</title>
		<link>http://godlzr.com/index.php/2015/06/03/expected-cisco-questions/</link>
		<pubDate>Wed, 03 Jun 2015 00:38:48 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[Expected Cisco Questions:

50% C programming

30% OS

20% TCP/IP network questions

10% behavior/previous experience
<ul>
	<li><strong>Networking</strong>
<ol>
	<li>Webex, networking TCP vs UDP.
<ol>
	<li>TCP(transmission control protocol) is reliable data transfer service, connection-oriented, need a 3-steps handshaking to build the  connection， it provides multiplexing,  full-duplex service, point-to point and congestion control. Most application which need high reliable data transfer service are based on TCP. costs more time and resource.</li>
	<li>UDP(user datagram protocol) is unreliable, connectionless, doesn't keep the connection state and no flow control, but the datagram header is small. faster.</li>
</ol>
</li>
	<li>OSI Model
<ol>
	<li> Open System Interconnection 7 Layers/5 Layers</li>
	<li>1. Physical Layer 2.Data Link Layer 3. Network Layer(IP) 4. Transport Layer 5. Session Layer 6. Presentation Layer 7. Application Layer</li>
</ol>
</li>
	<li>LAN
<ol>
	<li>Local Area Network, a local area network (LAN) is a computer network that interconnects computers within a relatively small area, a limited area such as a home, school, computer laboratory, or office building, using network media. The huge number of LANs consists the WAN(wide area network) or Internet.</li>
	<li>Ethernet over twisted pair cabling, and Wi-Fi are the two most common technologies currently used to build LANs.</li>
	<li>TCP/IP is the most common protocol used in the LAN.</li>
</ol>
</li>
	<li>Explain the process when you login to a website
<ol>
	<li>DNS, send domain name and request to DNS server and get the corresponding ip address of the website. DNS is based on UDP. The ARP protocol was used during the transmission, to get the MAC address of the IP address.</li>
	<li>Browser send TCP connection request to the website. After three-step handshaking the connection is built.</li>
	<li>Http GET request was sent to the website server and get the webpage object.</li>
	<li>Http send TCP end session request to the website server, and the server send back ACK packet to end the session.</li>
</ol>
</li>
	<li>Difference between switch and router
<ol>
	<li>Switch works in the datalink layer, so switch works with the MAC address, it can't recognize IP address. Router works in the network layer, so it works with IP address.</li>
	<li>Switch filters and forwards packets between LAN segments,it knows exactly which port to send it to, it is designed for transmitting frames.</li>
	<li>Router is to route packets to other networks until that packet ultimately reaches its destination. One of the key features of a packet is that it not only contains data, but the destination address of where it's going.Router use protocols such as ICMP to communicate with each other and configure the best route between any two hosts.</li>
</ol>
</li>
	<li>how to prevent looping in layer-3: Routing Information Protocol (RIP)
<ol>
	<li>split horizon, router doesn't send a routing table update to the port where the update come from</li>
	<li>route poisoning, set the unreachable node to be infinite instead of deleting it.</li>
	<li>holddown timer, if a router receive a bigger routing update, it mark the node is unreachable and start holddown timer, after the timer stop, if it didn't receive update from that node, it  update the routing table.</li>
	<li>Timer, if a router didn't get the response from another one for a period , it will define that router is unreachable and modify the route table, and inform its neighbours.</li>
</ol>
</li>
</ol>
</li>
	<li><strong>Programming</strong>
<ol>
	<li>Linked List in C</li>
	<li>program in ring buffer.
<ol>
	<li>circular buffer, designed for FIFO</li>
	<li>need four pointers, start, end, read and write.</li>
	<li><a href="http://zh.wikipedia.org/wiki/%E7%92%B0%E5%BD%A2%E7%B7%A9%E8%A1%9D%E5%8D%80">circular buffer implementation</a></li>
</ol>
</li>
	<li>Array and linked list reversal.</li>
	<li>how would you find a issue and debug a program.</li>
	<li>bit operation in C</li>
	<li>Count the number of 1’s and 0’s
<ol>
	<li>int countOnes(int value) {for(int count =0; value!=0; count++, value&amp;=value-1)}</li>
</ol>
</li>
	<li>A series of duplicate number, print the number only once in a efficient way.
<ol>
	<li>a array check[10], all equal 0; traver色 the numbers set the is check[n] = 0, print, set to 1.</li>
</ol>
</li>
	<li>how to understand linked list is planar or loop?
<ol>
	<li>planar means linear</li>
	<li>loop means the end node point to the head of the linked list.</li>
</ol>
</li>
	<li>sorting merging and searching</li>
	<li>singly and doubly linked list</li>
	<li>Write code to implement a Binary search. Then construct a Binary search tree. Talk about AVL tree. Describe the</li>
	<li>Do factorial calculation using recursion</li>
	<li>Write a reverse linked list</li>
</ol>
</li>
	<li><strong>OS</strong>
<ol>
	<li>what’s the difference between process and thread?
<ol>
	<li>A process is a executing instance of an application. A thread is a path within a process, so a process can contain multiple threads.</li>
	<li>Since a process can consist of multiple threads, a thread could be considered a ‘lightweight’ process. Thus, the essential difference between a thread and a process is the work that each one is used to accomplish. Threads are used for small tasks, whereas processes are used for more ‘heavyweight’ tasks – basically the execution of applications.</li>
	<li>Another difference between a thread and a process is that threads within the same process share the same address space, whereas different processes do not. This allows threads to read from and write to the same data structures and variables, and also facilitates communication between threads. Communication between processes is quite difficult and resource-intensive.</li>
	<li>1. Threads are easier to create than processes since they don't require a separate address space.
2. Multithreading requires careful programming since threads share data structures(critical section) that should only be modified by one thread at a time. Unlike threads, processes don't share the same address space.
3. Threads are considered lightweight because they use far less resources than processes.
4. Processes are independent of each other. Threads, since they share the same address space are interdependent, so caution must be taken so that different sections don't step on each other.
5. A process can consist of multiple threads.</li>
</ol>
</li>
	<li>OS concept, what is Mutex and Semaphore
<ol>
	<li>Mutexes are typically used to serialise access to a section of re-entrant code that cannot be executed concurrently by more than one thread. A mutex object only allows one thread into a controlled section, forcing other threads which attempt to gain access to that section to wait until the first thread has exited from that section.                                                                                                                              MYWORDS: mutex is used to lock the resource which only allows to be accessed by one thread at one time. After the thread exits, the mutex is open, and allow the following thread to access the resource.</li>
	<li>A semaphore restricts the number of simultaneous users of a shared resource up to a maximum number. Threads can request access to the resource (decrementing the semaphore), and can signal that they have finished using the resource (incrementing the semaphore).                                                             MYWORDS: A semaphore is restricts the number of threads of a shared resource, it equals the maximum number that the resource allows the threads to access. if a thread access the resource the semaphore -1, if a thread finish using the resource, the semaphore +1, if the semaphore = 0, on more thread can access the resource.</li>
</ol>
</li>
	<li>Disadvantages of thread
<ol>
	<li>Multithreaded programs must be carefully programmed to prevent those bad things from happening. Sections of code that modify data structures shared by multiple threads are called critical sections. When a critical section is running in one thread it’s extremely important that no other thread be allowed into that critical section. This is called synchronization, which we wont get into any further over here. But, the point is that multithreading requires careful programming.</li>
	<li>No security between threads.
One thread can stomp on another thread's data.
If one thread blocks, all threads in task block.</li>
</ol>
</li>
	<li>why use thread?
<ol>
	<li>thread requires far less resources than processes, it's faster to start a thread than process.</li>
	<li>threads can communicate with each other since they share the same resource within a process. The communication is very difficult for different processes.</li>
	<li>Multithreading can increase the utilization rate of the CPU.</li>
	<li>thread can increase the response speed of an application, since it runs faster and requires less resource.</li>
</ol>
</li>
	<li>difference between binary semaphore and mutex.
<ol>
	<li>while mutex is used to implement mutual exclusion, Mutex can be released only by thread that had acquired it,</li>
	<li>binary signal can be release by any other threads (or process), binary semaphore is used to implement synchronization.</li>
</ol>
</li>
	<li>write a real time clock.</li>
	<li>memory management.</li>
</ol>
</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date>2015-06-03 00:38:48</wp:post_date>
		<wp:post_date_gmt>2015-06-03 00:38:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>expected-cisco-questions</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-preparation"><![CDATA[Interview Preparation]]></category>
	</item>
	<item>
		<title>June 17th 2015: Cisco Interview</title>
		<link>http://godlzr.com/index.php/2015/07/25/june-17th-2015-cisco-interview/</link>
		<pubDate>Sat, 25 Jul 2015 07:43:26 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=149</guid>
		<description></description>
		<content:encoded><![CDATA[1. static function

2. balance binary tree

3. pass-by-reference and pass-by-value

4. the memory stack and heap

5. where the memory the malloc() get

6. string comparison

7. how does the OSPF work when a new router come into the network.

8. How the know the ring buffer is full with extra count.

9. WebGL OpenGL on cellphone.

10. mutex and semaphore.

11. the stuff decision you have ever made.

12.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date>2015-07-25 07:43:26</wp:post_date>
		<wp:post_date_gmt>2015-07-25 07:43:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>june-17th-2015-cisco-interview</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
	</item>
	<item>
		<title>Expected BlackBerry/QNX Interview Questions</title>
		<link>http://godlzr.com/index.php/2015/07/11/expected-blackberryqnx-interview-questions/</link>
		<pubDate>Sat, 11 Jul 2015 15:27:45 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=153</guid>
		<description></description>
		<content:encoded><![CDATA[1.Behaviour Questions
<ul>
	<li>3.What did you find the most challenging while working on your project?
<ul>
	<li>I thought the new stuff is always the most challenging but is the most enjoyable thing during my work. such as qt, as opencv, matlab,webgl, you know before i start my master study, i never tried them, but after i begin my research i found that the new technologies are the most attractive for me. I really enjoy learning new thing and coding with new technologies for me.you know at beginning, there are lots of difficulties, you need to read the documents, you need to understand their mechanism, the api, the different data structure and what the methods exactly do.  And during the learning, sometime you may want to give up even there is some little issues which you cannot resolve, but i just keep moving, testing and searching, and sometime you can ask for help in community, and feel exciting when you getting the solution or even if some little achievement. And you will feel confident after you become familiar with them, and you will have confidence to face the next big challenging. Yes, i think learning new technology the challenging but i really enjoy this kind of challenging.</li>
</ul>
</li>
	<li>4.About yourself, why I wanted to work there.
<ul>
	<li>So, firstly, I want a developer position, in which i can contribute my c/c++ programming ability and related knowledge about the os, the graphics, memory and network maybe. And i am very interested in technologies, especial the different os, and one of my hobbies is to try and install different os, I really like fashion and new technique stuff. I really cars, And I know QNX is really a succeed real time operating system in the world, and it is widely adopted in different hardware, especially cars, I watched some video about the concept car with qnx technologies, and many amazing features of qnx system. I think it's really cool to develop software for automobiles, and you know I also have interest  in computer vision and graphics, I believe it's really a cool way to implement the graphics-related stuff inside the car. I really have great passion and enthusiasm | in su z i zem| on that.</li>
</ul>
</li>
	<li>5.tell me about yourself, talk about resume, projects and extra-curriculars</li>
	<li>7.have you had experience in resolving conflict, what makes you get up everyday for work.
<ul>
	<li>passion, interesting, teamwork, communication, learning new technology.</li>
</ul>
</li>
	<li>16."What defines a good manager to you?" "What is the biggest flop you made?" "If you and I were to get into a conflict, what would you do?" "Tell me about something you do outside of school and work, that you think would differentiate yourself from others."
<ul>
	<li>I think i am different with other engineering student is that I like art related knowledge, I not only interesting in computer science, but also like reading, novel, art, history, cultural, music. I think I have unique feeling of the beauty, life, society and the world.</li>
</ul>
</li>
	<li>20.solving conflicts between co-workers, types of managers I preferred.
<ul>
	<li>good manager: well, first I think he should have strong background of technology, so he can define the aim of the team based on engineering knowledge and real situation,he can set challenging but realistic targets.  He should be fair and treat his team members equally and objectively. He can develop good working relationships with his team memebers, and easy to work with.</li>
</ul>
</li>
	<li>22.If you had unlimited budget and unlimited time what would work on?
<ul>
	<li>because at first I don't have much knowledge about everything, I think I will find the top 10 interesting things for me. and i will try them one by one, and after that I would know the best direction for me. And I would focus on one direction at one time.</li>
</ul>
</li>
	<li>24.When you get a new new task, how do you begin with and make it done
<ul>
	<li>And I would do some research about the background,collect more helpful information.</li>
	<li>the first thing I do is to review the task and divide it into small pieces and I will sort them by their priorities, and I prefer to finish the most important and urgent part first.</li>
	<li>Then I would make a schedule to allocate my time properly, and I would follow this schedule strictly, so that I can finish my daily work and make sure the whole plan can be completed.</li>
	<li>that's my approach.</li>
</ul>
</li>
</ul>
2.Technique Questions
<ul>
	<li>1.How would you debug software in user space?
<ul>
	<li><a href="http://stackoverflow.com/questions/5957570/what-is-the-difference-between-the-kernel-space-and-the-user-space">Kernel space and user space</a></li>
	<li><a href="http://linoxide.com/linux-how-to/user-space-debugging-tools-linux/">5 user space debugging tools</a></li>
</ul>
</li>
	<li>2.how to I test timing issues, and what are the main issues that a task misses its deadline,</li>
	<li>6.OOD</li>
	<li>8.implement insert function for a binary tree.</li>
	<li>9.threading and some simple logic.</li>
	<li>10.esoteric C pointer</li>
	<li>11.mergesort and binary trees</li>
	<li>12.Given an input string and a dictionary of words, segment the input string into a space-separated sequence of dictionary words if possible. For example, if the input string is "applepie" and the dictionary is a standard set of English words, then we would return the string "apple pie" as output.</li>
	<li>13.difference between stack and heap, process and thread
<ul>
	<li>code segment, global segment, heap(dynamic memory, malloc, free), stack(functions and local variable)</li>
</ul>
</li>
	<li>14.Compare and contrast the differences between developing a desktop application vs developing a mobile application.</li>
	<li>15.Describe what design patterns you have used in solving a tough problem.</li>
	<li>17.How to detect Memory Leak... What is Volatile key word
<ul>
	<li><a href="http://www.cnblogs.com/sunyubo/archive/2010/05/05/2282170.html">valgrind</a></li>
	<li><a href="http://www.cnblogs.com/chio/archive/2007/11/24/970632.html">volatile</a> keyword tells the compiler that the variable with volatile may be changed unexpected, and don't not make any optimization on the variable, so the compiler while read the value of this variable from it's original location.</li>
</ul>
</li>
	<li>18.<a href="http://stackoverflow.com/questions/429125/override-and-overload-in-c">what different between overload and override?"</a>
<ul>
	<li>overload means in a same class you defined some functions with same name but different signatures.overloading is resolved at compile time.</li>
	<li> override means you can redefine a method in the subclass which is already defined in it's superclass, the function name and signature are all same. override is resolved at run time.</li>
</ul>
</li>
	<li>19.Check if an integer is a power of 2 using the least number of operations.
<ul>
	<li>(x != 0) &amp;&amp; !(x &amp; (x-1))</li>
	<li>判断是否二进制只有一个1 for(int count = 0; n!=0; count++){n = n&amp;(n-1)} if count ==1 ,yes.</li>
</ul>
</li>
	<li>21.Given an unsorted list of numbers 1 to N, one number occurs twice all other numbers appear once. How would find the duplicate number.
<ul>
	<li>sum(all number) - sum(1 to n)</li>
</ul>
</li>
	<li>23.<a href="http://stackoverflow.com/questions/1913098/what-is-the-difference-between-an-interface-and-abstract-class">different between abstract class and interface, </a>
<ul>
	<li>An abstract class is a class that is only partially implemented by the programmer. It may contain one or more abstract methods. An abstract method is simply a function definition that serves to tell the programmer that the method must be implemented in a child class.</li>
	<li>An interface is similar to an abstract class; indeed interfaces occupy the same namespace as classes and abstract classes. For that reason, you cannot define an interface with the same name as a class. An interface is a fully abstract class; none of its methods are implemented and instead of a class sub-classing from it, it is said to implement that interface。</li>
</ul>
</li>
	<li>what is the difference between i<span class="moreContent">nheritance and composition.</span>
<ul>
	<li>inheritance mean class b is a kind of class a</li>
	<li>composition means b is a part of a.</li>
</ul>
</li>
	<li>25. STL, why would you use a vector instead of a list
<ul>
	<li>the efficiency of random access of vector is higher than list, because vector has a continuous memory buffer, but element address of list is not continuous。</li>
</ul>
</li>
	<li>26. How to put a number of strings together
<ul>
	<li>add opt</li>
</ul>
</li>
	<li>27. Implement a stack using queue, think about run time performance and optimization ,Implement a queue using stack, think about run time performance and optimization
<ul>
	<li>出队列的重新从尾部入队列，知道最后一个出队列</li>
	<li>用两个stack实现队列，一个入一个出，出队为空时倒压入队元素进入出队</li>
</ul>
</li>
	<li>28.How to do a search for a text file? And its efficiency?</li>
	<li>29.Given this small set of some imaginary assembly instructions, write a function to multiply the argument by 7.</li>
	<li>30.Define polymorphism.
<ul>
	<li>Polymorphism means for one interface, it can have several different implementations.  for a virtual function of a superclass, you can redefine it in different way in it's subclasses, but these different definitions share the same interface. So the superclass can call the corresponding method for different inputs. It allows us to assign a pointer of subclass object to the pointer of the superclass object. There are dynamic(run) and static(compile) .</li>
</ul>
</li>
</ul>
<strong>Position Description</strong>

<b>Position Summary:</b>

Our Graphics &amp; Multimedia Development Department are looking for a Multimedia Senior Developer. This position reports directly to the Graphics &amp; Multimedia Manager. The purpose of this position is to develop multimedia software technologies, capabilities and solutions that meet the needs of automotive and other markets.

<b>Responsibilities:</b>
<ul>
	<li>Provide technical leadership for QNX multimedia research and development.</li>
	<li>Research multimedia technologies and standards and make recommendations for the creation of software solutions that meet the needs of QNX customers, especially in the automotive space. Create and document software specifications and designs that address the needs of QNX customers.</li>
	<li>Conduct reviews to ensure that software specifications meet market requirements.</li>
	<li>Conduct reviews with technical peers to ensure that designs meet QNX software design guidelines.</li>
	<li>Write code based on approved design spec’s. using high level software languages and potentially assembly.</li>
	<li>Unit test implementations on all relevant target architectures for the project (ex. ppc, sh, x86, mips, arm).</li>
	<li>Identify, analyze and resolve potentially complex problems and inadequacies in software.</li>
	<li>Provide project estimates for requirement, design, implementation and test efforts.</li>
	<li>Maintain an in-depth understanding of current software department approaches and standards through communication with development team members, technical leads, and management.</li>
</ul>
<b>Additional Duties and Responsibilities</b>:

The above describes essential responsibilities and activities that are typical for an incumbent in this job. This in not an exhaustive list of tasks performed. Depending on organizational requirements, other duties may be assigned.

<b>Education:</b>
<ul>
	<li>Bachelor’s degree in Computer Science or equivalent.</li>
	<li>5 years or more experience in embedded multimedia software development.</li>
	<li>Specialized Skills: Enthusiasm, and genuine interest in developing multimedia technologies and applications for embedded systems.</li>
	<li>In-depth technical understanding of multimedia frameworks, codecs, and related technologies is required.</li>
	<li>Experience with developing multimedia applications or frameworks is required. Codec development experience is an asset (ex. MP3, AAC, MP3, MPEG4, WMA).</li>
	<li>Strong background in software development using applicable programming languages (C, C++, Assembly) and operating systems (QNX, pSOS+, VxWorks, Windows CE, RTLinux, Solaris/HPUX/AIX, etc.) is required.</li>
	<li>Working knowledge of development host operating systems (Windows NT/XP/2k, QNX, Solaris, Linux) is required.</li>
	<li>Prior experience in developing for embedded systems is required. Understanding of major processor architectures (ARM, x86, SuperHitachi, MIPS, PPC, etc.) is an asset.</li>
	<li>Excellent communication and interpersonal skills are required.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2015-07-11 15:27:45</wp:post_date>
		<wp:post_date_gmt>2015-07-11 15:27:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>expected-blackberryqnx-interview-questions</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-preparation"><![CDATA[Interview Preparation]]></category>
	</item>
	<item>
		<title>Build eclipse cdt4 project with cmake</title>
		<link>http://godlzr.com/?p=259</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=259</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	&nbsp;
</p>

<p>
	The approach can be referenced by <a href="http://pointclouds.org/documentation/tutorials/using_pcl_with_eclipse.php">here</a>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date>2015-07-31 16:39:14</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorised]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[转] OpenGL Shader Basics</title>
		<link>http://godlzr.com/index.php/2015/08/02/opengl-shader-basics/</link>
		<pubDate>Mon, 03 Aug 2015 03:24:00 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=273</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	使用OpenGL创造的物体，在最终被绘制出来之前，有一个流水线处理过程，该过程被称为graphics pipeline,或者rendering pipeline，期间大部分工作由GPU执行，跟GPU紧密相关。&nbsp;
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	The pipeline of OpenGL is used for display 2D/3D objects, it is called graphics pipeline or rendering pipeline, during the pipeline&nbsp;most of the work are done by GPU, the work of pipeline&nbsp;has&nbsp;high relevence with GPU.
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	&nbsp;
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	随着GPU的发展，现在的GPU加入了可编程处理器，开发人员可直接控制GPU的行为。所谓Shader，就是控制GPU的一堆指令集，程序员写出shader，输入到GPU中，GPU执行。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	Along the development of GPU, the programable processor has become a common part of GPU, developer can control GPU directly by the programmable processor. Shader is a command set of GPU control, developer code the shader and send it to the GPU, and then GPU can execute the shader.
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	&nbsp;
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	早期的Shader是直接使用汇编。后来OpenGL ARB组织开发了一种新的编程语言，叫做GLslang或者GLSL, OpenGL shading language.该语言类似于C风格，在官方网站上有详细的语法解释，这样，程序员们就可以很方便的写出可直接控制GPU的代码了。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	Shader was coded using assembly in the early time, then OpenGL ARB group developed a new program language named GLslang or GLSL(OpenGL shading language). The GLSL is similiar to C style, so the developer can easily program the shader to control GPU.
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	&nbsp;
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	所谓控制GPU，就是控制GPU的处理器，现阶段，GPU有以下几个处理器：
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	To control GPU mean control the processors&nbsp;of GPU, right common GPU consist of these processors:
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	1. Vertext processor
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	2. Tessellation Control processor
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	3. Tessellation Evaluation processor
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	4. Geometry&nbsp;processor
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	5. Fragment&nbsp;processor
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	于是，shader就分为：
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	So, here are the related shaders:
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	1. Vertext shader
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	2. Tessellation Control&nbsp;shader
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	3. Tessellation Evaluation&nbsp;shader
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	4. Geometry&nbsp;shader
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	5. Fragment&nbsp;shader
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	&nbsp;
</p>

<div style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px; padding-top: 20px;">
	&nbsp;
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>273</wp:post_id>
		<wp:post_date>2015-08-02 23:24:00</wp:post_date>
		<wp:post_date_gmt>2015-08-03 03:24:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opengl-shader-basics</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[OpenGL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>August 7th RIP Entertainment Phone screening</title>
		<link>http://godlzr.com/index.php/2015/08/11/august-7th-rip-entertainment-phone-screening/</link>
		<pubDate>Wed, 12 Aug 2015 02:09:10 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=294</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	1. Talk about a case that you work with a kind of sort algorithm.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>294</wp:post_id>
		<wp:post_date>2015-08-11 22:09:10</wp:post_date>
		<wp:post_date_gmt>2015-08-12 02:09:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>august-7th-rip-entertainment-phone-screening</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>August 7th Brinx Interview</title>
		<link>http://godlzr.com/index.php/2015/08/11/august-7th-brinx-interview/</link>
		<pubDate>Wed, 12 Aug 2015 02:10:05 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=296</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	1. Talk about design pattern, what&#39;s it?
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2015-08-11 22:10:05</wp:post_date>
		<wp:post_date_gmt>2015-08-12 02:10:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>august-7th-brinx-interview</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exocortex Interview September 14 2015</title>
		<link>http://godlzr.com/index.php/2015/09/14/exocortex-interview-september-14-2015/</link>
		<pubDate>Mon, 14 Sep 2015 20:43:42 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=473</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	1.What&#39;s prespective
</p>

<p>
	2.Projection type, how to do with projection matrix
</p>

<ul>
	<li>
		Prespective projection
	</li>
	<li>
		Orthographic projection
	</li>
</ul>

<p>
	3.Cross product and dot product.
</p>

<ul>
	<li>
		cross product get the normal vector
	</li>
	<li>
		dot product get the intersection angle
	</li>
</ul>

<p>
	4.Transformation, matrix, translate, rotate, scale
</p>

<p>
	5.Quaternion
</p>

<p>
	6.Sort and O notation time complexity.
</p>

<ul>
	<li>
		Bubble sort n2
	</li>
	<li>
		Merge sort nlogn
	</li>
	<li>
		Quick sort nlogn
	</li>
</ul>

<p>
	7.Phong and lambert model
</p>

<ul>
	<li>
		Phong contain lambert, but extend specular light.
	</li>
	<li>
		lamber only take diffuse and ambient into account.
	</li>
</ul>

<p>
	8.BRDF
</p>

<p>
	9.Spline
</p>

<ul>
	<li>
		Hermit Spline
	</li>
	<li>
		Cubic Splines
		<p>
			&nbsp;
		</p>

		<ul>
			<li>
				Cardinal spline
			</li>
			<li>
				Catmull-Rom&nbsp;spline
			</li>
			<li>
				Kochanek-Bartels spline
			</li>
		</ul>
	</li>
	<li>
		B-spline
	</li>
	<li>
		Non uniform rational B-spline，NURBS
	</li>
	<li>
		B&eacute;zier Spline
	</li>
</ul>

<p>
	10. OBJ and PLY format.
</p>

<p>
	11. Light types
</p>

<ul>
	<li>
		ambient light
	</li>
	<li>
		diffuse light
	</li>
	<li>
		specular light
	</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>473</wp:post_id>
		<wp:post_date>2015-09-14 16:43:42</wp:post_date>
		<wp:post_date_gmt>2015-09-14 20:43:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exocortex-interview-september-14-2015</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="job-hunting"><![CDATA[Job Hunting]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Projection Matrix</title>
		<link>http://godlzr.com/index.php/2015/09/15/projection-matrix/</link>
		<pubDate>Tue, 15 Sep 2015 21:12:25 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=483</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>
	投影矩阵的推导&nbsp;<wbr />（OpenGL&nbsp;<wbr />D3D）
</h1>

<h2>
	<strong>OpenGL矩阵推导&mdash;&mdash;模型视图变化</strong>
</h2>

<p>
	在三维编程中，模型视图变换是从三维世界到二维屏幕中一个很重要的变换，但是这个变换往往很多人都不太理解，要么是事而非。而这方面的文章不是太少就是讲的太浅没有真正的理解模型视图变换，本人在这个过程中曾经走过很多歪路，不过好在最终在自己的不懈努力下终于降伏了这只猛虎。本人就以自己的理解，通过矩阵推导过程一步一步来了解模型视图变化，最后通过两个OpenGl的程序来进一步理解模型视图矩阵。先从一个基本的模型视图&mdash;透视投影变换讲起。
</p>

<p>
	透射投影是将相机空间中的点从视锥体(frustum)变换到规则观察体(Canonical View Volume 以下简称CVV)中，待裁剪完毕后进行透视除法的行为。
</p>

<p>
	透视投影变换是令很多刚刚进入3D图形领域的开发人员感到迷惑乃至神秘的一个图形技术。其中的理解困难在于步骤繁琐，对一些基础知识过分依赖，一旦对它们中的任何地方感到陌生，立刻导致理解停止不前。
</p>

<p>
	主流的3D APIs 都把透射投影的具体细节进行了封装，从而只需一个函数便可生成一个透射投影矩阵比如gluPerspective()，使得我们不需要了解其算法便可实现三维到二维的转化，然而实事是，一些三维图形或游戏开发人员遇到一些视图矩阵的问题往往会不知所措,比如视景体裁剪。
</p>

<p>
	以下部分内容是从别处那转过来的，主要感谢Twinsen和一个叫丁欧南的高中生。
</p>

<p>
	透视投影变换是在齐次坐标下进行的，而齐次坐标本身就是一个令人迷惑的概念，这里我们先把它理解清楚。齐次坐标
</p>

<p>
	对于一个<em>向量</em><strong>v</strong>以及基<strong>oabc</strong>，<img alt="" name="image_operate_52541355821638835" real_src="http://hi.csdn.net/attachment/201203/6/0_13310356323GGi.gif" src="http://hi.csdn.net/attachment/201203/6/0_13310356323GGi.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	可以找到一组坐标(v1,v2,v3)，使得
</p>

<pre class="brush:php;">
v&nbsp;= v1&nbsp;a&nbsp;+ v2&nbsp;b +&nbsp;v3&nbsp;c （1）</pre>

<p>
	而对于一个<em>点</em><strong>p</strong>，则可以找到一组坐标（p1,p2,p3），使得
</p>

<pre class="brush:php;">
p&nbsp;&ndash;&nbsp;o&nbsp;= p1&nbsp;a +&nbsp;p2&nbsp;b&nbsp;+ p3&nbsp;c （2）</pre>

<p>
	从上面对<em>向量</em>和<em>点</em>的表达，我们可以看出为了在坐标系中表示一个<em>点</em>（如<strong>p</strong>），我们把点的位置看作是对这个基的原点<strong>o</strong>所进行的一个位移，即一个向量&mdash;&mdash;<strong>p &ndash; o</strong>（有的书中把这样的向量叫做<strong><em>位置向量</em></strong>&mdash;&mdash;起始于坐标原点的特殊向量），我们在表达这个向量的同时用等价的方式表达出了点<strong>p</strong>:
</p>

<pre class="brush:php;">
p&nbsp;=&nbsp;o&nbsp;+ p1&nbsp;a +&nbsp;p2&nbsp;b&nbsp;+ p3&nbsp;c (3)</pre>

<p>
	(1)(3)是坐标系下表达一个<em>向量</em>和<em>点</em>的不同表达方式。这里可以看出，虽然都是用代数分量的形式表达向量和点，但表达一个点比一个向量需要额外的信息。如果我写出一个代数分量表达(1, 4, 7)，谁知道它是个向量还是个点！
</p>

<p>
	我们现在把（1）（3）写成矩阵的形式：
</p>

<p>
	<img action-data="http://hi.csdn.net/attachment/201203/6/0_1331035691E3HE.gif" action-type="show-slide" alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331035691E3HE.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331035691E3HE.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	这里<strong>(a,b,c,o)</strong>是坐标基矩阵，右边的列向量分别是向量<strong>v</strong>和点<strong>p</strong>在基下的坐标。这样，向量和点在同一个基下就有了不同的表达：<em>3D向量</em>的第4个代数分量是0，而<em>3D点</em>的第4个代数分量是1。像这种这种用4个代数分量表示3D几何概念的方式是一种齐次坐标表示。
</p>

<p>
	<strong>&ldquo;齐次坐标表示是计算机图形学的重要手段之一，它既能够用来明确区分向量和点，同时也更易用于进行仿射（线性）几何变换。&rdquo;</strong><em>&mdash;&mdash;</em>F.S. Hill, JR
</p>

<p>
	这样，上面的(1, 4, 7)如果写成（1,4,7,0），它就是个向量；如果是(1,4,7,1)，它就是个点。
</p>

<p>
	下面是如何在普通坐标(OrdinaryCoordinate)和齐次坐标(Homogeneous Coordinate)之间进行转换：
</p>

<p>
	从普通坐标转换成齐次坐标时，
</p>

<p>
	如果(x,y,z)是个点，则变为(x,y,z,1);
</p>

<p>
	如果(x,y,z)是个向量，则变为(x,y,z,0)
</p>

<p>
	从齐次坐标转换成普通坐标时，
</p>

<p>
	如果是(x,y,z,1)，则知道它是个点，变成(x,y,z);
</p>

<p>
	如果是(x,y,z,0)，则知道它是个向量，仍然变成(x,y,z)
</p>

<p>
	以上是通过齐次坐标来区分向量和点的方式。从中可以思考得知，对于平移T、旋转R、缩放S这3个最常见的仿射变换，平移变换只对于点才有意义，因为普通向量没有位置概念，只有大小和方向，这可以通过下面的式子清楚地看出：
</p>

<p>
	<img alt="" name="image_operate_25571355825608116" real_src="http://hi.csdn.net/attachment/201203/6/0_1331035732h32x.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331035732h32x.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	而旋转和缩放对于向量和点都有意义，你可以用类似上面齐次表示来检测。从中可以看出，齐次坐标用于仿射变换非常方便。
</p>

<p>
	此外，对于一个普通坐标的<em>点</em>P=(Px, Py, Pz)，有对应的一族齐次坐标(wPx, wPy,wPz, w)，其中w不等于零。比如，P(1, 4, 7)的齐次坐标有(1, 4, 7, 1)、（2, 8, 14, 2）、（-0.1, -0.4, -0.7, -0.1）等等。因此，如果把一个点从普通坐标变成齐次坐标，给x,y,z乘上同一个非零数w，然后增加第4个分量w；如果把一个齐次坐标转换成普通坐标，把前三个坐标同时除以第4个坐标，然后去掉第4个分量。
</p>

<p>
	由于齐次坐标使用了4个分量来表达3D概念，使得平移变换可以使用矩阵进行，从而如F.S. Hill, JR所说，仿射（线性）变换的进行更加方便。由于图形硬件已经普遍地支持齐次坐标与矩阵乘法，因此更加促进了齐次坐标使用，使得它似乎成为图形学中的一个标准。
</p>

<h2>
	<strong>简单的线性插值</strong>
</h2>

<p>
	线性插值我举的是丁欧南的温度计的例子：
</p>

<p>
	已知有一破温度计(何以谓破?刻度之间间距虽平均,但间距或大于或小于标准值,谓之破),当其插入0&nbsp;<wbr /><sup><font>0</font></sup>C水里时显示为5<sup><font>0</font></sup>C,当其插入100<sup><font>0</font></sup>C的沸水中时显示为90<sup><font>0</font></sup>C,问:当实际水温为50<sup><font>0</font></sup>C时此破温度计显示的值是多少?
</p>

<p>
	解:因刻度均匀,所以刻度之间的比例与好温度计相同,由此:设显示的数为T,
</p>

<p>
	(90-T)/(T-5)=(100-50)/(50-0) 解出T=47.5&nbsp;<wbr /><sup><font>0</font></sup>C.
</p>

<p>
	结论:由一个数域(如题目中的好温度计两个端点[0,100])映射到另一个数域(如题目中的破温度计的两个端点[5,90])时,如果两个数域都是线性(就如题目中暗示的刻度平均),那么它们对应点成比例(比如50和47.5这一对端点).
</p>

<p>
	这道题的应用是把一组坐标映射到另一个范围,这将在介绍NDC(Normalized Device Coordinate,归一化的设备坐标)时用到.
</p>

<h2>
	<strong>透视投影变换</strong>
</h2>

<p>
	好，有了上面两个理论知识，我们开始分析这次的主角&mdash;&mdash;透视投影变换。这里我们选择OpenGL的透视投影变换进行分析，其他的APIs会存在一些差异，但主体思想是相似的，可以类似地推导。经过相机矩阵的变换，顶点被变换到了相机空间。这个时候的多边形也许会被视锥体裁剪，但在这个不规则的体中进行裁剪并非那么容易的事情，所以经过图形学前辈们的精心分析，裁剪被安排到规则观察体(CanonicalView Volume, CVV)中进行，CVV是一个正方体，x, y, z的范围都是[-1，1]，多边形裁剪就是用这个规则体完成的。所以，事实上是透视投影变换由两步组成：
</p>

<p>
	1） 用透视变换矩阵把顶点从视锥体中变换到裁剪空间的CVV中。
</p>

<p>
	2） CVV裁剪完成后进行<em>透视除法</em>（一会进行解释）。
</p>

<p>
	<img action-data="http://hi.csdn.net/attachment/201203/6/0_1331035790zAv8.gif" action-type="show-slide" alt="" name="image_operate_83141355821665139" real_src="http://hi.csdn.net/attachment/201203/6/0_1331035790zAv8.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331035790zAv8.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	我们一步一步来，我们先从一个方向考察投影关系。
</p>

<p>
	<img action-data="http%3A%2F%2Fhi.csdn.net%2Fattachment%2F201203%2F6%2F0_1331035842gETT.gif" action-type="show-slide" alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331035842gETT.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331035842gETT.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	上图是右手坐标系中顶点在相机空间中的情形。设P(x,z)是经过相机变换之后的点，视锥体由eye&mdash;&mdash;眼睛位置，np&mdash;&mdash;近裁剪平面，fp&mdash;&mdash;远裁剪平面组成。N是眼睛到近裁剪平面的距离，F是眼睛到远裁剪平面的距离。投影面可以选择任何平行于近裁剪平面的平面，这里我们选择近裁剪平面作为投影平面。设P&rsquo;(x&rsquo;,z&rsquo;)是投影之后的点，则有z&rsquo; = -N。通过相似三角形性质，我们有关系：
</p>

<p>
	<img alt="" name="image_operate_52331355821678474" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036046g8L9.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036046g8L9.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	同理，有
</p>

<p>
	<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036101kt2h.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036101kt2h.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	这样，我们便得到了P投影后的点P&rsquo;
</p>

<p>
	<img alt="" name="image_operate_72521355821678568" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036128mJLY.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036128mJLY.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	从上面可以看出，投影的结果z&rsquo;始终等于-N，在投影面上。实际上，z&rsquo;对于投影后的P&rsquo;已经没有意义了，这个信息点已经没用了。但对于3D图形管线来说，为了便于进行后面的片元操作，例如z缓冲消隐算法，有必要把投影之前的z保存下来，方便后面使用。因此，我们利用这个没用的信息点存储z，处理成：
</p>

<p>
	<img alt="" name="image_operate_11271355821675475" real_src="http://hi.csdn.net/attachment/201203/6/0_13310361798BJy.gif" src="http://hi.csdn.net/attachment/201203/6/0_13310361798BJy.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	这个形式最大化地使用了3个信息点，达到了最原始的投影变换的目的，但是它太直白了，有一点蛮干的意味，我感觉我们最终的结果不应该是它，你说呢？我们开始结合CVV进行思考，把它写得在数学上更优雅一致，更易于程序处理。假入能够把上面写成这个形式：
</p>

<p>
	<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036244oj6y.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036244oj6y.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	那么我们就可以非常方便的用矩阵以及齐次坐标理论来表达投影变换：
</p>

<p>
	<img action-data="http://hi.csdn.net/attachment/201203/6/0_1331036341eFzQ.gif" action-type="show-slide" alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036341eFzQ.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036341eFzQ.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	其中<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036358gkKE.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036358gkKE.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	哈，看到了齐次坐标的使用，这对于你来说已经不陌生了吧？这个新的形式不仅达到了上面原始投影变换的目的，而且使用了齐次坐标理论，使得处理更加规范化。注意在把<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_13310363917Xip.gif" src="http://hi.csdn.net/attachment/201203/6/0_13310363917Xip.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />变成<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_13310364141hmq.gif" src="http://hi.csdn.net/attachment/201203/6/0_13310364141hmq.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />的一步我们是使用齐次坐标变普通坐标的规则完成的。这一步在透视投影过程中称为<em>透视除法（Perspective Division）</em>，这是透视投影变换的第2步，经过这一步，就丢弃了原始的z值（得到了CVV中对应的z值，后面解释），顶点才算完成了投影。而在这两步之间的就是CVV裁剪过程，所以裁剪空间使用的是齐次坐标<img alt="" name="image_operate_15301355821656924" real_src="http://hi.csdn.net/attachment/201203/6/0_13310363917Xip.gif" src="http://hi.csdn.net/attachment/201203/6/0_13310363917Xip.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />，主要原因在于透视除法会损失一些必要的信息（如原始z，第4个-z保留的）从而使裁剪变得更加难以处理，这里我们不讨论CVV裁剪的细节，只关注透视投影变换的两步。
</p>

<p>
	矩阵<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036516v5Vi.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036516v5Vi.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	就是我们投影矩阵的第一个版本。你一定会问为什么要把z写成
</p>

<p>
	<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036541HNv3.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036541HNv3.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	有两个原因：
</p>

<p>
	1） P&rsquo;的3个代数分量统一地除以分母-z，易于使用齐次坐标变为普通坐标来完成，使得处理更加一致、高效。
</p>

<p>
	2）后面的CVV是一个x,y,z的范围都为[-1，1]的规则体，便于进行多边形裁剪。而我们可以适当的选择系数a和b，使得<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036541HNv3.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036541HNv3.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />这个式子在z = -N的时候值为-1，而在z = -F的时候值为1，从而在z方向上构建CVV。
</p>

<p>
	接下来我们就求出a和b：<img action-data="http://hi.csdn.net/attachment/201203/6/0_1331036603DvuQ.gif" action-type="show-slide" alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036603DvuQ.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036603DvuQ.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	这样我们就得到了透视投影矩阵的第一个版本：
</p>

<p>
	<img action-data="http://hi.csdn.net/attachment/201203/6/0_13310366817eCw.gif" action-type="show-slide" alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_13310366817eCw.gif" src="http://hi.csdn.net/attachment/201203/6/0_13310366817eCw.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	使用这个版本的透视投影矩阵可以从z方向上构建CVV，但是x和y方向仍然没有限制在[-1,1]中，我们的透视投影矩阵的下一个版本就要解决这个问题。
</p>

<p>
	为了能在x和y方向把顶点从Frustum情形变成CVV情形，我们开始对x和y进行处理。先来观察我们目前得到的最终变换结果：
</p>

<p>
	<img alt="" name="image_operate_84691355821802155" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036738p5De.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036738p5De.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	我们知道-Nx / z的有效范围是投影平面的左边界值（记为left）和右边界值（记为right），即[left, right]，-Ny / z则为[bottom, top]。而现在我们想把-Nx / z属于[left, right]映射到x属于[-1, 1]中，-Ny / z属于[bottom, top]映射到y属于[-1, 1]中。你想到了什么？哈，就是我们简单的线性插值，你都已经掌握了！我们解决掉它：
</p>

<p>
	<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331036766qZIe.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331036766qZIe.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	则我们得到了最终的投影点：
</p>

<p>
	<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_13310368733aWN.gif" src="http://hi.csdn.net/attachment/201203/6/0_13310368733aWN.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	下面要做的就是从这个新形式出发反推出下一个版本的透视投影矩阵。注意到<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331037069ElpE.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331037069ElpE.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />是<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331037098UENE.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331037098UENE.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />经过透视除法的形式，而P&rsquo;只变化了x和y分量的形式，az+b和-z是不变的，则我们做透视除法的逆处理&mdash;&mdash;给P&rsquo;每个分量乘上-z，得到
</p>

<p>
	<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_133103712487q6.gif" src="http://hi.csdn.net/attachment/201203/6/0_133103712487q6.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	而这个结果又是这么来的：
</p>

<p>
	<img action-data="http://hi.csdn.net/attachment/201203/6/0_1331037299hEvO.gif" action-type="show-slide" alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331037299hEvO.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331037299hEvO.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	则我们最终得到：
</p>

<p>
	<img action-data="http://hi.csdn.net/attachment/201203/6/0_1331037379hfsh.gif" action-type="show-slide" alt="" name="image_operate_15691355821770928" real_src="http://hi.csdn.net/attachment/201203/6/0_1331037379hfsh.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331037379hfsh.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	上面是一般情况，我们要把它变成特殊性版本，即gluPerspective，它是一种左右对称的投影形式，因此我们从对x和y进行插值的那一步来看：
</p>

<p>
	那一步来看：
</p>

<p>
	<img alt="" name="image_operate_40851355821791184" real_src="http://hi.csdn.net/attachment/201203/6/0_1331037414a8GT.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331037414a8GT.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	销掉两边的1/2，得到：
</p>

<p>
	<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331037425kHAf.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331037425kHAf.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	则我们反推出透视投影矩阵：
</p>

<p>
	<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_13310374416cpk.gif" src="http://hi.csdn.net/attachment/201203/6/0_13310374416cpk.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	这就是gluPerspective的投影矩阵了。
</p>

<p>
	<strong>结论和用法：</strong>相机空间中的顶点，如果在视锥体中，则变换后就在CVV中。如果在视锥体外，变换后就在CVV外。而CVV本身的规则性对于多边形的裁剪很有利。OpenGL在构建透视投影矩阵的时候就使用了M的形式。注意到M的最后一行不是(0 0 0 1)而是(0 0 -1 0)，因此可以看出透视变换不是一种仿射变换，它是非线性的。另外一点你可能已经想到，对于投影面来说，它的宽和高大多数情况下不同，即宽高比不为1，比如640/480。而CVV的宽高是相同的，即宽高比永远是1。这就造成了多边形的失真现象，比如一个投影面上的正方形在CVV的面上可能变成了一个长方形。解决这个问题的方法就是在对多变形进行透视变换、裁剪、透视除法之后，在归一化的设备坐标(NormalizedDevice Coordinates)上进行的视口(viewport)变换中进行校正，它会把归一化的顶点之间按照和投影面上相同的比例变换到视口中，从而解除透视投影变换带来的失真现象。进行校正前提就是要使投影平面的宽高比和视口的宽高比相同。
</p>

<p>
	而r-l和t-b可以分别看作是投影平面的宽w和高h。如果我们不知道right、left、top以及bottom这几个参量，也可以根据视野（FOV &ndash; Field Of View）参量来求得。下面是两个平面的视野关系图：
</p>

<p>
	<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331037762i2ru.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331037762i2ru.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	<img alt="" name="image_operate_66991355821784366" real_src="http://hi.csdn.net/attachment/201203/6/0_1331037767a4uH.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331037767a4uH.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	其中，两个fov分别是在x-z以及y-z平面上的视野。如果只给了一个视野，也可以通过投影平面的宽高比计算出来：
</p>

<p>
	<img alt="" real_src="http://hi.csdn.net/attachment/201203/6/0_1331037772vbqk.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331037772vbqk.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" />
</p>

<p>
	用一个视野算出w或者h，然后用宽高比算出h或者w。
</p>

<p>
	我们可以通过一个例子来证明我们矩阵的正确性：
</p>

<p>
	&nbsp;<wbr /><wbr />
</p>

<pre class="brush:cpp;">
void OpenGlCom::ReSize()

{

RECTrct ;

GetClientRect(m_Hwnd,&amp;rct);

intm_view_width = rct.right- rct.left;

intm_view_height = rct.bottom - rct.top;

glViewport(0,0,m_view_width,m_view_height);

float nearz =5.0;

float farz =80000;

float AspectRatio =float(m_view_height)/ float(m_view_width);

float ViewAngleH =90 * (PI / 180);//90度

float ViewAngleV = atan(tan(ViewAngleH/2) * AspectRatio)* 2;

glMatrixMode(GL_PROJECTION);

glLoadIdentity();

GLfloatm[16];

::ZeroMemory(m,16*sizeof(float));

//////m[8],m[9]=0表示对称视椎体即gluPerspective///////////

m[0] = 1.0 /tan(ViewAngleV / 2);

m[5] = m[0]*AspectRatio;

m[10] = -(farz +nearz) / (farz - nearz);

m[11] = -1;

m[14] = - 2 * farz *nearz / (farz - nearz);

glMultMatrixf(m);

glMatrixMode(GL_MODELVIEW);

glLoadIdentity();

}

void OpenGlCom::draw()

{

glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);

glMatrixMode(GL_MODELVIEW);

glLoadIdentity();

glPushMatrix();

glDepthFunc(GL_LEQUAL);

glEnable(GL_DEPTH_TEST);

glBegin(GL_TRIANGLE_FAN);

glTranslatef(0, 0,10.0f);//往视点方向平移10单位显示更大

glColor3f(0.8f, 0.8f, 0.6f);

glVertex3f(0,0,-20);

glVertex3f(30,20,-40);

glVertex3f(40,10,-30);

glPopMatrix();

}</pre>

<p>
	<img action-data="http://hi.csdn.net/attachment/201203/6/0_1331035076AIgp.gif" action-type="show-slide" alt="" height="447" real_src="http://hi.csdn.net/attachment/201203/6/0_1331035076AIgp.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331035076AIgp.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" width="536" />
</p>

<p>
	我们看看在gluPerspective图形有什么变化呢
</p>

<p>
	将ReSize()改成：
</p>

<pre class="brush:cpp;">
{

RECTrct ;

GetClientRect(m_Hwnd,&amp;rct);

intm_view_width = rct.right- rct.left;

intm_view_height = rct.bottom - rct.top;

glViewport(0,0,m_view_width,m_view_height);

glMatrixMode(GL_PROJECTION);

glLoadIdentity();

floatfAspect = float(m_view_width) / float(m_view_height);

gluPerspective(90.0,fAspect, 5.0, 80000.0);

glMatrixMode(GL_MODELVIEW);

glLoadIdentity();

}</pre>

<p>
	<img action-data="http://hi.csdn.net/attachment/201203/6/0_1331035338p8zS.gif" action-type="show-slide" alt="" height="437" real_src="http://hi.csdn.net/attachment/201203/6/0_1331035338p8zS.gif" src="http://hi.csdn.net/attachment/201203/6/0_1331035338p8zS.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" width="501" />
</p>

<p>
	接下来，再试试看glFrustum()实现的效果：
</p>

<p>
	&nbsp;<wbr /><wbr />
</p>

<p>
	将ReSize()改成：
</p>

<pre class="brush:cpp;">
{

RECTrct ;

GetClientRect(m_Hwnd,&amp;rct);

intm_view_width = rct.right- rct.left;

intm_view_height = rct.bottom - rct.top;

glViewport(0,0,m_view_width,m_view_height);

glMatrixMode(GL_PROJECTION);

glLoadIdentity();

GLdouble left =-nearz*tan(ViewAngleV/2);

GLdouble right =nearz*tan(ViewAngleV/2);

GLdouble bottom =-nearz*tan(ViewAngleH/2);

GLdouble top =nearz*tan(ViewAngleH/2);

glFrustum(left,right,bottom,top,nearz,farz); glMatrixMode(GL_MODELVIEW);

glLoadIdentity();

}</pre>

<p>
	<img action-data="http://hi.csdn.net/attachment/201203/6/0_13310352642YM5.gif" action-type="show-slide" alt="" height="463" name="image_operate_13621355825642375" real_src="http://hi.csdn.net/attachment/201203/6/0_13310352642YM5.gif" src="http://hi.csdn.net/attachment/201203/6/0_13310352642YM5.gif" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" width="492" />
</p>

<p>
	从三幅图中可以看出图形位置是一样的，这就验证了我们的矩阵是正确的！
</p>

<p>
	&nbsp;<wbr /><wbr />
</p>

<p>
	&nbsp;<wbr /><wbr />
</p>

<p>
	相关图片：
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s7.sinaimg.cn/orignal/a401a1eatd11dc7a07f16" target="_new"><img action-data="http%3A%2F%2Fs7.sinaimg.cn%2Fmw690%2Fa401a1eatd11dc7a07f16%26690" action-type="show-slide" alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s7.sinaimg.cn/mw690/a401a1eatd11dc7a07f16&amp;690" src="http://s7.sinaimg.cn/mw690/a401a1eatd11dc7a07f16&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s2.sinaimg.cn/orignal/a401a1eatd11dc7adcd21" target="_new"><img action-data="http%3A%2F%2Fs2.sinaimg.cn%2Fmw690%2Fa401a1eatd11dc7adcd21%26690" action-type="show-slide" alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" name="image_operate_74121355825759021" real_src="http://s2.sinaimg.cn/mw690/a401a1eatd11dc7adcd21&amp;690" src="http://s2.sinaimg.cn/mw690/a401a1eatd11dc7adcd21&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s5.sinaimg.cn/orignal/a401a1eatd11dc7aeb124" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s5.sinaimg.cn/mw690/a401a1eatd11dc7aeb124&amp;690" src="http://s5.sinaimg.cn/mw690/a401a1eatd11dc7aeb124&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s10.sinaimg.cn/orignal/a401a1eatd11dc7c1c6b9" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s10.sinaimg.cn/mw690/a401a1eatd11dc7c1c6b9&amp;690" src="http://s10.sinaimg.cn/mw690/a401a1eatd11dc7c1c6b9&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s6.sinaimg.cn/orignal/a401a1eat7b4fc72e9f15" target="_new"><img action-data="http://s6.sinaimg.cn/mw690/a401a1eat7b4fc72e9f15&amp;690" action-type="show-slide" alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s6.sinaimg.cn/mw690/a401a1eat7b4fc72e9f15&amp;690" src="http://s6.sinaimg.cn/mw690/a401a1eat7b4fc72e9f15&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s3.sinaimg.cn/orignal/a401a1eatd11dc7e40802" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s3.sinaimg.cn/mw690/a401a1eatd11dc7e40802&amp;690" src="http://s3.sinaimg.cn/mw690/a401a1eatd11dc7e40802&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s4.sinaimg.cn/orignal/a401a1eatd11dc7db3ec3" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s4.sinaimg.cn/mw690/a401a1eatd11dc7db3ec3&amp;690" src="http://s4.sinaimg.cn/mw690/a401a1eatd11dc7db3ec3&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s3.sinaimg.cn/orignal/a401a1eat02b29cf23fc2" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s3.sinaimg.cn/mw690/a401a1eat02b29cf23fc2&amp;690" src="http://s3.sinaimg.cn/mw690/a401a1eat02b29cf23fc2&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s4.sinaimg.cn/orignal/a401a1eatd11dc7f3aed3" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s4.sinaimg.cn/mw690/a401a1eatd11dc7f3aed3&amp;690" src="http://s4.sinaimg.cn/mw690/a401a1eatd11dc7f3aed3&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s13.sinaimg.cn/orignal/a401a1eatd11dc806097c" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s13.sinaimg.cn/mw690/a401a1eatd11dc806097c&amp;690" src="http://s13.sinaimg.cn/mw690/a401a1eatd11dc806097c&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s10.sinaimg.cn/orignal/a401a1eatd11dc80da7e9" target="_new"><img action-data="http://s10.sinaimg.cn/mw690/a401a1eatd11dc80da7e9&amp;690" action-type="show-slide" alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s10.sinaimg.cn/mw690/a401a1eatd11dc80da7e9&amp;690" src="http://s10.sinaimg.cn/mw690/a401a1eatd11dc80da7e9&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s4.sinaimg.cn/orignal/a401a1eatd11dc81fef33" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s4.sinaimg.cn/mw690/a401a1eatd11dc81fef33&amp;690" src="http://s4.sinaimg.cn/mw690/a401a1eatd11dc81fef33&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s2.sinaimg.cn/orignal/a401a1eatd11dc8216b31" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s2.sinaimg.cn/mw690/a401a1eatd11dc8216b31&amp;690" src="http://s2.sinaimg.cn/mw690/a401a1eatd11dc8216b31&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s6.sinaimg.cn/orignal/a401a1eatd11dc82bb2d5" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s6.sinaimg.cn/mw690/a401a1eatd11dc82bb2d5&amp;690" src="http://s6.sinaimg.cn/mw690/a401a1eatd11dc82bb2d5&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s3.sinaimg.cn/orignal/a401a1eatd11dc846c232" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s3.sinaimg.cn/mw690/a401a1eatd11dc846c232&amp;690" src="http://s3.sinaimg.cn/mw690/a401a1eatd11dc846c232&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s15.sinaimg.cn/orignal/a401a1eatd11dc855665e" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s15.sinaimg.cn/mw690/a401a1eatd11dc855665e&amp;690" src="http://s15.sinaimg.cn/mw690/a401a1eatd11dc855665e&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s11.sinaimg.cn/orignal/a401a1eatd11dc864ccca" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s11.sinaimg.cn/mw690/a401a1eatd11dc864ccca&amp;690" src="http://s11.sinaimg.cn/mw690/a401a1eatd11dc864ccca&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s9.sinaimg.cn/orignal/a401a1eatd11dc878ed38" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" name="image_operate_70431355825766566" real_src="http://s9.sinaimg.cn/mw690/a401a1eatd11dc878ed38&amp;690" src="http://s9.sinaimg.cn/mw690/a401a1eatd11dc878ed38&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s12.sinaimg.cn/orignal/a401a1eatd11dc875ad5b" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s12.sinaimg.cn/mw690/a401a1eatd11dc875ad5b&amp;690" src="http://s12.sinaimg.cn/mw690/a401a1eatd11dc875ad5b&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s3.sinaimg.cn/orignal/a401a1eat02b29d481332" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s3.sinaimg.cn/mw690/a401a1eat02b29d481332&amp;690" src="http://s3.sinaimg.cn/mw690/a401a1eat02b29d481332&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s15.sinaimg.cn/orignal/a401a1eatd11dca05f28e" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s15.sinaimg.cn/mw690/a401a1eatd11dca05f28e&amp;690" src="http://s15.sinaimg.cn/mw690/a401a1eatd11dca05f28e&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s3.sinaimg.cn/orignal/a401a1eatd11dca1bfee2" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s3.sinaimg.cn/mw690/a401a1eatd11dca1bfee2&amp;690" src="http://s3.sinaimg.cn/mw690/a401a1eatd11dca1bfee2&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s2.sinaimg.cn/orignal/a401a1eatd11dca4c79d1" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s2.sinaimg.cn/mw690/a401a1eatd11dca4c79d1&amp;690" src="http://s2.sinaimg.cn/mw690/a401a1eatd11dca4c79d1&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s10.sinaimg.cn/orignal/a401a1eatd11dca4daf49" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s10.sinaimg.cn/mw690/a401a1eatd11dca4daf49&amp;690" src="http://s10.sinaimg.cn/mw690/a401a1eatd11dca4daf49&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s15.sinaimg.cn/orignal/a401a1eatd11dca9b6d5e" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" name="image_operate_68371355825858158" real_src="http://s15.sinaimg.cn/mw690/a401a1eatd11dca9b6d5e&amp;690" src="http://s15.sinaimg.cn/mw690/a401a1eatd11dca9b6d5e&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s12.sinaimg.cn/orignal/a401a1eatd11dcac05ddb" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s12.sinaimg.cn/mw690/a401a1eatd11dcac05ddb&amp;690" src="http://s12.sinaimg.cn/mw690/a401a1eatd11dcac05ddb&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s15.sinaimg.cn/orignal/a401a1eatd11dcabbbf6e" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s15.sinaimg.cn/mw690/a401a1eatd11dcabbbf6e&amp;690" src="http://s15.sinaimg.cn/mw690/a401a1eatd11dcabbbf6e&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s9.sinaimg.cn/orignal/a401a1eatd11dcadb8328" target="_new"><img action-data="http://s9.sinaimg.cn/mw690/a401a1eatd11dcadb8328&amp;690" action-type="show-slide" alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s9.sinaimg.cn/mw690/a401a1eatd11dcadb8328&amp;690" src="http://s9.sinaimg.cn/mw690/a401a1eatd11dcadb8328&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s8.sinaimg.cn/orignal/a401a1eatd11dcaed1d97" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s8.sinaimg.cn/mw690/a401a1eatd11dcaed1d97&amp;690" src="http://s8.sinaimg.cn/mw690/a401a1eatd11dcaed1d97&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s7.sinaimg.cn/orignal/a401a1eatd11dcaf44c86" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s7.sinaimg.cn/mw690/a401a1eatd11dcaf44c86&amp;690" src="http://s7.sinaimg.cn/mw690/a401a1eatd11dcaf44c86&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s4.sinaimg.cn/orignal/a401a1eatd11dcb04c723" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s4.sinaimg.cn/mw690/a401a1eatd11dcb04c723&amp;690" src="http://s4.sinaimg.cn/mw690/a401a1eatd11dcb04c723&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s1.sinaimg.cn/orignal/a401a1eatd11dcb0d2ce0" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s1.sinaimg.cn/mw690/a401a1eatd11dcb0d2ce0&amp;690" src="http://s1.sinaimg.cn/mw690/a401a1eatd11dcb0d2ce0&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s14.sinaimg.cn/orignal/a401a1eatd11dcb13851d" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s14.sinaimg.cn/mw690/a401a1eatd11dcb13851d&amp;690" src="http://s14.sinaimg.cn/mw690/a401a1eatd11dcb13851d&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s6.sinaimg.cn/orignal/a401a1eatd11dcb22a955" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s6.sinaimg.cn/mw690/a401a1eatd11dcb22a955&amp;690" src="http://s6.sinaimg.cn/mw690/a401a1eatd11dcb22a955&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s15.sinaimg.cn/orignal/a401a1eatd11dcb36db8e" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s15.sinaimg.cn/mw690/a401a1eatd11dcb36db8e&amp;690" src="http://s15.sinaimg.cn/mw690/a401a1eatd11dcb36db8e&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s3.sinaimg.cn/orignal/a401a1eat7b4fc786ba62" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s3.sinaimg.cn/mw690/a401a1eat7b4fc786ba62&amp;690" src="http://s3.sinaimg.cn/mw690/a401a1eat7b4fc786ba62&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>

<p>
	<a href="http://photo.blog.sina.com.cn/showpic.html#blogid=a401a1ea0101f1k3&amp;url=http://s2.sinaimg.cn/orignal/a401a1eatd11dcb602981" target="_new"><img alt="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" real_src="http://s2.sinaimg.cn/mw690/a401a1eatd11dcb602981&amp;690" src="http://s2.sinaimg.cn/mw690/a401a1eatd11dcb602981&amp;690" title="投影矩阵的推导 &lt;wbr&gt;&lt;wbr&gt;（OpenGL &lt;wbr&gt;&lt;wbr&gt;D3D）" /></a>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>483</wp:post_id>
		<wp:post_date>2015-09-15 17:12:25</wp:post_date>
		<wp:post_date_gmt>2015-09-15 21:12:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>projection-matrix</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[OpenGL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hello world!</title>
		<link>http://godlzr.com/index.php/2015/02/11/hello-world-2/</link>
		<pubDate>Wed, 11 Feb 2015 02:21:54 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.wordpress.com/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[This is your very first post. Click the Edit link to modify or delete it, or <a title="Direct link to Add New in the Admin Dashboard" href="/wp-admin/post-new.php">start a new post</a>. If you like, use this post to tell readers why you started this blog and what you plan to do with it.

	 	Happy blogging!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2015-02-11 02:21:54</wp:post_date>
		<wp:post_date_gmt>2015-02-11 02:21:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello-world-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorised]]></category>
	</item>
	<item>
		<title>White Opium</title>
		<link>http://godlzr.com/index.php/2015/02/11/white-opium/</link>
		<pubDate>Wed, 11 Feb 2015 02:38:39 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=3</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	<a href="http://godlzr.com/wp-content/uploads/2015/02/2014-11-22-15-34-57.jpg"><img alt="2014-11-22 15.34.57" class="wp-image-5 aligncenter" height="758" src="http://godlzr.com/wp-content/uploads/2015/02/2014-11-22-15-34-57.jpg?w=224" width="566" /></a>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2015-02-11 02:38:39</wp:post_date>
		<wp:post_date_gmt>2015-02-11 02:38:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>white-opium</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13055647453]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_latitude</wp:meta_key>
			<wp:meta_value><![CDATA[46.118462]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_longitude</wp:meta_key>
			<wp:meta_value><![CDATA[-74.59618499999999]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_address</wp:meta_key>
			<wp:meta_value><![CDATA[Saint-Jovite, Mont-Tremblant, QC J8E, Canada]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13055647453]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_latitude</wp:meta_key>
			<wp:meta_value><![CDATA[46.118462]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_longitude</wp:meta_key>
			<wp:meta_value><![CDATA[-74.59618499999999]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_address</wp:meta_key>
			<wp:meta_value><![CDATA[Saint-Jovite, Mont-Tremblant, QC J8E, Canada]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>开启UBUNTU php错误提示</title>
		<link>http://godlzr.com/index.php/2015/02/17/turn_on_ubuntu_php_error_indicator/</link>
		<pubDate>Tue, 17 Feb 2015 00:03:44 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	PHP编码出错不提示，这对于开发来说，是很不方便的。下面讲解如何开启错误提示步骤：
</p>

<p>
	1. 打开php.ini文件。<br />
	以我的ubuntu为例，这个文件在： /etc/php5/apache2 目录下。
</p>

<p>
	2. 搜索并修改下行，把Off值改成On<br />
	display_errors = Off
</p>

<p>
	3. 搜索下行<br />
	error_reporting = E_ALL &amp; ~E_NOTICE<br />
	error_reporting = E_ALL | E_STRICT
</p>

<p>
	4. 修改Apache的 apache2.conf，<br />
	以我的 Ubuntu 为例， 这个文件在：/etc/apache2/&nbsp; 目录下。<br />
	在末端添加以下两行：<br />
	php_flag display_errors&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; on<br />
	php_value error_reporting&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2039
</p>

<p>
	5. 重启Apache，就OK了。<br />
	重启命令： ：sudo /etc/init.d/apache2 restart
</p>

<p>
	在修改配置文件时可能会遇到权限不够的问题，可在命令行中用
</p>

<p>
	sudo chmod 777 (FILENAME)
</p>

<p>
	进行修改。
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2015-02-17 00:03:44</wp:post_date>
		<wp:post_date_gmt>2015-02-17 00:03:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>turn_on_ubuntu_php_error_indicator</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="issues-solution"><![CDATA[Issues Solution]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056053159]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056053159]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e5%bc%80%e5%90%afubuntu-php%e9%94%99%e8%af%af%e6%8f%90%e7%a4%ba]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>恢复Ubuntu启动项</title>
		<link>http://godlzr.com/index.php/2015/02/26/recover_ubuntu_initilization/</link>
		<pubDate>Thu, 26 Feb 2015 06:45:45 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	使用ubuntu的启动盘，然后改系统从光盘启动，进入临时ubuntu系统，选择&ldquo;试用ubuntu&rdquo;。<br />
	运行命令：sudo fdisk -l （这里不是数字1，是字母l），找到ubuntu所在分区。由于我的是装在G盘，所以显示为sda8。<br />
	运行命令：sudo -i 进入到root用户，方便后面的操作。<br />
	运行命令：mkdir /media/tmpdir 建立临时文件夹，然后输入命令：mount&nbsp; /dev/sda8&nbsp; /media/tmpdir挂载系统。<br />
	接下来输入命令: sudo grub-install&nbsp; --root-directory=/media/tmpdir&nbsp;&nbsp; /dev/sda （注意，这里就是sda，后面不要写成sda8），如果显示no error report，则表示基本成功了。<br />
	接下来，重启系统，不要进入<a class="keylink" href="http://www.2cto.com/os/windows/" target="_blank">windows</a>，先进入ubuntu，在终端中输入命令：sudo update-grub2 更新grub后方成功完成，这时候就可以重启进入任意一个系统了。<br />
	以上经过windows7和windows8系统测试都没有问题，最终很完美的解决了启动项问题
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2015-02-26 06:45:45</wp:post_date>
		<wp:post_date_gmt>2015-02-26 06:45:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>recover_ubuntu_initilization</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="issues-solution"><![CDATA[Issues Solution]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056048184]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056048184]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e6%81%a2%e5%a4%8dubuntu%e5%90%af%e5%8a%a8%e9%a1%b9]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ubuntu 下安装googletest</title>
		<link>http://godlzr.com/index.php/2015/03/02/ubuntu-install-googletest/</link>
		<pubDate>Mon, 02 Mar 2015 07:24:18 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=14</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	1.下载googletest
</p>

<p>
	2.解压gtest包
</p>

<p>
	3.配置gtest
</p>

<p>
	cmake CMakeList.txt
</p>

<p>
	make
</p>

<p>
	gtest 不需要make install, 我们只使用gtest库
</p>

<p>
	3.编译libgtest.a包， 这个包包含了gtest的核心，将来会被用于qt工程的单元测试中将该包拷贝到系统目录下
</p>

<p>
	cp *.a /usr/lib/
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2015-03-02 07:24:18</wp:post_date>
		<wp:post_date_gmt>2015-03-02 07:24:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ubuntu-install-googletest</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="googletest"><![CDATA[GoogleTest]]></category>
		<category domain="category" nicename="issues-solution"><![CDATA[Issues Solution]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056044637]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056044637]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[ubuntu-%e4%b8%8b%e5%ae%89%e8%a3%85googletest]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>【转】Java中的对象释放问题</title>
		<link>http://godlzr.com/index.php/2015/03/07/java_object_release/</link>
		<pubDate>Sat, 07 Mar 2015 15:31:03 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=16</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	许多方面，Java 类似于 C++。Java 的语法非常类似于 C++，Java 有类、方法和数据成员；Java 的类有构造函数； Java 有异常处理。
</p>

<p>
	但是，如果你使用过 C++ 会发现 Java 也丢掉一些可能是你熟悉的特性。这些特性之一就是析构函数。取代使用析构函数，Java 支持finalize() 方法。
</p>

<p>
	在本文中，我们将描述 finalize() 与 C++ 析构函数的区别。另外，我们将创建一个简单的 Applet 来演示 finalize() 是如何工作的。
</p>

<p>
	最终的界限
</p>

<p>
	与 Java 不同，C++ 支持局部对象（基于栈）和全局对象（基于堆）。因为这一双重支持，C++ 也提供了自动构造和析构，这导致了对构造函数和析构函数的调用，（对于堆对象）就是内存的分配和释放。
</p>

<p>
	在 Java 中，所有对象都驻留在堆内存，因此局部对象就不存在。结果，Java 的设计者觉得不需要析构函数（象 C++ 中所实现的）。
</p>

<p>
	取而代之，Java 定义了一个特殊的方法叫做finalize() ，它提供了 C++ 析构函数的一些功能。但是，finalize() 并不完全与 C++ 的析构函数一样，并可以假设它会导致一系列的问题。finalize() 方法作用的一个关键元素是 Java 的垃圾回收器。
</p>

<p>
	垃圾回收器
</p>

<p>
	在 C/C++、Pascal和其他几种多种用途的编程语言中，开发者有责任在内存管理上发挥积极的作用。例如，如果你为一个对象或数据结构分配了内存，那么当你不再使用它时必须释放掉该内存。
</p>

<p>
	在 Java 中，当你创建一个对象时，Java 虚拟机（JVM）为该对象分配内存、调用构造函数并开始跟踪你使用的对象。当你停止使用一个对象（就是说，当没有对该对象有效的引用时），JVM 通过垃圾回收器将该对象标记为释放状态。
</p>

<p>
	当垃圾回收器将要释放一个对象的内存时，它调用该对象的finalize() 方法（如果该对象定义了此方法）。垃圾回收器以独立的低优先级的方式运行，只有当其他线程挂起等待该内存释放的情况出现时，它才开始运行释放对象的内 存。（事实上，你可以调用System.gc() 方法强制垃圾回收器来释放这些对象的内存。）
</p>

<p>
	在以上的描述中，有一些重要的事情需要注意。首先，只有当垃圾回收器释放该对象的内存时，才会执行finalize()。如果在 Applet 或应用程序退出之前垃圾回收器没有释放内存，垃圾回收器将不会调用finalize()。
</p>

<p>
	其次，除非垃圾回收器认为你的 Applet 或应用程序需要额外的内存，否则它不会试图释放不再使用的对象的内存。换句话说，这是完全可能的：一个 Applet 给少量的对象分配内存，没有造成严重的内存需求，于是垃圾回收器没有释放这些对象的内存就退出了。
</p>

<p>
	显然，如果你为某个对象定义了finalize() 方法，JVM 可能不会调用它，因为垃圾回收器不曾释放过那些对象的内存。调用System.gc() 也不会起作用，因为它仅仅是给 JVM 一个建议而不是命令。
</p>

<p>
	finalize() 有什么优点呢？
</p>

<p>
	如果finalize() 不是析构函数，JVM 不一定会调用它，你可能会疑惑它是否在任何情况下都有好处。事实上，在 Java 1.0 中它并没有太多的优点。
</p>

<p>
	根据 Java 文档，finalize() 是一个用于释放非 Java 资源的方法。但是，JVM 有很大的可能不调用对象的finalize() 方法，因此很难证明使用该方法释放资源是有效的。
</p>

<p>
	Java 1.1 通过提供一个System.runFinalizersOnExit() 方法部分地解决了这个问题。（不要将这个方法与 Java 1.0 中的System.runFinalizations() 方法相混淆。）不象System.gc() 方法那样，System.runFinalizersOnExit() 方法并不立即试图启动垃圾回收器。而是当应用程序或 Applet 退出时，它调用每个对象的finalize() 方法。
</p>

<p>
	正如你可能猜测的那样，通过调用System.runFinalizersOnExit() 方法强制垃圾回收器清除所有独立对象的内存，当清除代码执行时可能会引起明显的延迟。现在建立一个示例 Applet 来演示 Java 垃圾回收器和finalize() 方法是如何相互作用的。
</p>

<p>
	回收垃圾
</p>

<p>
	通过使用Java Applet Wizard 创建一个新的 Applet 开始。当提示这样做时，输入 final_things 作为 Applet 名，并选择不要生成源文件注释。
</p>

<p>
	接下来，在Java Applet Wizard 进行第三步，不要选择多线程选项。在第五步之前，根据需要修改 Applet 的描述。
</p>

<p>
	当你单击Finish 后，Applet Wizard 将生成一个新的工作空间，并为该项目创建缺省的 Java 文件。从列表 A 中选择适当的代码输入（我们已经突出显示了你需要输入的代码）。
</p>

<p>
	当你完成代码的输入后，配置Internet 浏览器将System.out 的输出信息写到Javalog.txt 文件中。（在IE 选项对话框的高级页面中选择起用 Java Logging。）
</p>

<p>
	编译并运行该 Applet。然后，等待 Applet 运行（你将在状态栏中看到 Applet 已启动的信息），退出浏览器，并打开Javalog.txt 文件。你将会发现类似于下列行的信息：
</p>

<p>
	1000 things constructed
</p>

<p>
	0 things finalized
</p>

<p>
	正如你能够看到的那样，建立了1,000个对象仍然没有迫使垃圾回收器开始回收空间，即使在 Applet 退出时也没有对象被使用。
</p>

<p>
	现在，删除在stop() 方法第一行中的注释符以起用System.gc() 方法。再次编译并运行该 Applet ，等待 Applet 完成运行，并退出浏览器。当你再次打开Javalog.txt 文件，你将看到下列行：
</p>

<p>
	1000 things constructed
</p>

<p>
	963 things finalized
</p>

<p>
	这次，垃圾回收器认为大多数对象未被使用，并将它们回收。按顺序，当垃圾回收器开始释放这些对象的内存时，JVM 调用它们的finalize() 方法。
</p>

<p>
	继承finalize()?
</p>

<p>
	顺便，如果你在类中定义了finalize() ，它将不会自动调用基类中的方法。在我们讨论了finalize() 与 C++ 的析构函数的不同点后，对这个结论不会惊讶，因为为某个类定制的清除代码另一个类不一定会需要。
</p>

<p>
	如果你决定要通过派生一个类的finalize() 方法来调用基类中的finalize() 方法，你可以象其他继承方法一样处理。
</p>

<p>
	protected void finalize()
</p>

<p>
	{
</p>

<p>
	super.finalize();
</p>

<p>
	// other finalization code...
</p>

<p>
	}
</p>

<p>
	除了允许你控制是否执行清除操作外，这个技术还使你可以控制当前类的finalize() 方法何时执行。
</p>

<p>
	结论
</p>

<p>
	然而有益的是，Java 的自动垃圾回收器不会失去平衡。作为便利的代价，你不得不放弃对系统资源释放的控制。不象 C++ 中的析构函数，Java Applet 不会自动执行你的类中的finalize() 方法。事实上，如果你正在使用 Java 1.0，即使你试图强制它调用finalize() 方法，也不能确保将调用它。
</p>

<p>
	因此，你不应当依靠finalize() 来执行你的 Applet 和应用程序的资源清除工作。取而代之，你应当明确的清除那些资源或创建一个try...finally 块（或类似的机制）来实现。
</p>

<div class="dp-highlighter bg_java">
	<div class="bar">
		<div class="tools">
			<p>
				<b>[java][/java]</b> <a class="ViewSource" href="http://blog.csdn.net/lclai/article/details/4458031#" title="view plain">view plain</a><a class="CopyToClipboard" href="http://blog.csdn.net/lclai/article/details/4458031#" title="copy">copy</a>
			</p>

			<div>
				<a href="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf">http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf</a>
			</div>
		</div>
	</div>

	<ol class="dp-j" start="1">
		<li class="alt">
			<span class="keyword">import</span>&nbsp;java.applet.*;
		</li>
		<li>
			<span class="keyword">import</span>&nbsp;java.awt.*;
		</li>
		<li class="alt">
			<span class="keyword">class</span>&nbsp;thing
		</li>
		<li>
			{
		</li>
		<li class="alt">
			&nbsp;&nbsp;<span class="keyword">public</span>&nbsp;<span class="keyword">static</span>&nbsp;<span class="keyword">int</span>&nbsp;thingcount&nbsp;=&nbsp;<span class="number">0</span>;
		</li>
		<li>
			&nbsp;&nbsp;<span class="keyword">public</span>&nbsp;<span class="keyword">static</span>&nbsp;<span class="keyword">int</span>&nbsp;thingfinal&nbsp;=&nbsp;<span class="number">0</span>;
		</li>
		<li class="alt">
			&nbsp;&nbsp;<span class="keyword">public</span>&nbsp;thing()
		</li>
		<li>
			&nbsp;&nbsp;{
		</li>
		<li class="alt">
			&nbsp;&nbsp;&nbsp;&nbsp;++thingcount;
		</li>
		<li>
			&nbsp;&nbsp;}
		</li>
		<li class="alt">
			&nbsp;&nbsp;<span class="keyword">protected</span>&nbsp;<span class="keyword">void</span>&nbsp;finalize()
		</li>
		<li>
			&nbsp;&nbsp;{
		</li>
		<li class="alt">
			&nbsp;&nbsp;&nbsp;&nbsp;++thingfinal;
		</li>
		<li>
			&nbsp;&nbsp;}
		</li>
		<li class="alt">
			}
		</li>
		<li>
			<span class="keyword">public</span>&nbsp;<span class="keyword">class</span>&nbsp;final_things&nbsp;<span class="keyword">extends</span>&nbsp;Applet
		</li>
		<li class="alt">
			{
		</li>
		<li>
			&nbsp;&nbsp;<span class="keyword">public</span>&nbsp;final_things()
		</li>
		<li class="alt">
			&nbsp;&nbsp;{
		</li>
		<li>
			&nbsp;&nbsp;}
		</li>
		<li class="alt">
			&nbsp;&nbsp;<span class="keyword">public</span>&nbsp;String&nbsp;getAppletInfo()
		</li>
		<li>
			&nbsp;&nbsp;{
		</li>
		<li class="alt">
			&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span>&nbsp;<span class="string">&quot;Name:&nbsp;final_thing/r/n&quot;</span>&nbsp;+
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;Author:&nbsp;Tim&nbsp;Gooch/r/n&quot;</span>&nbsp;+
		</li>
		<li class="alt">
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;Created&nbsp;with&nbsp;Microsoft&nbsp;&quot;</span>&nbsp;+
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;Visual&nbsp;J++&nbsp;Version&nbsp;1.1&quot;</span>;
		</li>
		<li class="alt">
			&nbsp;&nbsp;}
		</li>
		<li>
			&nbsp;&nbsp;<span class="keyword">public</span>&nbsp;<span class="keyword">void</span>&nbsp;init()
		</li>
		<li class="alt">
			&nbsp;&nbsp;{
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resize(<span class="number">320</span>,&nbsp;<span class="number">240</span>);
		</li>
		<li class="alt">
			&nbsp;&nbsp;}
		</li>
		<li>
			&nbsp;&nbsp;<span class="keyword">public</span>&nbsp;<span class="keyword">void</span>&nbsp;destroy()
		</li>
		<li class="alt">
			&nbsp;&nbsp;{
		</li>
		<li>
			&nbsp;&nbsp;}
		</li>
		<li class="alt">
			&nbsp;&nbsp;<span class="keyword">public</span>&nbsp;<span class="keyword">void</span>&nbsp;paint(Graphics&nbsp;g)
		</li>
		<li>
			&nbsp;&nbsp;{
		</li>
		<li class="alt">
			&nbsp;&nbsp;&nbsp;&nbsp;g.drawString(<span class="string">&quot;Created&nbsp;with&nbsp;Microsoft&quot;</span>&nbsp;+
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;Visual&nbsp;J++&nbsp;Version&nbsp;1.1&quot;</span>,&nbsp;<span class="number">10</span>,&nbsp;<span class="number">20</span>);
		</li>
		<li class="alt">
			&nbsp;&nbsp;}
		</li>
		<li>
			&nbsp;&nbsp;<span class="keyword">public</span>&nbsp;<span class="keyword">void</span>&nbsp;start()
		</li>
		<li class="alt">
			&nbsp;&nbsp;{
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span>(thing.thingfinal&nbsp;&lt;&nbsp;<span class="number">1</span>)
		</li>
		<li class="alt">
			&nbsp;&nbsp;&nbsp;&nbsp;{
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">new</span>&nbsp;thing();
		</li>
		<li class="alt">
			&nbsp;&nbsp;&nbsp;&nbsp;}
		</li>
		<li>
			&nbsp;&nbsp;}
		</li>
		<li class="alt">
			&nbsp;&nbsp;<span class="keyword">public</span>&nbsp;<span class="keyword">void</span>&nbsp;stop()
		</li>
		<li>
			&nbsp;&nbsp;{
		</li>
		<li class="alt">
			&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;System.gc();</span>
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(thing.thingcount&nbsp;+
		</li>
		<li class="alt">
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;&nbsp;things&nbsp;constructed&quot;</span>);
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(thing.thingfinal&nbsp;+
		</li>
		<li class="alt">
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="string">&quot;&nbsp;things&nbsp;finalized&quot;</span>);
		</li>
		<li>
			&nbsp;&nbsp;}
		</li>
		<li class="alt">
			}
		</li>
	</ol>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2015-03-07 15:31:03</wp:post_date>
		<wp:post_date_gmt>2015-03-07 15:31:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java_object_release</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_facebook</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b574ccc425f5b183135908f630da550c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_facebook</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b574ccc425f5b183135908f630da550c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e3%80%90%e8%bd%ac%e3%80%91java%e4%b8%ad%e7%9a%84%e5%af%b9%e8%b1%a1%e9%87%8a%e6%94%be%e9%97%ae%e9%a2%98]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>QTCreater调试时提示ptrace不允许的操作</title>
		<link>http://godlzr.com/index.php/2015/03/15/qtcreater_debugging_no_ptrace/</link>
		<pubDate>Sun, 15 Mar 2015 21:46:30 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=19</guid>
		<description></description>
		<content:encoded><![CDATA[<h2 id="toc_1.1">
	1. 问题描述
</h2>

<ul>
	<li>
		用QTCreater建立了一个纯C++的项目，但是在F5调试时，竟然提示ptrace不允许的操作，修改工程配置为Debug也不管用，经过网上搜索，原来还需要修改一下系统ptrace的配置。
	</li>
</ul>

<h2 id="toc_1.2">
	<a name="t2"></a>2. 解决办法
</h2>

<ul>
	<li>
		临时性的解决方法
		<p>
			&nbsp;
		</p>

		<ul>
			<li>
				$ sudo echo 0 &gt; /proc/sys/kernel/yama/ptrace_scope
			</li>
		</ul>
	</li>
</ul>

<ul>
	<li>
		这样不过重启电脑之后就又恢复成原来的样子了，一劳永逸的方法：
		<p>
			&nbsp;
		</p>

		<ul>
			<li>
				$ sudo vi /etc/sysctl.d/10-ptrace.conf
			</li>
			<li>
				$ kernel.yama.ptrace_scope = 0
			</li>
			<li>
				重启电脑就好了，
			</li>
		</ul>
	</li>
</ul>

<ul>
	<li>
		据说在Ubuntu 11.04之后都会出现这种问题，貌似是为了安全
	</li>
</ul>

<h2 id="toc_1.3">
	<a name="t3"></a>3. ptrace
</h2>

<ul>
	<li>
		那么ptrace是个什么东西，可能是Linux下边调试时用到的？目前还不知道，以后要做一下研究
	</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2015-03-15 21:46:30</wp:post_date>
		<wp:post_date_gmt>2015-03-15 21:46:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qtcreater_debugging_no_ptrace</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="issues-solution"><![CDATA[Issues Solution]]></category>
		<category domain="post_tag" nicename="qt-2"><![CDATA[QT]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056039647]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056039647]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[qtcreater%e8%b0%83%e8%af%95%e6%97%b6%e6%8f%90%e7%a4%baptrace%e4%b8%8d%e5%85%81%e8%ae%b8%e7%9a%84%e6%93%8d%e4%bd%9c]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Qt5.3+OpenCV2.4.9 on MacOS &quot;Undefined symbols for architecture x86_64:&quot; Issue</title>
		<link>http://godlzr.com/index.php/2015/03/21/qt5-3opencv2-4-9-on-macos-undefined-symbols-for-architecture-x86_64-issue/</link>
		<pubDate>Sat, 21 Mar 2015 15:36:50 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=24</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="post-text">
	<p>
		This issue is answered in this post
	</p>

	<p>
		<a href="http://qt-project.org/forums/viewthread/35646/">http://qt-project.org/forums/viewthread/35646/</a>
	</p>

	<p>
		and explained by <a href="http://qt-project.org/member/146992">sandy.martel</a>
	</p>

	<p>
		I quoted here
	</p>

	<blockquote>
		<p>
			Qt binary distribution compile with -stdlib=libstdc++ to be compatible with 10.6, Xcode 5 on 10.9 will select -stdlib=libc++ by default (for OS X 10.7 and better only). So symbol using classes from the standard library (like std::string in this case) will not resolve correctly at link time. This is why you&rsquo;re seeing this error (Undefined symbols for architecture x86_64) . Look with which standard library opencv is built: otool -L libopencv_XXX.dylib. You&rsquo;ll have to rebuild it with the right one or change Qt&rsquo;s mkspec to use the newer one.
		</p>
	</blockquote>

	<p>
		I solve this by changing <strong>../Qt5.2.0/5.2.0-rc1/clang_64/mkspecs/macx-clang/qmake.conf</strong>
	</p>

	<p>
		from
	</p>

	<pre class="lang-cpp prettyprint prettyprinted">
<code><span class="pln">QMAKE_MACOSX_DEPLOYMENT_TARGET </span><span class="pun">=</span> <span class="lit">10.6</span></code></pre>

	<p>
		to
	</p>

	<pre class="lang-cpp prettyprint prettyprinted">
<code><span class="pln">QMAKE_MACOSX_DEPLOYMENT_TARGET </span><span class="pun">=</span> <span class="lit">10.X(your macos version)</span></code></pre>

	<p>
		And remember <strong>clean</strong> your project before rebuild.
	</p>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2015-03-21 15:36:50</wp:post_date>
		<wp:post_date_gmt>2015-03-21 15:36:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qt5-3opencv2-4-9-on-macos-undefined-symbols-for-architecture-x86_64-issue</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="issues-solution"><![CDATA[Issues Solution]]></category>
		<category domain="post_tag" nicename="macos"><![CDATA[MacOS]]></category>
		<category domain="post_tag" nicename="opencv"><![CDATA[OpenCV]]></category>
		<category domain="post_tag" nicename="qt-2"><![CDATA[QT]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056034116]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1c58884ef1250838113623605aa05980</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d16f5e3ece57d5152868043ac3cdecd5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056034116]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1c58884ef1250838113623605aa05980</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d16f5e3ece57d5152868043ac3cdecd5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Data Structures----Chapter 1 Arrays and Strings</title>
		<link>http://godlzr.com/index.php/2015/03/27/data-structures-chapter-1-arrays-and-strings/</link>
		<pubDate>Fri, 27 Mar 2015 21:48:08 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=26</guid>
		<description></description>
		<content:encoded><![CDATA[<h6>1.1 Implement an algorithm to determine if a string has all unique characters. What if you cannot use additional data structures?</h6>
<ul>
	<li>首先确定构成字符串的字符集有多大？是ASCII字符，还是只是26个字母？ 还是有更大的字符集，对于不同的情况，我们可能会有不同的解决方案。</li>
	<li>ASCII：标准ASCII 码也叫基础ASCII码，使用8 位二进制数来表示所有的大写和小写字母，数字0 到9、标点符号， 以及在美式英语中使用的特殊控制字符， ASCII 码表共有<strong>258</strong>位字符。</li>
	<li>如果我们假设字符集是ASCII字符，那么我们可以开一个大小为256的bool数组来表征每个字符的出现。数组初始化为false，遍历一遍字符串中的字符，当bool数组对应位置的值为真， 表明该字符在之前已经出现过，即可得出该字符串中有重复字符。否则将该位置的bool数组 值置为true。</li>
	<li><a title="Implementation" href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/ArrayString/DataStructures/stringHelper.java" target="_blank">Q1.1_Implementation</a></li>
</ul>
<h6>1.2 Implement a function void reverse(char *str) in C or C++ which reverses a null terminated string.</h6>
<ul>
	<li>使用C++位操作,做地址交换。</li>
</ul>

<hr />
<p style="padding-left:120px;"><span style="color:#993366;">    a1                0101110101</span></p>
<p style="padding-left:120px;"><span style="color:#993366;">    b1                1011101011</span></p>
<p style="padding-left:120px;"><span style="color:#993366;">a2 = a1^b1      1110011110</span></p>
<p style="padding-left:120px;"><span style="color:#993366;">b2 = a2^b1      0101110101(a1)</span></p>
<p style="padding-left:120px;"><span style="color:#993366;">a3 = a2^b2      1011101011(b1)</span></p>


<hr />

<ul>
	<li>获取字符串长度，从首尾两端开始两两交换。</li>
	<li><a title="Q1.2_Imp" href="https://github.com/godlzr/CrackingCodingInterviewCpp/blob/master/CrackingCodingInterviewCpp/stringHelper.cpp">Q1.2_Implementation</a></li>
</ul>
<h6>1.3 Given two strings, write a method to decide if one is a permutation of the other.</h6>
<ul>
	<li>将字符串转换成字符数组（toCharArray()）后排序(Arrays.sort())</li>
	<li>然后比较两个字符数组(Arrays.equals(string a, string b))</li>
	<li><a title="Implementation" href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/ArrayString/DataStructures/stringHelper.java" target="_blank">Q1.3_Implementation</a></li>
</ul>
<h6>1.4 Write a method to replace all spaces in a string with '%20'. You may assume that the string has sufficient space at the end of the string to hold the additional characters, and that you are given the "true" length of the string.(Note: if implementing in Java, please use a character array so that you can perform this operation in place.)</h6>
EXAMPLE

Input: "Mr_John_Smith",13

Output:"Mr%20John%20Smith"
<ul>
	<li>首先遍历字符串记录空格个数，计算新的 字符串长度=原长度+2*空格数</li>
	<li>将原字符串的内容以此填入新的字符串，遇到空格填入“%20”</li>
	<li><a title="Implementation" href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/ArrayString/DataStructures/stringHelper.java" target="_blank">Q1.4_Implementation</a></li>
</ul>
<h6>1.5 Implement a method to perform basic string compression using the counts of repeated characters. For example, the string aabccccccaaa would become a2b1c5a3. If the "compressed" string would not become smaller than the original string, you method should return the original string. You can assume the string has only upper and lower case.</h6>
<ul>
	<li>建立一个新的StringBuffer字符串newstr，和count.</li>
	<li>遍历字符串str, 计算压缩后的长度, 判断两个字符串长度，如果newstr长度不小于str长度，输出str.</li>
	<li>第一个字符写入newstr</li>
	<li>后一个字符和前一个字符相同则count++，不同则将数字写入newstr，后count=0，写入新的字符</li>
	<li>遍历完成，输出newstr</li>
	<li><a title="Implementation" href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/ArrayString/DataStructures/stringHelper.java" target="_blank">Q1.5_Implementation</a></li>
</ul>
<h6>1.6 Given an image represented by an NxN matrix, where each pixel in the image is 4 bytes, write a method to rotate the image by 90 degrees. Can you do this in place?</h6>
<ul>
	<li>Do this in place, 即不开辟新的空间，在原数据结构中操作</li>
	<li>我们可以将matrix由外之内分层，一层一层进行旋转操作</li>
	<li><img class="alignnone" src="https://lh5.googleusercontent.com/-PYq_I9DzGWo/VRnY2DG2GHI/AAAAAAAAANc/k3vpW6fQHaI/w1258-h1230-no/IMG_20150330_191308~2.jpg" alt="" width="308" height="301" /></li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/ArrayString/DataStructures/matrixHelper.java">Q1.6_Implementation</a></li>
</ul>
<h6>1.7 Write an algorithm such that if an element in an MxN matrix is 0, its entire row and column are set to 0</h6>
<ul>
	<li>建立两个一维数组，分别对应矩阵的长和宽，并赋值false</li>
	<li>遍历矩阵，遇到0，将对应长款数组中的元素赋值为true</li>
	<li>遍历矩阵，如果当前元素的行号列号在长宽数组中为true，将该元素置为0</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/ArrayString/DataStructures/matrixHelper.java">Q1.7_Implementation</a></li>
</ul>
<h6>1.8 Assume you have a method <em>isSubstring( )</em> which checks if one word is a substring of another. Given two strings, s1 and s2, write code to check if s2 is a rotation of s1 using only one call to <em>isString( ) </em>(e.g., "waterbottle" is a rotation of "erbottlewat").</h6>
<ul>
	<li>isSubstring( )可以用 String.isContatin()实现</li>
	<li>如果字符串是一个旋转字符串，则首位应该相连，如“erbottlewat”中 “er”与“wat”相连</li>
	<li>如果将这个字符串，复制拼接“erbottle<strong>wat</strong>”+“<strong>erbottle</strong>wat”=“erbottle<strong>waterbottle</strong>wat”，则其中一定含有一个完整的字串</li>
	<li>所以判断(s1+s1).isSubString(s2)</li>
	<li><a title="im" href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/ArrayString/DataStructures/stringHelper.java">Q1.8_Implementation</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2015-03-27 21:48:08</wp:post_date>
		<wp:post_date_gmt>2015-03-27 21:48:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>data-structures-chapter-1-arrays-and-strings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cracking-the-coding-interview-fifth-edition"><![CDATA[Cracking the Coding Interview (Fifth edition)]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Damaris]]></wp:comment_author>
			<wp:comment_author_email>clara.thatcher@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://truehobby.com/blog/gardening/item/74-indoor-plants-for-fresh-interiors</wp:comment_author_url>
			<wp:comment_author_IP>198.56.223.115</wp:comment_author_IP>
			<wp:comment_date>2015-07-31 18:51:43</wp:comment_date>
			<wp:comment_date_gmt>2015-07-31 22:51:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Keep thiks going please, great job!

Also visit my site - Las Vegas escorts [<a href="http://truehobby.com/blog/gardening/item/74-indoor-plants-for-fresh-interiors" rel="nofollow">Damaris</a>]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438383103]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438383103.504812;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438554347.7545421;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"godlzr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[criminal attorney san diego]]></wp:comment_author>
			<wp:comment_author_email>claire_sells@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://tinyurl.com/de7e2e31fce1cd1683e7b0104dfa641f</wp:comment_author_url>
			<wp:comment_author_IP>67.17.37.175</wp:comment_author_IP>
			<wp:comment_date>2015-08-01 10:40:21</wp:comment_date>
			<wp:comment_date_gmt>2015-08-01 14:40:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Asking questions are really fastidious thing if 
you are not understanding something completely, but this piece of writing 
gives good understanding yet.

Also visit my weblog - <a href="http://tinyurl.com/de7e2e31fce1cd1683e7b0104dfa641f" rel="nofollow">criminal attorney san diego</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438440021]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438440021.1499369;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438554442.745806;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"godlzr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Bianca]]></wp:comment_author>
			<wp:comment_author_email>edwardbelisario@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://kbase.rezgateway.com/phpbb2/profile.php?mode=viewprofile&amp;u=98524</wp:comment_author_url>
			<wp:comment_author_IP>45.61.33.102</wp:comment_author_IP>
			<wp:comment_date>2015-08-02 20:21:16</wp:comment_date>
			<wp:comment_date_gmt>2015-08-03 00:21:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's very easy to find out any matter on net ass compared to books, as I found this paragraph at this web page.


My web page - escorts iin Las Vegas (<a href="http://kbase.rezgateway.com/phpbb2/profile.php?mode=viewprofile&amp;u=98524" rel="nofollow">Bianca</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438561276]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438561276.534116;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Heidi]]></wp:comment_author>
			<wp:comment_author_email>shadcallanan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://nasihudin.blog.blo9g.dc243.rackhosting.com/?a%5B%5D=web+page+%28%3Ca+href%3Dhttp%3A%2F%2Fwww.doveataranto.it%2F%3Foption%3Dcom_k2%26view%3Ditemlist%26task%3Duser%26id%3D395308%3Emore+helpful+hi</wp:comment_author_url>
			<wp:comment_author_IP>23.89.250.63</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 02:24:11</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 06:24:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To be sure, lots of fake items make it via. However why deficient harder 
on the counterfeiters?

Feel free to surf to my page :: common law trademark rights [<a href="http://nasihudin.blog.blo9g.dc243.rackhosting.com/?a%5B%5D=web+page+%28%3Ca+href%3Dhttp%3A%2F%2Fwww.doveataranto.it%2F%3Foption%3Dcom_k2%26view%3Ditemlist%26task%3Duser%26id%3D395308%3Emore+helpful+hints%3C%2Fa%3E%29" rel="nofollow">Heidi</a>]]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438928651]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438928651.3671191;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Carri]]></wp:comment_author>
			<wp:comment_author_email>mazieusing@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://forum.openstreetmap.org/profile.php?section=personality&amp;id=95181</wp:comment_author_url>
			<wp:comment_author_IP>45.61.33.102</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 02:30:50</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 06:30:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For individuals who are still pursuing training and want a brand new or 
car you can certainly consider scholar loans from us.

We, at, present vehicle loans for that firsttime automobile customers.


Here is my blog post - bad credit auto loans reviews, <a href="http://forum.openstreetmap.org/profile.php?section=personality&amp;id=95181" rel="nofollow">Carri</a>,]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438929050]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438929050.4789541;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Kory]]></wp:comment_author>
			<wp:comment_author_email>bea.critchfield@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>https://s3-eu-west-1.amazonaws.com/webhosting124/index.html</wp:comment_author_url>
			<wp:comment_author_IP>216.158.200.147</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 02:37:00</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 06:37:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I might QUICKLY set up WordPress on a Linode VPS - it is 
well within my capabilities. So why do I invest the additional money?


My website; <a href="https://s3-eu-west-1.amazonaws.com/webhosting124/index.html" rel="nofollow">Kory</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438929420]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438929420.9392171;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Jeanette]]></wp:comment_author>
			<wp:comment_author_email>clay_mcgarvie@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://s3-eu-west-1.amazonaws.com/webhosting121/index.html</wp:comment_author_url>
			<wp:comment_author_IP>216.158.204.69</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 02:39:55</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 06:39:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you routinely see mistake developing database connection on your site, then it suggests 
that you're outgrowing your host servers or have a bad 
plugin.

Here is my web site ... <a href="https://s3-eu-west-1.amazonaws.com/webhosting121/index.html" rel="nofollow">Jeanette</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438929595]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438929595.671036;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[kettlebell kitchen discount]]></wp:comment_author>
			<wp:comment_author_email>braydenmoor@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.premed.fudan.edu.cn/premedforum/user/profile/320487.page</wp:comment_author_url>
			<wp:comment_author_IP>45.33.156.45</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 03:06:16</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 07:06:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You'll do 7 different kettlebell exercises and also 
repeat twice. This workout makes the ideal time-crunching workout.


my blog post <a href="http://www.premed.fudan.edu.cn/premedforum/user/profile/320487.page" rel="nofollow">kettlebell kitchen discount</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438931176]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438931176.8643999;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Bud]]></wp:comment_author>
			<wp:comment_author_email>stepanie_neace@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.umthomboyouth.org.za/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=172744</wp:comment_author_url>
			<wp:comment_author_IP>216.158.196.86</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 06:22:37</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 10:22:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[At Gerben Attorney I include merely one trademark enrollment service 
considering that I do not count on doing partial" searches.

Here is my blog :: web page (<a href="http://www.umthomboyouth.org.za/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=172744" rel="nofollow">Bud</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438942957]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438942957.7871561;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Richelle]]></wp:comment_author>
			<wp:comment_author_email>kandy_carnes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.memememo.com/link.php?url=http://vps-1157818-21410.manage.myhosting.com/node/738247</wp:comment_author_url>
			<wp:comment_author_IP>216.158.221.115</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 11:50:11</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 15:50:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Issuing quarterly hallmark condition records allowing easy 
monitoring of the condition of every firm trademark 
throughout the globe.

Review my web page website (<a href="http://www.memememo.com/link.php?url=http://vps-1157818-21410.manage.myhosting.com/node/738247" rel="nofollow">Richelle</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438962611]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438962611.115679;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Gabriele]]></wp:comment_author>
			<wp:comment_author_email>arthurmcburney@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.tierschutzliga.de/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=5120</wp:comment_author_url>
			<wp:comment_author_IP>216.158.211.86</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 12:05:45</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 16:05:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's a typical mistake. It goes to reveal that also advanced individuals can confuse 
licenses, hallmarks, and copyrights.

my weblog; web page (<a href="http://www.tierschutzliga.de/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=5120" rel="nofollow">Gabriele</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438963545]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438963545.036531;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Delores]]></wp:comment_author>
			<wp:comment_author_email>gayhatter@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.worldshotokan.org/site/index.php/en/wsf-structure/item/243-wsf-official-bank-account.html</wp:comment_author_url>
			<wp:comment_author_IP>136.0.124.163</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 13:35:42</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 17:35:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Another belief is that the SBA plans should be business consumers last option choice for acquiring 
a business loan.

Feel free to surf to my blog post ... how to get an auto loan with bad 
credit and low income (<a href="http://www.worldshotokan.org/site/index.php/en/wsf-structure/item/243-wsf-official-bank-account.html" rel="nofollow">Delores</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438968942]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438968942.2133379;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[bad credit auto Dealers atlanta ga]]></wp:comment_author>
			<wp:comment_author_email>solomonduell@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.getfreebacklink.com/auto-financing-scams/</wp:comment_author_url>
			<wp:comment_author_IP>104.144.59.3</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 13:42:01</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 17:42:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Listed here are 10 reasons why you need to fix 
your credit if this is simply not explanation enough to really get your credit inorder.


Feel free to surf to my homepage :: <a href="http://www.getfreebacklink.com/auto-financing-scams/" rel="nofollow">bad credit auto Dealers atlanta ga</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438969321]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438969321.6026559;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Werner]]></wp:comment_author>
			<wp:comment_author_email>pearlnelson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://losertopia.de/eminem/component/option,com_easygb/Itemid,19/?sa=U&amp;</wp:comment_author_url>
			<wp:comment_author_IP>136.0.124.224</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 13:49:23</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 17:49:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One of the fastest growing client loan providers in the united states has exposed its offices throughout Florida's state.



Also visit my homepage ... auto loans bad credit (<a href="http://losertopia.de/eminem/component/option,com_easygb/Itemid,19/?sa=U&amp;" rel="nofollow">Werner</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438969763]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438969763.7021091;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Jamika]]></wp:comment_author>
			<wp:comment_author_email>stephanyhurt@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mail.4pets.es/php.php?a%5B%5D=trademark+common+law+rights+%28%3Ca+href%3Dhttp%3A%2F%2Fahovey.www.ww.isaev.infoww.isaev.info%2F%3Fa%255B%255D%3Dweb%2Bsite%2B%2528%253Ca%2Bhref%253Dhttp%253A%252F</wp:comment_author_url>
			<wp:comment_author_IP>5.157.14.84</wp:comment_author_IP>
			<wp:comment_date>2015-08-07 17:26:32</wp:comment_date>
			<wp:comment_date_gmt>2015-08-07 21:26:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Along with submitting U.S. hallmark applications, we submit trademark applications in foreign nations 
throughout the globe.

My site; homepage - <a href="http://mail.4pets.es/php.php?a%5B%5D=trademark+common+law+rights+%28%3Ca+href%3Dhttp%3A%2F%2Fahovey.www.ww.isaev.infoww.isaev.info%2F%3Fa%255B%255D%3Dweb%2Bsite%2B%2528%253Ca%2Bhref%253Dhttp%253A%252F%252Fla.fnst.org%252F%253Foption%253Dcom_k2%2526view%253Ditemlist%2526task%253Duser%2526id%253D363483%253Estraight%2Bfrom%2Bthe%2Bsource%253C%252Fa%253E%2529%3Einvestigate+this+site%3C%2Fa%3E%29" rel="nofollow">Jamika</a>,]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438982792]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438982792.0399561;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Matthew]]></wp:comment_author>
			<wp:comment_author_email>rebbecagertz@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.benessereviaggi.com/prova.php?a%5B%5D=common+law+trademark+infringement+%28%3Ca+href%3Dhttp%3A%2F%2Fwww.cornice.by%2Findex.php%3Foption%3Dcom_phocaguestbook%26view%3Dguestbook%26id%3D1...%3</wp:comment_author_url>
			<wp:comment_author_IP>45.33.158.201</wp:comment_author_IP>
			<wp:comment_date>2015-08-08 00:27:00</wp:comment_date>
			<wp:comment_date_gmt>2015-08-08 04:27:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It will consist of an opinion letter on any sort of dangers discovered in the search.



Feel free to visit my site common law copyright notice - 
<a href="http://www.benessereviaggi.com/prova.php?a%5B%5D=common+law+trademark+infringement+%28%3Ca+href%3Dhttp%3A%2F%2Fwww.cornice.by%2Findex.php%3Foption%3Dcom_phocaguestbook%26view%3Dguestbook%26id%3D1...%3Eanonymous%3C%2Fa%3E%29" rel="nofollow">Matthew</a>,]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439008020]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439008020.6442571;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[car loans for bad credit no money down in pa]]></wp:comment_author>
			<wp:comment_author_email>bertstopford@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.pupo.ch/mypupo/panda/panda2/index.php?mod=users&amp;action=view&amp;id=439315</wp:comment_author_url>
			<wp:comment_author_IP>136.0.124.163</wp:comment_author_IP>
			<wp:comment_date>2015-08-11 23:43:02</wp:comment_date>
			<wp:comment_date_gmt>2015-08-12 03:43:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To get Ford extended cab truck, John needed an auto loan to sum 
up he desired to buy to utilize in his business activity.


Also visit my web site - <a href="http://www.pupo.ch/mypupo/panda/panda2/index.php?mod=users&amp;action=view&amp;id=439315" rel="nofollow">car loans for bad credit no money down in pa</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439350982]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439350982.7873609;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[buy a car with bad credit]]></wp:comment_author>
			<wp:comment_author_email>caridadfitts@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://smpn4banjar.sch.id/halkomentar-105-9778.html</wp:comment_author_url>
			<wp:comment_author_IP>104.144.65.137</wp:comment_author_IP>
			<wp:comment_date>2015-08-13 15:16:52</wp:comment_date>
			<wp:comment_date_gmt>2015-08-13 19:16:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Every one of the information on the loans and the way much you'll purchase a Provident loan.

My webpage :: <a href="http://smpn4banjar.sch.id/halkomentar-105-9778.html" rel="nofollow">buy a car with bad credit</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439493412]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439493412.888118;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Eleanor]]></wp:comment_author>
			<wp:comment_author_email>eloiselyster@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yutongdelamontana.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=100901</wp:comment_author_url>
			<wp:comment_author_IP>173.208.48.162</wp:comment_author_IP>
			<wp:comment_date>2015-08-13 16:54:18</wp:comment_date>
			<wp:comment_date_gmt>2015-08-13 20:54:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[By doing so, you will notice that the complete online buying spree will be 
a rewarding and nice expertise.

my web site :: Danon Jewellery Stockist [<a href="http://www.yutongdelamontana.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=100901" rel="nofollow">Eleanor</a>]]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439499258]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439499258.304673;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[Reta]]></wp:comment_author>
			<wp:comment_author_email>robbarth@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.sremac.org.rs/index.php?option=com_community&amp;view=profile&amp;userid=3951&amp;Itemid=0</wp:comment_author_url>
			<wp:comment_author_IP>23.19.154.95</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 04:06:14</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 08:06:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Properly helllo!

my website Joma Jewellery Sale (<a href="http://www.sremac.org.rs/index.php?option=com_community&amp;view=profile&amp;userid=3951&amp;Itemid=0" rel="nofollow">Reta</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439539574]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439539574.327996;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[Marla]]></wp:comment_author>
			<wp:comment_author_email>rickypenny@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://poltekkestanjungpinang.ac.id/index.php/buku-tamu</wp:comment_author_url>
			<wp:comment_author_IP>173.208.48.34</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 05:27:35</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 09:27:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In historic instances, men adorned themselves with detailed earrings even within the western world.


My page blog about Designer Jewellery - <a href="http://poltekkestanjungpinang.ac.id/index.php/buku-tamu" rel="nofollow">Marla</a> -]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439544455]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439544455.975872;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[jewellery next day delivery]]></wp:comment_author>
			<wp:comment_author_email>jessicadearborn@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://milkyway.cs.rpi.edu/milkyway/team_display.php?teamid=15540</wp:comment_author_url>
			<wp:comment_author_IP>23.19.155.139</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 06:48:23</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 10:48:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Get the video tour of the World Heritage Site and savor some 
of what's on provide.

Have a look at my web page <a href="http://milkyway.cs.rpi.edu/milkyway/team_display.php?teamid=15540" rel="nofollow">jewellery next day delivery</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439549303]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439549303.795254;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[Molly]]></wp:comment_author>
			<wp:comment_author_email>alexandriapulleine@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://cie.calpoly.edu/members/direfulsample4/bio/default.aspx</wp:comment_author_url>
			<wp:comment_author_IP>108.62.150.172</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 09:03:11</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 13:03:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mix good vogue sense and a high quality watch and you get a 
Philip Stein watch.

Here is my webpage; <a href="http://cie.calpoly.edu/members/direfulsample4/bio/default.aspx" rel="nofollow">Molly</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439557391]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439557391.1268671;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Danon Jewellery Stockist]]></wp:comment_author>
			<wp:comment_author_email>kellearagon@justemail.net</wp:comment_author_email>
			<wp:comment_author_url>http://milkyway.cs.rpi.edu/milkyway/team_display.php?teamid=15540</wp:comment_author_url>
			<wp:comment_author_IP>107.153.2.24</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 09:05:04</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 13:05:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In your seek for the proper supplier, contemplate those that have ethically sourced the stones.


Here is my webpage <a href="http://milkyway.cs.rpi.edu/milkyway/team_display.php?teamid=15540" rel="nofollow">Danon Jewellery Stockist</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439557504]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439557504.3398299;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[uk jewellery shops]]></wp:comment_author>
			<wp:comment_author_email>philomena.rapp@aol.com</wp:comment_author_email>
			<wp:comment_author_url>https://netplusadmdev0.internet2.edu/community/index.php?p=/profile/13907/direfulsample4</wp:comment_author_url>
			<wp:comment_author_IP>23.19.153.95</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 10:31:27</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 14:31:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks!

Here is my web page - <a href="https://netplusadmdev0.internet2.edu/community/index.php?p=/profile/13907/direfulsample4" rel="nofollow">uk jewellery shops</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439562687]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439562687.9714069;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[joma jewellery flower girl]]></wp:comment_author>
			<wp:comment_author_email>harlan_caldwell@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.latrashnoche.com/alieno/e107_plugins/guestbook/index.php?thankyou&amp;ar=138</wp:comment_author_url>
			<wp:comment_author_IP>192.255.101.207</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 10:34:13</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 14:34:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Use jewellery so as to add a signature flair to your wardrobe.


Visit my page - <a href="http://www.latrashnoche.com/alieno/e107_plugins/guestbook/index.php?thankyou&amp;ar=138" rel="nofollow">joma jewellery flower girl</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439562853]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439562853.147644;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Sommer]]></wp:comment_author>
			<wp:comment_author_email>refugiomcgirr@vegemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.premed.fudan.edu.cn/premedforum/user/profile/322759.page</wp:comment_author_url>
			<wp:comment_author_IP>23.247.140.158</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 10:41:42</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 14:41:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[An example of that is the Napier goldtone and turquoise beaded 
necklace.

Here is my web site - <a href="http://www.premed.fudan.edu.cn/premedforum/user/profile/322759.page" rel="nofollow">Sommer</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439563302]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439563302.7960491;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Miriam]]></wp:comment_author>
			<wp:comment_author_email>helennegrete@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://h2obeta.law.harvard.edu/viewProfile.do?userId=1591595</wp:comment_author_url>
			<wp:comment_author_IP>108.62.150.88</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 10:46:08</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 14:46:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Let us know what information and updates you wish to hear about and we'll send them straight to your inbox.


Take a look at my homepage; <a href="http://h2obeta.law.harvard.edu/viewProfile.do?userId=1591595" rel="nofollow">Miriam</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439563568]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439563568.391089;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Preston]]></wp:comment_author>
			<wp:comment_author_email>levi_eckert@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dynamicmoncton.com/a-dynamic-civic-makeover/civic/</wp:comment_author_url>
			<wp:comment_author_IP>173.234.169.87</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 13:18:07</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 17:18:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Recent greens, eggs, chutneys and sauces - these do very nicely 
at farmers markets and county fairs.

Feel free to surf to my weblog Joma Jewellery (<a href="http://www.dynamicmoncton.com/a-dynamic-civic-makeover/civic/" rel="nofollow">Preston</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439572687]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439572687.9432721;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[how to buy a car with bad credit]]></wp:comment_author>
			<wp:comment_author_email>phillipptimperley@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.aaaaaaaaa9.com/video-fmt22/BKsu_wSdKYU/-nbsp.html</wp:comment_author_url>
			<wp:comment_author_IP>192.241.82.216</wp:comment_author_IP>
			<wp:comment_date>2015-08-14 17:21:21</wp:comment_date>
			<wp:comment_date_gmt>2015-08-14 21:21:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nevertheless, the capabilities of pay day loan as well as loan volume, cycle of tenure and RATE may differ according to 
the creditors.

Here is my web page <a href="http://www.aaaaaaaaa9.com/video-fmt22/BKsu_wSdKYU/-nbsp.html" rel="nofollow">how to buy a car with bad credit</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439587281]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439587282.004457;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[bad credit auto loans phoenix]]></wp:comment_author>
			<wp:comment_author_email>quinton_lipscomb@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ericd.net/guestbook/index.php</wp:comment_author_url>
			<wp:comment_author_IP>23.27.21.65</wp:comment_author_IP>
			<wp:comment_date>2015-08-15 23:37:38</wp:comment_date>
			<wp:comment_date_gmt>2015-08-16 03:37:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Shoppers could qualify at the time of January 2010, for an auto 
refinance rate of 4.34 percent.

Take a look at my weblog ... <a href="http://ericd.net/guestbook/index.php" rel="nofollow">bad credit auto loans phoenix</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439696258]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439696258.5683501;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[www.hotel-sposad.ru]]></wp:comment_author>
			<wp:comment_author_email>orenmiah@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Www.Hotel-Sposad.ru/component/k2/author/4775</wp:comment_author_url>
			<wp:comment_author_IP>172.245.135.33</wp:comment_author_IP>
			<wp:comment_date>2015-08-15 23:41:14</wp:comment_date>
			<wp:comment_date_gmt>2015-08-16 03:41:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've been exploring for a bit for any high-quality articles or blog posts on this 
kind of space . Exploring in Yahoo I finally stumbled upon this web site.
Studying this info So i am happy to convey that I've an incredibly 
just right uncanny feeling I found out just what 
I needed. I most indubitably will make sure to don?t disregard this website and 
give it a look regularly.

Look into my site; <a href="http://Www.Hotel-Sposad.ru/component/k2/author/4775" rel="nofollow">www.hotel-sposad.ru</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439696474]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439696474.721837;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[Melodee]]></wp:comment_author>
			<wp:comment_author_email>kristibronner@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://quepasia.com/story.php?title=rapper-s-blamed-on-overdose</wp:comment_author_url>
			<wp:comment_author_IP>8.29.127.98</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 00:00:44</wp:comment_date>
			<wp:comment_date_gmt>2015-08-16 04:00:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This support carries a personalized and inclusive credit analysis together with 
particular guidance and training.

Also visit my web blog; auto loans bad credit (<a href="http://quepasia.com/story.php?title=rapper-s-blamed-on-overdose" rel="nofollow">Melodee</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439697644]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439697644.303731;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[Dentalsurgeryma.Com]]></wp:comment_author>
			<wp:comment_author_email>marielhornsby@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://dentalsurgeryma.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=383799</wp:comment_author_url>
			<wp:comment_author_IP>104.227.49.26</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 11:53:31</wp:comment_date>
			<wp:comment_date_gmt>2015-08-16 15:53:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[whoah this blog is magnificent i like reading your posts.
Keep up the good work! You understand, many people are 
looking round for this information, you can aid them greatly.


My blog post; <a href="http://dentalsurgeryma.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=383799" rel="nofollow">Dentalsurgeryma.Com</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439740411]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439740411.7093561;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[Jacklyn]]></wp:comment_author>
			<wp:comment_author_email>cooperniven@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://ipraiseonline.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=145267</wp:comment_author_url>
			<wp:comment_author_IP>23.95.62.250</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 12:00:33</wp:comment_date>
			<wp:comment_date_gmt>2015-08-16 16:00:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We stumbled over here from a different web address and thought I might as 
well check things out. I like what I see so 
i am just following you. Look forward to looking over your web page yet again.

Feel free to surf to my weblog ... <a href="http://ipraiseonline.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=145267" rel="nofollow">Jacklyn</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439740833]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439740833.2533171;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[russellscottmusic.Com]]></wp:comment_author>
			<wp:comment_author_email>sylvia_mungomery@vegemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://russellscottmusic.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=243593</wp:comment_author_url>
			<wp:comment_author_IP>172.102.203.70</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 12:55:02</wp:comment_date>
			<wp:comment_date_gmt>2015-08-16 16:55:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Heya just wanted to give you a quick heads up and let you know a 
few of the images aren't loading correctly.
I'm not sure why but I think its a linking issue.

I've tried it in two different web browsers and both show the 
same results.

my homepage: <a href="http://russellscottmusic.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=243593" rel="nofollow">russellscottmusic.Com</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439744102]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439744102.566134;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[Selena]]></wp:comment_author>
			<wp:comment_author_email>maziecabe@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://nmc-obolon.com.ua/index.php/item/366-%D0%B7-%D0%B4%D0%BD%D0%B5%D0%BC-%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%BE%D0%B3%D0%B8</wp:comment_author_url>
			<wp:comment_author_IP>136.0.110.179</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 21:56:27</wp:comment_date>
			<wp:comment_date_gmt>2015-08-17 01:56:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When the deposit is what stands between your GA home-loan and you, the Ga Dream Homeownership system will help you too.


Feel free to visit my website loans for bad credit in Atlanta Ga - 
<a href="http://nmc-obolon.com.ua/index.php/item/366-%D0%B7-%D0%B4%D0%BD%D0%B5%D0%BC-%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%BE%D0%B3%D0%B8" rel="nofollow">Selena</a>,]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439776587]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439776587.2883911;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[Adrienne]]></wp:comment_author>
			<wp:comment_author_email>carissavlamingh@mailservice.ms</wp:comment_author_email>
			<wp:comment_author_url>http://444wellness.com/get-pay-usedcars/</wp:comment_author_url>
			<wp:comment_author_IP>104.144.59.3</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 22:17:17</wp:comment_date>
			<wp:comment_date_gmt>2015-08-17 02:17:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For once you get an Oakland Seven, you are operating one of the most potent passenger car of 
fat and its dimension ever made.

My web site ... buy a car with bad credit rochester ny - <a href="http://444wellness.com/get-pay-usedcars/" rel="nofollow">Adrienne</a> -]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439777837]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439777837.9578819;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[auto loans bad credit]]></wp:comment_author>
			<wp:comment_author_email>burton.maguire@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.l3ba.net/profile/normanlampe</wp:comment_author_url>
			<wp:comment_author_IP>104.250.226.37</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 22:19:52</wp:comment_date>
			<wp:comment_date_gmt>2015-08-17 02:19:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dan wants to repay this loan as swiftly as you can to lessen the loan's general expense.


Feel free to visit my webpage ... <a href="http://www.l3ba.net/profile/normanlampe" rel="nofollow">auto loans bad credit</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439777992]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439777992.3326769;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[Maureen]]></wp:comment_author>
			<wp:comment_author_email>jonwozniak@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.topfi.fr/index.php?option=com_phocaguestbook&amp;view=phocaguestbook&amp;id=1&amp;Itemid=28&amp;t=120</wp:comment_author_url>
			<wp:comment_author_IP>136.0.124.224</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 22:21:43</wp:comment_date>
			<wp:comment_date_gmt>2015-08-17 02:21:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Unlike refinancing mortgage, automobile loan refinancing is more unconcerned with inspections.


Feel free to surf to my web page; how to buy a car 
with bad credit (<a href="http://www.topfi.fr/index.php?option=com_phocaguestbook&amp;view=phocaguestbook&amp;id=1&amp;Itemid=28&amp;t=120" rel="nofollow">Maureen</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439778103]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439778103.069952;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[bad credit auto loan payment calculator]]></wp:comment_author>
			<wp:comment_author_email>kayleneharvard@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cc-athletics.com/5-wins-for-cca-12u-and-14u/</wp:comment_author_url>
			<wp:comment_author_IP>104.144.65.35</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 22:23:27</wp:comment_date>
			<wp:comment_date_gmt>2015-08-17 02:23:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fluid leaking from the vehicle could suggest fast repairs are essential, 
or it could be something completely standard.


Here is my web-site <a href="http://www.cc-athletics.com/5-wins-for-cca-12u-and-14u/" rel="nofollow">bad credit auto loan payment calculator</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439778207]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439778207.0780859;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[Denice]]></wp:comment_author>
			<wp:comment_author_email>kennymcclemens@animail.net</wp:comment_author_email>
			<wp:comment_author_url>http://ayassociatesllc.com/resources/blog/item/1-what-we-re-reading</wp:comment_author_url>
			<wp:comment_author_IP>172.85.106.29</wp:comment_author_IP>
			<wp:comment_date>2015-08-16 22:31:38</wp:comment_date>
			<wp:comment_date_gmt>2015-08-17 02:31:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This car capital method is good for everyone including individuals with bad credit.



Also visit my homepage :: auto loans bad credit low interest 
[<a href="http://ayassociatesllc.com/resources/blog/item/1-what-we-re-reading" rel="nofollow">Denice</a>]]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439778698]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439778698.1914699;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Sibyl]]></wp:comment_author>
			<wp:comment_author_email>nevillesidney@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://u004.ictech.kr/board_YdZb78/118309</wp:comment_author_url>
			<wp:comment_author_IP>23.94.77.108</wp:comment_author_IP>
			<wp:comment_date>2015-08-17 00:17:56</wp:comment_date>
			<wp:comment_date_gmt>2015-08-17 04:17:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Finance Corporation delivers poor and personal credit loans around $ 5,000 want 
it quickly and to help individuals who require cash.

My web page ... buy a car with bad credit in virginia (<a href="http://u004.ictech.kr/board_YdZb78/118309" rel="nofollow">Sibyl</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439785076]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439785076.8189919;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[Lake Shelbyville]]></wp:comment_author>
			<wp:comment_author_email>horacerountree@mailas.com</wp:comment_author_email>
			<wp:comment_author_url>http://kardanco.ir/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=191451</wp:comment_author_url>
			<wp:comment_author_IP>69.25.236.35</wp:comment_author_IP>
			<wp:comment_date>2015-08-17 14:20:37</wp:comment_date>
			<wp:comment_date_gmt>2015-08-17 18:20:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am not sure where you're getting your information, but good topic.

I needs to spend some time learning much more or understanding more.
Thanks for fantastic information I was looking for this info for my mission.

Review my homepage; <a href="http://kardanco.ir/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=191451" rel="nofollow">Lake Shelbyville</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439835637]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439835637.021292;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[Leonard]]></wp:comment_author>
			<wp:comment_author_email>dominic.sceusa@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://ideatutoring.org/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=309747</wp:comment_author_url>
			<wp:comment_author_IP>23.95.18.53</wp:comment_author_IP>
			<wp:comment_date>2015-08-17 14:48:54</wp:comment_date>
			<wp:comment_date_gmt>2015-08-17 18:48:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Heya! I understand this is somewhat off-topic but I 
needed to ask. Does running a well-established website such as yours take a massive amount work?
I am completely new to operating a blog however I do write in my diary every day.
I'd like to start a blog so I can easily share my experience and 
thoughts online. Please let me know if you have 
any recommendations or tips for brand new aspiring bloggers.
Appreciate it!

My site ... <a href="http://ideatutoring.org/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=309747" rel="nofollow">Leonard</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439837334]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439837334.766922;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[http://Newrich25.dothome.co.kr]]></wp:comment_author>
			<wp:comment_author_email>ferne.luckett@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://newrich25.dothome.co.kr/xe/?document_srl=1789658</wp:comment_author_url>
			<wp:comment_author_IP>23.95.89.12</wp:comment_author_IP>
			<wp:comment_date>2015-08-17 20:51:26</wp:comment_date>
			<wp:comment_date_gmt>2015-08-18 00:51:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's up friends, pleasant article and nice urging commented here, I 
am in fact enjoying by these.

My page :: <a href="http://newrich25.dothome.co.kr/xe/?document_srl=1789658" rel="nofollow">http://Newrich25.dothome.co.kr</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439859086]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439859086.083343;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[Kattie]]></wp:comment_author>
			<wp:comment_author_email>leanne.phillips@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://ccgi.da-edge.co.uk//modules.php/modules.php?name=Your_Account&amp;op=userinfo&amp;username=RobertaMyh</wp:comment_author_url>
			<wp:comment_author_IP>136.0.96.50</wp:comment_author_IP>
			<wp:comment_date>2015-08-17 20:52:15</wp:comment_date>
			<wp:comment_date_gmt>2015-08-18 00:52:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You will be asked factual statements about your car just like the year of production, 
accident record, etc.

Stop by my weblog :: car loan with bad credit (<a href="http://ccgi.da-edge.co.uk//modules.php/modules.php?name=Your_Account&amp;op=userinfo&amp;username=RobertaMyh" rel="nofollow">Kattie</a>)]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439859135]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439859135.982518;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[fha loans dallas]]></wp:comment_author>
			<wp:comment_author_email>velda_bouton@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://gioiedia.com/index.php/component/k2/itemlist/user/92750</wp:comment_author_url>
			<wp:comment_author_IP>172.85.101.218</wp:comment_author_IP>
			<wp:comment_date>2015-08-18 01:07:04</wp:comment_date>
			<wp:comment_date_gmt>2015-08-18 05:07:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[After the fallout of the subprime and also Alt-A loan markets 
in 2007, FHA Loans have actually received a new try of power throughout the housing market.


Feel free to visit my weblog ... <a href="http://gioiedia.com/index.php/component/k2/itemlist/user/92750" rel="nofollow">fha loans dallas</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439874424]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439874424.7006409;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[www.tranzit.com.co]]></wp:comment_author>
			<wp:comment_author_email>lawannablanks@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.tranzit.com.co/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=108726</wp:comment_author_url>
			<wp:comment_author_IP>89.33.43.159</wp:comment_author_IP>
			<wp:comment_date>2015-08-18 12:29:53</wp:comment_date>
			<wp:comment_date_gmt>2015-08-18 16:29:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[An exceptional way to kindly your children with a 
pc gaming hvac as well as guarantee they remain fit is to acquire a Nintendo Wii.


Look at my blog post :: <a href="http://www.tranzit.com.co/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=108726" rel="nofollow">www.tranzit.com.co</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439915393]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439915393.6834061;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[www.apartmentcareers.com]]></wp:comment_author>
			<wp:comment_author_email>luis.bennet@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.apartmentcareers.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=254691</wp:comment_author_url>
			<wp:comment_author_IP>89.32.123.174</wp:comment_author_IP>
			<wp:comment_date>2015-08-18 12:52:59</wp:comment_date>
			<wp:comment_date_gmt>2015-08-18 16:52:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You ought to have the ability to locate 1 or 2 actually fantastic 
walkthroughs and also have them all set to gain access to throughout play.


Feel free to surf to my webpage - <a href="http://www.apartmentcareers.com/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=254691" rel="nofollow">www.apartmentcareers.com</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439916779]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439916779.136318;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[Jason]]></wp:comment_author>
			<wp:comment_author_email>keeleywatsford@live.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.funtastic-party.de/partner/hebammenpraxis/board/index.php?page=User&amp;userID=995925</wp:comment_author_url>
			<wp:comment_author_IP>45.33.155.79</wp:comment_author_IP>
			<wp:comment_date>2015-08-18 20:14:41</wp:comment_date>
			<wp:comment_date_gmt>2015-08-19 00:14:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When you attacked 78 % LTV to get PMI gotten rid of, merely keep in mind that you 
need to be current on your mortgage.

Look at my page: fha lender texas [<a href="http://www.funtastic-party.de/partner/hebammenpraxis/board/index.php?page=User&amp;userID=995925" rel="nofollow">Jason</a>]]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439943281]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439943281.442801;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[car loan for bad credit]]></wp:comment_author>
			<wp:comment_author_email>daltonsidaway@live.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.iris-web.com/yqy128-3/p_20110917143416308443</wp:comment_author_url>
			<wp:comment_author_IP>45.59.22.39</wp:comment_author_IP>
			<wp:comment_date>2015-09-02 13:52:40</wp:comment_date>
			<wp:comment_date_gmt>2015-09-02 17:52:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[At, we want to help you get attached to the financing you need.



Here is my page; <a href="http://www.iris-web.com/yqy128-3/p_20110917143416308443" rel="nofollow">car loan for bad credit</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441216360]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441216360.494576;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[http://www.soddosdlsd.com]]></wp:comment_author>
			<wp:comment_author_email>evelynammons@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.soddosdlsd.com</wp:comment_author_url>
			<wp:comment_author_IP>23.19.155.249</wp:comment_author_IP>
			<wp:comment_date>2015-09-02 14:43:38</wp:comment_date>
			<wp:comment_date_gmt>2015-09-02 18:43:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[May I simply say what a comfort to find somebody that really knows what they're talking 
about on the internet. You definitely realize how to bring a problem to light and make it important.

More and more people must read this and understand this side of 
your story. It's surprising you are not more popular given that you certainly possess the gift.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441219418]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441219418.45049;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[joven skin care cost]]></wp:comment_author>
			<wp:comment_author_email>karolyn.boland@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mathmarkstrainones.com</wp:comment_author_url>
			<wp:comment_author_IP>23.232.176.75</wp:comment_author_IP>
			<wp:comment_date>2015-09-02 15:53:11</wp:comment_date>
			<wp:comment_date_gmt>2015-09-02 19:53:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As the admin of this web site is working, no doubt very soon it 
will be famous, due to its feature contents.

Feel free to surf to my site; <a href="http://www.mathmarkstrainones.com" rel="nofollow">joven skin care cost</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441223591]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441223591.897835;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[Micheline]]></wp:comment_author>
			<wp:comment_author_email>mericolechin@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.soddosdlsd.com</wp:comment_author_url>
			<wp:comment_author_IP>173.208.48.116</wp:comment_author_IP>
			<wp:comment_date>2015-09-02 17:05:31</wp:comment_date>
			<wp:comment_date_gmt>2015-09-02 21:05:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi i am kavin, its my first occasion to commenting 
anywhere, when i read this paragraph i thought 
i could also create comment due to this sensible paragraph.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441227931]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441227931.943176;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[doctorvdome.ru]]></wp:comment_author>
			<wp:comment_author_email>guybuley@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.doctorvdome.ru/?option=com_k2&amp;view=itemlist&amp;task=user&amp;id=185142</wp:comment_author_url>
			<wp:comment_author_IP>198.55.96.45</wp:comment_author_IP>
			<wp:comment_date>2015-09-02 21:25:40</wp:comment_date>
			<wp:comment_date_gmt>2015-09-03 01:25:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It has a ceramic heating element that is very effective 
and makes the vaporizing process a real joy. Vapir vaporizer is an ambient aromatherapy vaporizer 
that can also be used for flavor delivery. Once these pollutants are allows to enter 
the lungs they have the potential to spread and eventually produce harm to 
other vital organs in the body.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441243540]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441243540.8037751;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[joven skin care ingredients]]></wp:comment_author>
			<wp:comment_author_email>franziskagiorza@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mathmarkstrainones.com</wp:comment_author_url>
			<wp:comment_author_IP>23.19.176.187</wp:comment_author_IP>
			<wp:comment_date>2015-09-02 21:38:00</wp:comment_date>
			<wp:comment_date_gmt>2015-09-03 01:38:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have read so many articles or reviews on the topic of the 
blogger lovers however this piece of writing is truly a pleasant article, keep it up.


Also visit my webpage - <a href="http://www.mathmarkstrainones.com" rel="nofollow">joven skin care ingredients</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441244280]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441244280.229759;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[skin cream]]></wp:comment_author>
			<wp:comment_author_email>nannette_angela@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mathmarkstrainones.com</wp:comment_author_url>
			<wp:comment_author_IP>23.247.182.167</wp:comment_author_IP>
			<wp:comment_date>2015-09-03 00:15:20</wp:comment_date>
			<wp:comment_date_gmt>2015-09-03 04:15:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I was very pleased to discover this website.
I want to to thank you for ones time for this wonderful read!!
I definitely really liked every bit of it and i also have you book marked 
to look at new information on your web site.

Review my website :: <a href="http://www.mathmarkstrainones.com" rel="nofollow">skin cream</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441253720]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441253720.335777;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[www.kongunadu-engg.com]]></wp:comment_author>
			<wp:comment_author_email>charis_coulter@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.kongunadu-engg.com/index.php/component/k2/item/158-kncet-it-conference?limitstart=0</wp:comment_author_url>
			<wp:comment_author_IP>198.55.96.14</wp:comment_author_IP>
			<wp:comment_date>2015-09-03 00:31:49</wp:comment_date>
			<wp:comment_date_gmt>2015-09-03 04:31:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There's always several things that should be completed in a day and merely getting everything done can be a tough 
task, specially when all of the employees are running around attempting 
to finish what they need to get accomplished. As 
the best PC Driver helper for Windows users, it should backs up, restores, and updates 
your device drivers automatically. Drake tax software on cloud provider uses the state of the art premium digital video recorder 
system.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441254709]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441254709.536716;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[вадиван.xn--p1ai]]></wp:comment_author>
			<wp:comment_author_email>marshaprell@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://xn--80aaebjy1b.xn--p1ai/index.php/2014-05-22-09-54-07/k2-categories/business/item/3?limitstart=0</wp:comment_author_url>
			<wp:comment_author_IP>198.55.96.45</wp:comment_author_IP>
			<wp:comment_date>2015-09-03 03:45:26</wp:comment_date>
			<wp:comment_date_gmt>2015-09-03 07:45:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There are several myths surrounding Christian dating which most Christian singles fall into.
Follow these 4 suggestions and you will never go wrong:
. Yes, we are to be a light in the world for non-Christians but it is beyond our earthly 
power to convert someone to our faith either with words or direct action on our part.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441266326]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441266326.9110351;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[where to buy joven skin care]]></wp:comment_author>
			<wp:comment_author_email>lanny.tong@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mathmarkstrainones.com</wp:comment_author_url>
			<wp:comment_author_IP>23.19.176.187</wp:comment_author_IP>
			<wp:comment_date>2015-09-03 08:57:52</wp:comment_date>
			<wp:comment_date_gmt>2015-09-03 12:57:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do consider all of the ideas you've introduced to your post.
They are very convincing and will definitely work.
Still, the posts are too quick for newbies. May you please extend them a little from next time?
Thank you for the post.

Feel free to surf to my site - <a href="http://www.mathmarkstrainones.com" rel="nofollow">where to buy joven skin care</a>]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441285072]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441285072.8965311;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[www.slowfoodmcg.it]]></wp:comment_author>
			<wp:comment_author_email>aguedasessums@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.slowfoodmcg.it/le-nostre-attivita/orto-incantato/cuochi-senza-fuochi.html</wp:comment_author_url>
			<wp:comment_author_IP>216.45.53.188</wp:comment_author_IP>
			<wp:comment_date>2015-09-03 12:51:39</wp:comment_date>
			<wp:comment_date_gmt>2015-09-03 16:51:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[She has come to your website for information, not to criticise your buttons and headings.
For more details <A>  In every Ebook. If Google intends improving the experience of its visitors searching for information, then multiple listings differing only by several synonym changes will be targeted - as, in fact, they are - and those pages that benefit will likely be manually written rather than by use of software: algorithms can detect content with he same paragraph and sentence structure that changes only in its vocabulary.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441299099]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441299099.0897701;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[buy a car with bad credit in nj]]></wp:comment_author>
			<wp:comment_author_email>lanorawaldman@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ironhussars.com/index.php/ksiega-gosci</wp:comment_author_url>
			<wp:comment_author_IP>172.85.105.234</wp:comment_author_IP>
			<wp:comment_date>2015-09-08 17:35:57</wp:comment_date>
			<wp:comment_date_gmt>2015-09-08 21:35:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I went along to HR stop several days before because I was elligable for a very first time homebuyers credit.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441748157]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441748157.9454961;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[Esteban]]></wp:comment_author>
			<wp:comment_author_email>erikpoupinel@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://festivalabamakoise.com/index.php/component/k2/item/4-de-jeugd-mag-een-tumor-krijgen-wat-een-kankerproductie-zeg?limitstart=0</wp:comment_author_url>
			<wp:comment_author_IP>104.251.88.249</wp:comment_author_IP>
			<wp:comment_date>2015-09-08 18:02:42</wp:comment_date>
			<wp:comment_date_gmt>2015-09-08 22:02:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In obtaining credit aid and an auto loan bad 
credit auto loan funding to aid people with assets.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441749762]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441749762.464412;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas]]></wp:comment_author>
			<wp:comment_author_email>randellclifton@live.de</wp:comment_author_email>
			<wp:comment_author_url>http://randomdomain.org</wp:comment_author_url>
			<wp:comment_author_IP>192.210.226.242</wp:comment_author_IP>
			<wp:comment_date>2015-09-08 20:13:28</wp:comment_date>
			<wp:comment_date_gmt>2015-09-09 00:13:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's up to all, how is the whople thing, I think every one is getting more from this 
web page, and your views are pleasant for new visitors.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441757608]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441757608.82358;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[Malik Embery]]></wp:comment_author>
			<wp:comment_author_email>Vongvivath19684@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.myowndomain12345d.com</wp:comment_author_url>
			<wp:comment_author_IP>94.23.158.194</wp:comment_author_IP>
			<wp:comment_date>2015-11-09 15:14:29</wp:comment_date>
			<wp:comment_date_gmt>2015-11-09 20:14:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[this. You must continue your writing. I am sure, you’ve a great readers’ base already!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1447100069]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1447100069.577827;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Can&#039;t find the C/C++ project option in Eclipse after install CDT on Mac OS</title>
		<link>http://godlzr.com/index.php/2015/03/25/cant-find-the-cc-project-option-in-eclipse-after-install-cdt-on-mac-os/</link>
		<pubDate>Wed, 25 Mar 2015 04:56:37 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=32</guid>
		<description></description>
		<content:encoded><![CDATA[Eclipse Luna + MacOS 10.10 Yosemite

After installing CDT, can't find the c/c++ project option under new menu.

Try to install the latest version JDK, and restart eclipse.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2015-03-25 04:56:37</wp:post_date>
		<wp:post_date_gmt>2015-03-25 04:56:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cant-find-the-cc-project-option-in-eclipse-after-install-cdt-on-mac-os</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="eclipse"><![CDATA[Eclipse]]></category>
		<category domain="category" nicename="issues-solution"><![CDATA[Issues Solution]]></category>
		<category domain="post_tag" nicename="macos"><![CDATA[MacOS]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056026266]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13056026266]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>【转载】C++ 位运算详解</title>
		<link>http://godlzr.com/index.php/2015/03/25/c_bit_operation/</link>
		<pubDate>Wed, 25 Mar 2015 17:58:30 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=34</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>位简介</h3>
位是数据存储的最小单位。在 计算机中的二进制数系统中，位，简记为b,也称为比特，每个0或1就是一个位(bit)。
<h3>位操作详解</h3>
我们先来看看位运算操作符：&amp; (按位与)、| (按位或)、^ (按位异或)、~ (按位取反)、&gt;&gt; (按位右移)、&lt;&lt; (按位左移)。

1、&amp;（按位与） 从概念上来讲，就是将参与运算的两个分量对应的每一位来做逻辑与运算，若两者都为真（等于1），则结果才为真（等于1）。否则都为假（等于0）。
即：1 &amp; 1 = 1 、1&amp;0 = 0 、0&amp;1 = 1、0&amp;0 = 0
这里我们先来看看那一个8位二进制的例子：
7&amp;8 = 0000 0111 &amp; 0000 1000 = 0000 0000 = 0
7&amp;6 = 0000 0111 &amp; 0000 0110 = 0000 0110 = 6<span id="more-82"></span>

2、| (按位或) 即把参与运算的每个分量对应的每一位来做逻辑或运算，即两者都为假（为0）时，才为假（为0），否则皆为真。
即：0|0 = 0、1|0 = 1、0|1 = 1、1|1 = 1
来看看8位二进制的例子：
7|8 = 0000 0111 | 0000 1000 = 0000 1111 = 15
7|6 = 0000 0111 | 0000 0110 = 0000 0111 = 7

3、^(按位异或) 即把参与运算的每个分量对应的每一位来做异或运算，即两者相同为假，不同为真。
即：0|0 = 0、 1|0 = 1、0|1 = 1、 1|1 = 0
看下面的例子:
7^8 = 0000 0111 ^ 0000 1000 = 0000 0111 = 7
7^6 = 0000 0111 ^ 0000 0100 = 0000 0011 = 3

4、~（按位取反） 即把二进制位的每一位进行取反运算，简而言之就是1变成0，0变成1。
直接看例子：
~7 = ~0000 0111 = 1111 1000 = 248

5 &gt;&gt;（按位右移）把二进制位整体向右移动。
7&gt;&gt;1 = 0000 0111 &gt;&gt; 1 = 0000 0011 = 3
7&gt;&gt;2 = 0000 0111 &gt;&gt; 2 = 0000 0001 = 1
这里右移等于除了2的N次方，N为右移的位数。

6 &lt;&lt;（按位左移）这里就不详细说了，和右移相反。
<h3>位操作应用</h3>
好了，下面讲讲实际应用吧。
一、一种颜色的表示方式—- 通过DWORD来表示颜色
定义：typedef unsigned long DWORD;
即为一个无符号32位（32机器）长整数，有四个字节，我们从左到右叫他1，2，3，4字节，每一个字节的范围是0～255。第一个字节表示alpha值，即透明度。如果是255，表示不透明，0表示完全透明（

看不到），其他分别是R,G,B值。
可通过下列方法获得每个字节的值：
int A = (int)((DWORD &amp; 0xFF000000) &gt;&gt; 24);
int R = (int)((DWORD &amp; 0x00FF0000) &gt;&gt; 16);
int G = (int)((DWORD &amp; 0x0000FF00) &gt;&gt; 8);
int B = (int)(DWORD &amp; 0x000000FF);

DWORD dwColor = (A&lt;&lt;24)+(R&lt;&lt;16)+(G&lt;&lt;8)+B;
有了前面的基础，我相信大家对上面的换算方法，一看就明白吧。如果对16进制不敏感的童鞋，可以用计算机把十六进制换算成二进制，更容易理解。

二、状态系统中的使用

在游戏开发中，我们通常用一个32位（假设这里用32位）的整数来存储角色的状态(这样做主要是为了节约存储空间，同时也减小网络同步消息包的size)。所谓的状态，就是大家熟悉的Buff或者DeBuff。
enum ROLE_STATUS
{
STATUS_NORMAL = 0, // 正常
STATUS_DIE = 1, // 死亡状态
STATUS_GOD , // 无敌
STATUS_DISAPPEARING , // 消失中状态
STATUS_DEF_ADJUST , // 物理防御提升/降低
STATUS_MDEF_ADJUST , // 魔法防御提升/降低
STATUS_ATK_CRI_ADJUST , // 同时提升物理攻击和爆击率
STATUS_MAXHP_ADJUST , // HP上限调整
STATUS_MAXMP_ADJUST , // MP上限提升/降低
//……
这里最多只能写32个，因为我们假设是用32位数据来存储状态。
};

状态数据定义好了，现在来看看怎么使用他们。
首先， 角色上线，我要给他一个保护状态，应该这样操作。
DWORD dwRoleStatus = STATUS_GOD;
同时，角色使用了一个物品，这个物品的效果时，HP和MP上限增加一段时间。因此要附加调整玩家的HP和MP上限的状态，应该这样。
DWORD dwRoleStatus |= (STATUS_MAXHP_ADJUST+STATUS_MAXMP_ADJUST);
这里是|=而不是=操作，因为不能清掉之前附加的无敌保护状态。所以用或运算。
该角色受到其他玩家或者怪物的攻击，我们要判断被攻击的这个角色的受保护状态状态还在不在。执行如下逻辑
if( dwRoleStatus &amp; STATUS_GOD ) // 判断位是否为1
{
// 受保护状态，不能被攻击
}

接下来，角色无敌保护时间过期了，我们要清除无敌状态，执行如下操作
dwRoleStatus &amp;= ~STATUS_GOD;
这里用到了取反的计算。~STATUS_GOD的结果是第二位为0外，其他都为1。然后和dwRoleStatus做按位与计算。
STATUS_GOD 等于 0000 0000 0000 0000 0000 0000 0000 0000 0000 0010;
~STATUS_GOD 等于 1111 1111 1111 1111 1111 1111 1111 1111 1111 1101;
因此和dwRoleStatus相与之后，dwRoleStatus除了第二位以外的位，都保留下来了。第二位不管是什么值，都会被设置为0,这样子就把STATUS_GOD这个状态清除掉了。同理我们要清除多个状态的时候，先把要清楚的状态或运算到一起。再取反，然后和dwRoleStatus按位与。起到同时清除多个状态。
<div>然后讲讲异或，它有一个性质是，两次异或，能还原回来</div>
<div>例如 a=7,b=6;</div>
<div>a = a^b^b</div>
<div>我们来看看那二进制的操作</div>
<div>a = 0111</div>
<div>b = 0110</div>
<div>c = a^b = 0001</div>
<div>a = c^b = 0111</div>
<div>写到这里，想到一道经典的C++笔试题，即不需要第3个变量，交换两个变量的值。</div>
<div>a = a^b = 0001</div>
<div>b = b^a = 0111</div>
<div>a = a^b = 0110</div>
<div>暂时写到这里，想到有补充的，再完善。</div>
<div></div>
<div>疯刀 2011.6.26</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2015-03-25 17:58:30</wp:post_date>
		<wp:post_date_gmt>2015-03-25 17:58:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>c_bit_operation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cc"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="cc"><![CDATA[C/C++]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e3%80%90%e8%bd%ac%e8%bd%bd%e3%80%91c-%e4%bd%8d%e8%bf%90%e7%ae%97%e8%af%a6%e8%a7%a3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Data Structures----Chapter 2 Linked List</title>
		<link>http://godlzr.com/index.php/2015/04/06/data-structures-chapter-2-linked-list/</link>
		<pubDate>Mon, 06 Apr 2015 00:06:19 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[<h6>2.1 Write code to remove duplicates from an unsorted linked list.</h6>
<h6>FOLLOW UP</h6>
<h6>How would you solve this problem if a temporary buffer is now allowed?</h6>
<ul>
	<li>如果可以使用临时区域，我们使用hash表来判断元素是否重复</li>
	<li>如果不使用临时区域，我们用两个指针，从前向后依次遍历判断是否有后继节点与之前的节点相同</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/LinkedList/linkedListHelper.java">Q2.1_Implementation</a></li>
</ul>
<h6>2.2 Implement an algorithm to find the kth to last element of a singly linked list.</h6>
<ul>
	<li>在单链表中找到倒数第k个元素</li>
	<li>如果链表的长度已知， 则倒数k个元素即正数（length-k），这种情况太简单，明显不是要考察的</li>
	<li>一种方法是使用递归，依次遍历到最后一个元素，然后向前递归查找第k个,需要一个全局变量来计数</li>
	<li>另种方法是双指针，两个指针差k位，同时向后移动至后指针指到最后一个元素，返回前指针指向的元素即可</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/LinkedList/linkedListHelper.java">Q2.2_Implementation</a></li>
</ul>
<h6>2.3 Implement an algorithm to delete a node in the middle of a singly linked list, given only access to that node.</h6>
<h6>EXAMPLE</h6>
<h6>Input: the node c from the linked list a-&gt;b-&gt;c-&gt;d-&gt;e</h6>
<h6>Result: nothing is returned, but the new linked list looks like a-&gt;b-&gt;d-&gt;e</h6>
<ul>
	<li>middle指的是中间的某个不是正中间</li>
	<li>需要考虑4种情况即，A: c为头节点，B: c 为中间节点， C: c为尾节点，D: c为null</li>
	<li>情况C比较特殊，因为你无法删除c，可以增加标志位，不打印c，来处理这种情况</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/LinkedList/linkedListHelper.java">Q2.3_Implementation</a></li>
</ul>
<h6>2.4 Write code to partition a linked list around a value x, such that all nodes less than x come before all node greater than or equal to x.</h6>
<ul>
	<li>不要求排序</li>
	<li>建立两个链表，一个大于x，一个小于x</li>
	<li>遍历链表，将元素加入这两个链表，然后将其拼接</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/LinkedList/linkedListHelper.java">Q2.4_Implementation</a></li>
</ul>
<h6>2.5 You have tow numbers represented by a linked list, where each node contains a single digit. The digits are stored in reverse order, such that the 1's digit is at the head of the list, Write a function that adds the two numbers and returns the sum as a linked list.</h6>
<h6>EXAMPLE</h6>
<h6>Input: (7-&gt;1-&gt;6) + (5-&gt;9-&gt;2). That is, 617+ 295.</h6>
<h6>Ouput: 2-&gt;1-&gt;9. That is, 912.</h6>
<h6>FOLLOW UP</h6>
<h6>Suppose the digits are stored in forward order. Repeat the above problem.</h6>
<h6>EXAMPLE</h6>
<h6>Input: (6-&gt;1-&gt;7) + (2-&gt;9-&gt;5). That is, 617 + 295.</h6>
<h6>Output: 9-&gt;1-&gt;2. That is, 912.</h6>
<ul>
	<li>答案给的是使用递归，建立新链表，按位相加。</li>
	<li>我自己写的是，先按位相加得到和，然后根据和构造sum链表</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/LinkedList/linkedListHelper.java">Q2.5_Implementation</a></li>
</ul>
<h6>2.6 Given a circular linked list, implement an algorithm which returns the node at the beginning of the loop.</h6>
<h6>DEFINITION</h6>
<h6>Circular linked list: A (corrupt) linked list in which a node's next pointer points to an earlier node, so as to make a loop in the linked list.</h6>
<h6>EXAMPLE</h6>
<h6>Input: A-&gt;B-&gt;C-&gt;D-&gt;E-&gt;C [the same C as earlier]</h6>
<h6>Output: C</h6>
<ul>
	<li>最简单的思路是使用hashmap，将元素一个个存入判断是否已存在</li>
	<li>返回第一个重复的元素，即环入口</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/LinkedList/linkedListHelper.java">Q2.6_Implementation</a>.</li>
</ul>
2.7 implement a function to check if a linked list is palindrome.
<ul>
	<li>思路是比较前一半的元素和后一半的元素</li>
	<li>可以使用栈，将前一半的元素压栈，然后和后一半的逐个比较。</li>
	<li>需要注意的是元素的个数是可能是奇数，加一个判断，为奇数就跳过中间的元素。</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/LinkedList/linkedListHelper.java">Q2.7_Implementation</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2015-04-06 00:06:19</wp:post_date>
		<wp:post_date_gmt>2015-04-06 00:06:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>data-structures-chapter-2-linked-list</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cracking-the-coding-interview-fifth-edition"><![CDATA[Cracking the Coding Interview (Fifth edition)]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Data Structure--Chapter 3 Stacks and Queues</title>
		<link>http://godlzr.com/index.php/2015/04/09/data-structure-chapter-3-stacks-and-queues/</link>
		<pubDate>Thu, 09 Apr 2015 03:29:22 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[3.1 Describe how you could use a single array to implement three stacks.
<ul>
	<li>We can divide the array into three equal parts,</li>
	<li>And the bases of each stack are 0, n/3, 2n/3,</li>
	<li>We can set a array to store the top of the stack,</li>
	<li>So we can implement pop() push(), peek().</li>
</ul>
3.2 How would you design a stack which, in addition to push and pop, also has a function min which returns the minimum element? Push, pop and min should all operate in O(1) time.
<ul>
	<li>设计一个stack，使他拥有方法min可以返回stack中的最小值，保证所有操作都是O(1).</li>
	<li>可以在stack中新增一个栈minStack，</li>
	<li>有元素压栈时判断其与minStack栈顶大小，小于栈顶，将其压入minStack栈</li>
	<li>弹栈时，判断是否为minStack栈顶元素，是一起弹栈</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/StacksQueues/StackWithMin.java">Q3.2_Implementation</a></li>
</ul>
3.3 Imagine a (literal) stack of plates. If the stack gets too high, it might topple. Therefore, in real life, we would likely start a new stack when the previous stack exceeds some threshold. Implement a data structure <em>SetOfStacks</em> that mimics this. <em>SetOfStacks</em> should be composed of several stacks and should create a new stack once the previous one exceeds capacity. <em>SetOfStacks.push()</em> and <em>SetOfStacks.pop(</em>) should behave identically to single stack (that is, pop() should return the same values as it would if there were just a singly stack).

FOLLOW UP

Implement a function <em>popAt(int index</em>) which performs a pop operation on a specific sub-stack.
<ul>
	<li>这里我们使用Vector&lt;Stack&gt; 来模拟这个SetOfStacks，需要给stack类添加一个length变量来保存其长度</li>
	<li>push：当当前的stack达到阀值长度，增加一个新的stack到vector中，在新的stack中push，标记加一</li>
	<li>pop：当单签的stack长度为1时，pop(),将该stack从vector中删除，并将标记减一</li>
	<li>popAt:对指定stack 弹栈操作，这里有一个问题，当弹位于中间的栈时，按照理论，之后的stack中的元素应该向下滑一位。</li>
	<li>这里较难处理，我们用一个新的栈tmpstack，当弹中部的栈时，将前面的栈中所有元素依次压入tmpstack，</li>
	<li>再将tmpstack中的所有元素依次弹栈俨如SetOfStacks.</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/StacksQueues/SetOfStacks.java">Q3.3_Implementation</a></li>
</ul>
3.4 In the classic problem of the Towers of Hanoi, you have 3 towers and N disks f different sizes which can slide onto any tower. The puzzle starts with disks sorted in ascending order of size from top to bottom (i.e., each disk sits on top of an even larger one). You have the following constraints:

(1) Only one disk can be moved at a time.

(2) A disk is slid off the top of one tower onto the next tower.

(3) A disk can only be placed on top of a larger disk.

Write a program to move the disks from the first tower to the last using stacks.
<ul>
	<li>汉诺塔的解法很简单，要把n个盘子移到最右柱子上，就要把n-1个移到中间，再把第n个移到右柱</li>
	<li>同理就要把就要把n-1个移到中间，就要n-2 移到右柱</li>
	<li>使用递归</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/StacksQueues/HanoiTower.java">Q3.4_Implementation</a></li>
</ul>
3.5 Implement a MyQueue class which implements a queue using two stacks.
<ul>
	<li>queue 是FIFO，stack是LIFO.</li>
	<li>使用两个栈，一个为入栈，一个为出栈</li>
	<li>enqueue时将所有元素压入入栈，进队的元素压入入栈栈顶，</li>
	<li>dequeue时将所有元素压入出栈，出队的元素从出栈栈顶弹出.</li>
	<li>为了减少不必要的移动我们在入队时不考虑出栈是否为空</li>
	<li>我们只要在出对是判断出栈是否为空，为空则将入栈元素压入出栈再出队即可.</li>
	<li>两实现</li>
</ul>
<ul>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/StacksQueues/MyQueue.java">Q3.5_Implementation</a></li>
</ul>
3.6 Write a program to sort a stack in ascending order (with biggest items on top). You may use at most one additional stack to hold items, but you may not copy the elements into any other data structure (such as an array). The stack supports the following operations: push, pop, peek, and isEmpty.
<ul>
	<li>第二个stack可以用来排序，</li>
	<li>当第一个stack栈顶元素弹出时，将第二个stack中的比该元素大的依次弹出压入第一个stack中</li>
	<li>再将该元素压入二栈，第一个stack栈顶元素弹出，如果大于第二栈顶元素则直接压入第二个栈中。</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/StacksQueues/StackHelper.java">Q3.6_Implementation</a></li>
</ul>
3.7 An animal shelter holds only dogs and cats, and operates on a strictly "first in, first out" basis. People must adopt either the "oldest" (based on arrival time) of all animals at the shelter, or they can select whether they would prefer a dog or a cat (and will receive the oldest animal of that type). They cannot select which specific animal they would like, Create the data structures to maintain this system and implement operations such as enqueue, dequeueAny, dequeueDog and dequeueCat. You may use the built-in LinkedList data structure.
<ul>
	<li>我使用两个queue来分别保存dog和cat，</li>
	<li>但是在dog和cat的父类中加入index来区分dog和cat的顺序</li>
	<li>当dequeueAny时，判断 dog和cat 队头的顺序来确定哪种动物出队</li>
	<li>这个类完成的比较完整！！！！</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/StacksQueues/Shelter.java">Q3.7_Implementation</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2015-04-09 03:29:22</wp:post_date>
		<wp:post_date_gmt>2015-04-09 03:29:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>data-structure-chapter-3-stacks-and-queues</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cracking-the-coding-interview-fifth-edition"><![CDATA[Cracking the Coding Interview (Fifth edition)]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Knowledge Based -- Chapter 13 C and C++</title>
		<link>http://godlzr.com/index.php/2015/04/09/knowledge-based-chapter-13-c-and-c/</link>
		<pubDate>Thu, 09 Apr 2015 14:59:05 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=71</guid>
		<description></description>
		<content:encoded><![CDATA[<h6>13.1 Write a method to print the last K lines of an input file using C++.</h6>
<ul>
	<li>用c++，写一个方法可以打印一个文件的最后k行</li>
	<li>使用一个大小为K的string数组来循环保存每行字符串，这样最后到文件结尾，数组中就剩下的是最后K行</li>
	<li>倒数第K行（正数i行）保存在数组 i%k的位置</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterviewCpp/blob/master/CrackingCodingInterviewCpp/printLastKLines.cpp">Q13.1_Implementation</a></li>
</ul>
<h6>13.2 Compare and contrast a hash table and an STL map. How is a hash table implemented? If the number of inputs is small, which data structure options can be used instead of a hash table?</h6>
<ul>
	<li><strong>对比哈希表和STL map</strong></li>
</ul>
在哈希表中，实值的存储位置由其键值对应的哈希函数值决定。因此， 存储在哈希表中的值是无序的。在哈希表中插入元素和查找元素的时间复杂度都是O(1)。 (假设冲突很少)。实现一个哈希表，冲突处理是必须要考虑的。

对于STL中的map，键/值对在其中是根据键进行排序的。它使用一根<strong>红黑树</strong>来保存数据， 因此插入和查找元素的时间复杂度都是<strong>O(logn)</strong>。而且不需要处理冲突问题。 STL中的map适合以下情况使用：
<ol>
	<li>查找最小元素</li>
	<li>查找最大元素</li>
	<li>有序地输出元素</li>
	<li>查找某个元素，或是当元素找不到时，查找比它大的最小元素</li>
</ol>
<ul>
	<li><strong>哈希表是怎么实现</strong></li>
</ul>
<ol>
	<li>首先需要一个好的哈希函数来确保哈希值是均匀分布的。比如：对大质数取模</li>
	<li>其次需要一个好的冲突解决方法：链表法(chaining，表中元素比较密集时用此法)， 探测法(probing，开放地址法，表中元素比较稀疏时用此法)。</li>
	<li>动态地增加或减少哈希表的大小。比如，(表中元素数量)/(表大小)大于一个阈值时， 就增加哈希表的大小。我们新建一个大的哈希表，然后将旧表中的元素值， 通过新的哈希函数映射到新表。</li>
</ol>
<ul>
	<li><strong>如果输入数据规模不大，我们可以使用什么数据结构来代替哈希表。</strong></li>
</ul>
你可以使用STL map来代替哈希表，尽管插入和查找元素的时间复杂度是O(logn)， 但由于输入数据的规模不大，因此这点时间差别可以忽略不计。
<h6>13.3 How do virtual functions work in C++?</h6>
<ul>
	<li>虚函数依赖虚函数表进行工作。如果一个类中，有函数被关键词virtual进行修饰， 那么一个虚函数表就会被构建起来保存这个类中虚函数的地址。同时， 编译器会为这个类添加一个隐藏指针指向虚函数表。如果在派生类中没有重写虚函数， 那么，派生类中虚表存储的是父类虚函数的地址。每当虚函数被调用时， 虚表会决定具体去调用哪个函数。因此，C++中的动态绑定是通过虚函数表机制进行的。</li>
	<li>当我们用基类指针指向派生类时，虚表指针vptr指向派生类的虚函数表。 这个机制可以保证派生类中的虚函数被调用到。</li>
	<li>C++中非虚函数的调用是在编译期静态绑定的， 而虚函数的调用则是在执行时才进行动态绑定。</li>
</ul>
<h6>13.4 What is the difference between deep cop and shallow copy? Explain how you would usd each.</h6>
<ul>
	<li>浅拷贝并不复制数据，只复制指向数据的指针，因此是多个指针指向同一份数据。 深拷贝会复制原始数据，每个指针指向一份独立的数据。</li>
	<li>浅拷贝在构造和删除对象时容易产生问题，因此使用时要十分小心。如无必要， 尽量不用浅拷贝。当我们要传递复杂结构的信息，而又不想产生另一份数据时， 可以使用浅拷贝，比如引用传参。浅拷贝特别需要注意的就是析构时的问题， 当多个指针指向同一份内存时，删除这些指针将导致多次释放同一内存而出错。</li>
	<li>实际情况下是很少使用浅拷贝的，而智能指针是浅拷贝概念的增强。 比如智能指针可以维护一个引用计数来表明指向某块内存的指针数量， 只有当引用计数减至0时，才真正释放内存。</li>
	<li>大部分时候，我们用的是深拷贝，特别是当拷贝的结构不大的时候。</li>
</ul>
<h6>13.5 What is the significance of the keyword "volatile" in C?</h6>
<ul>
	<li>volatile的意思是"易变的"，因为访问寄存器比访问内存要快得多， 所以编译器一般都会做减少存取内存的优化。volatile 这个关键字会提醒编译器，它声明的变量随时可能发生变化(在外部被修改)， 因此，与该变量相关的代码不要进行编译优化，以免出错。</li>
	<li>volatile在声明上的使用和const是一样的。volatile在*号左边， 修饰的是指针所指物；在*号右边修饰的是指针。</li>
	<li></li>
</ul>
<h6>13.6 Why does a destructor in base class need to be declared virtual?</h6>
<ul>
	<li>用对象指针来调用一个函数，有以下两种情况：
<ol>
	<li>如果是虚函数，会调用派生类中的版本。</li>
	<li>如果是非虚函数，会调用指针所指类型的实现版本。</li>
</ol>
</li>
	<li>析构函数也会遵循以上两种情况，因为析构函数也是函数嘛，不要把它看得太特殊。 当对象出了作用域或是我们删除对象指针，析构函数就会被调用。</li>
	<li>当派生类对象出了作用域，派生类的析构函数会先调用，然后再调用它父类的析构函数， 这样能保证分配给对象的内存得到正确释放。</li>
	<li>但是，如果我们删除一个指向派生类对象的基类指针，而基类析构函数又是非虚的话， 那么就会先调用基类的析构函数(上面第2种情况)，派生类的析构函数得不到调用。</li>
	<li>如果我们把基类的析构函数声明为虚析构函数，这会使得所有派生类的析构函数也为虚。 从而使析构函数得到正确调用。</li>
	<li>因此，如果我们可能会删除一个指向派生类的基类指针时，应该把析构函数声明为虚函数。 事实上，《Effective C++》中的观点是，只要一个类有可能会被其它类所继承， 就应该声明虚析构函数。</li>
</ul>
<h6>13.7 Write a method that takes a pointer to a Node structure as a parameter na dreturns a complete copy of the passed in data structure. The Node data structure contains two pointers to other Nodes.</h6>
<h6>13.8 Write a smart pointer class. A smart pointer is a data type, usually implemented with templates, that simulates a pointer while also providing automatic garbage collection. It automatically counts the number of references to a SmartPointer&lt;T*&gt; object and frees the object of type T when the reference count hits zero.</h6>
<h6>13.9 Write an aligned malloc and free function that supports allocating memory such that the memory address returned is divisible by a specific power of two.</h6>
<h6>EXAMPLE</h6>
<h6>align_malloc(1000, 128) will return a memory address that is a multiple of 128 and that points to memory of size 1000 bytes.</h6>
<h6>aligned_free() will free memory allocated by align_malloc.</h6>
<h6>13.10 Write a function in C called my2DAlloc which allocates a two-dimensional array. Minimize the number of calls to malloc and make sure that the memory is accessible by the notation arr[i][j].</h6>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date>2015-04-09 14:59:05</wp:post_date>
		<wp:post_date_gmt>2015-04-09 14:59:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>knowledge-based-chapter-13-c-and-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cracking-the-coding-interview-fifth-edition"><![CDATA[Cracking the Coding Interview (Fifth edition)]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[http://BusinessFirstFamily.com]]></wp:comment_author>
			<wp:comment_author_email>Mcleland454215@outlook.com</wp:comment_author_email>
			<wp:comment_author_url>http://BusinessFirstFamily.com/</wp:comment_author_url>
			<wp:comment_author_IP>192.3.13.65</wp:comment_author_IP>
			<wp:comment_date>2015-08-10 07:14:53</wp:comment_date>
			<wp:comment_date_gmt>2015-08-10 11:14:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can't always trust that which you read online. However, I do trust you!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439205293]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439205293.488436;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[TheDigitalBridges.com]]></wp:comment_author>
			<wp:comment_author_email>Rosenstock236410@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.thedigitalbridges.com/</wp:comment_author_url>
			<wp:comment_author_IP>108.170.22.198</wp:comment_author_IP>
			<wp:comment_date>2015-09-01 13:13:58</wp:comment_date>
			<wp:comment_date_gmt>2015-09-01 17:13:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow, it's no wonder why you have so many individuals following you online.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441127638]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441127638.775501;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[Samantha]]></wp:comment_author>
			<wp:comment_author_email>undtcn@udkdoles.net</wp:comment_author_email>
			<wp:comment_author_url>http://bbqr.me/4fx6</wp:comment_author_url>
			<wp:comment_author_IP>23.95.201.66</wp:comment_author_IP>
			<wp:comment_date>2016-01-29 18:15:46</wp:comment_date>
			<wp:comment_date_gmt>2016-01-29 23:15:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I was just looking at your Knowledge Based - Chapter 13 C and C   - Code Monkey needs Money website and see that your website has the potential to get a lot of visitors. I just want to tell you, In case you don't already know... There is a website service which already has more than 16 million users, and most of the users are looking for websites like yours. By getting your site on this network you have a chance to get your site more visitors than you can imagine. It is free to sign up and you can read more about it here: http://url.laspas.gr/ak - Now, let me ask you... Do you need your website to be successful to maintain your way of life? Do you need targeted traffic who are interested in the services and products you offer? Are looking for exposure, to increase sales, and to quickly develop awareness for your site? If your answer is YES, you can achieve these things only if you get your website on the network I am describing. This traffic network advertises you to thousands, while also giving you a chance to test the network before paying anything at all. All the popular websites are using this service to boost their traffic and ad revenue! Why aren’t you? And what is better than traffic? It’s recurring traffic! That's how running a successful site works... Here's to your success! Read more here: http://url.laspas.gr/ak]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1454109346]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1454109346.557858;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Data Structure -- Chapter 4 Tree and Graph</title>
		<link>http://godlzr.com/index.php/2015/04/15/data-structure-chapter-4-tree-and-graph/</link>
		<pubDate>Wed, 15 Apr 2015 17:14:24 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[4.1 Implement a function to check if a binary tree is balanced. For the purposes of this question, a balanced tree is defined to be a tree such that the heights of the two subtrees of any node never differ by more than one.
<ul>
	<li>根据题目，一颗二叉树的平衡是指深度最小和最大的叶子节点深度差不超过1.</li>
	<li>我们可以遍历二叉树找出最小深度和最大深度的叶子节点，然后求深度差.</li>
	<li>我们使用vector来存储每个节点的深度，之后比较最大深度与最小深度.</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/TreeGraph/BinaryTreeHelper.java">Q4.1_Implementation</a></li>
</ul>
4.2 Given a directed graph, design an algorithm to find out whether there is a route between two nodes.
<ul>
	<li>从给定的点遍历图如果不用回退能到达另一个节点说明两个节点之间存在路径</li>
	<li>可以简单的修改BFS算法，在a节点遍历完之后，不回退，如果访问过b节点则存在路径</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/TreeGraph/GraphHelper.java">Q4.2_Implementation</a></li>
</ul>
4.3 Given a sorted (increasing order) array with unique integer elements, write an algorithm to create a binary search tree with minimal height.
<ul>
	<li>要构建BST，它的中序遍历也应该是一个递增序列.</li>
	<li>要使树的高度最小，我们需要是左右子树的高度尽可能相同，所以中分数组，之后再中分</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/TreeGraph/BinaryTreeHelper.java">Q4.3_Implementation</a></li>
</ul>
4.4 Given a binary tree, design an algorithm which creates a linked list of all the nodes at each depth (e.g. if you have a tree with depth D, you'll have D linked lists).
<ul>
	<li>遍历二叉树，计算当前节点的深度，构造Vector&lt;Vector&lt;TreeNode&gt;&gt;, 将当前节点存入其链表，</li>
	<li>比如depth是n，就存入index 为n的链表中.</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/TreeGraph/BinaryTreeHelper.java">Q4.4_Implementation</a></li>
</ul>
4.5 Implement a function to check if a binary tree is a binary search tree.
<ul>
	<li>二叉搜索树的左节点&lt;父节点&lt;右节点</li>
	<li>使用中序遍历得到的结果如果是一组由小到大排序的数组，则是二叉搜索树。</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/TreeGraph/BinaryTreeHelper.java">Q4.5_Implementation</a></li>
</ul>
4.6 Write an algorithm to find the 'next' node(i.e., in-order successor) of a given node in a binary search tree. You may assume that each node has a link to its parent.
<ul>
	<li>分两种情况，如果一个节点有右子树，其successor即位右子树上的最左节点，</li>
	<li>如果一个节点没有右子树，其successor为第一个大于它的祖先节点.</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/TreeGraph/BinaryTreeHelper.java">Q4.6_Implementation</a></li>
</ul>
4.7 Design an algorithm and write code to find the first common ancestor of two nodes in a binary tree. Avoid storing additional nodes in a structure. NOTE: This is not necessarily a binary search tree.
<ul>
	<li>使用map，将第一个节点的所有父节点存入map</li>
	<li>遍历第二个节点的父节存入map中，第一个重复的即为第一个共同的祖先节点</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/TreeGraph/BinaryTreeHelper.java">Q4.7_Implementation</a></li>
</ul>
4.8 You have two very large binary trees: T1, with millions of nodes, and T2, with hundreds of nodes. Create an algorithm to decide if T2 is a subtree of T1.

A tree T2 is a subtree of T1 if there exists a node n in T1 such that the subtree of n is identical to T2. That is, if you cut off the tree at node n, the two tree would be identical.
<ul>
	<li>暴力方法，在T1中找到T2的根节点，然后开始匹配左右子树</li>
	<li>如果二叉树中节点的值都不相同，则可以使用一种相同的遍历，将两棵树的遍历存成数组，然后比较一个是不是另一个的子串。</li>
</ul>
4.9 You are given a binary tree in which each node contains a value. Design an algorithm to print all paths which sum to a given value. The path does not need to start or end at the root or a leaf, but it must go in a straight line down.
<ul>
	<li>这道题可以直观的转化为查找路径，我们要找和为规定值的所有路径，</li>
	<li>因为要求路径必须是从上直接到下即不能回退，所以这些路一定包含在从跟节点到所有叶子的全部路径中</li>
	<li>所以我们可以在查找全部根节点至叶子节点的路径中计算路径和</li>
	<li>思路即查找所有根节点至叶子节点的路径，将他们存成vector，在每个vector中在查找和为规定值的路径</li>
	<li>有多少叶子节点，就要存多少个vector。</li>
	<li><a href="https://github.com/godlzr/CrackingCodingInterview/blob/master/src/com/DataStructures/TreeGraph/BinaryTreeHelper.java">Q4.9_Implementation</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2015-04-15 17:14:24</wp:post_date>
		<wp:post_date_gmt>2015-04-15 17:14:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>data-structure-chapter-4-tree-and-graph</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cracking-the-coding-interview-fifth-edition"><![CDATA[Cracking the Coding Interview (Fifth edition)]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Xcode debugging cannot see the value of the local variable</title>
		<link>http://godlzr.com/index.php/2015/04/24/xcode-debugging-cannot-see-the-value-of-the-local-variable/</link>
		<pubDate>Fri, 24 Apr 2015 02:08:19 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[Resolution:

1.in Scheme Setting: set run to debug

<a href="https://laoyur.com/wp-content/uploads/2014/04/QQ20140401-2.png" target="_blank"><img class="alignnone size-medium wp-image-405" src="https://laoyur.com/wp-content/uploads/2014/04/QQ20140401-2-300x149.png" alt="QQ20140401-2" width="300" height="149" /></a>

2.in build settings, set optim to O0

<a href="https://laoyur.com/wp-content/uploads/2014/04/QQ20140401-3.png" target="_blank"><img class="alignnone size-medium wp-image-406" src="https://laoyur.com/wp-content/uploads/2014/04/QQ20140401-3-300x139.png" alt="QQ20140401-3" width="300" height="139" /></a>

3.build settings, Custom Compiler Flags change O2 to g.

<a href="https://laoyur.com/wp-content/uploads/2014/04/QQ20140401-1.png" target="_blank"><img class="alignnone size-medium wp-image-407" src="https://laoyur.com/wp-content/uploads/2014/04/QQ20140401-1-300x90.png" alt="QQ20140401-1" width="300" height="90" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2015-04-24 02:08:19</wp:post_date>
		<wp:post_date_gmt>2015-04-24 02:08:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xcode-debugging-cannot-see-the-value-of-the-local-variable</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="issues-solution"><![CDATA[Issues Solution]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13066847307]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13066847307]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[SutoCom]]></wp:comment_author>
			<wp:comment_author_email>dennes777@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sutocom.net</wp:comment_author_url>
			<wp:comment_author_IP>65.96.119.198</wp:comment_author_IP>
			<wp:comment_date>2015-04-27 10:09:06</wp:comment_date>
			<wp:comment_date_gmt>2015-04-27 10:09:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Reblogged this on <a href="http://sutocom.net/2015/04/27/xcode-debugging-cannot-see-the-value-of-the-local-variable/" rel="nofollow">SutoCom Solutions</a>.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1430129346.9016521;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"sutocom";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1430129347]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>reblog_ping</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1430134514.4880741;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"sutocom";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438554389.7002971;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"godlzr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[http://BusinessFirstFamily.com]]></wp:comment_author>
			<wp:comment_author_email>Proue367230@outlook.com</wp:comment_author_email>
			<wp:comment_author_url>http://BusinessFirstFamily.com/</wp:comment_author_url>
			<wp:comment_author_IP>192.3.13.65</wp:comment_author_IP>
			<wp:comment_date>2015-08-10 07:28:10</wp:comment_date>
			<wp:comment_date_gmt>2015-08-10 11:28:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hard work always pays off and I do believe you're writing is a great example.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439206090]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439206090.999332;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1442245091.8082581;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"godlzr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[http://improvingblog.com]]></wp:comment_author>
			<wp:comment_author_email>Lie259766@mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://improvingblog.com</wp:comment_author_url>
			<wp:comment_author_IP>192.3.13.65</wp:comment_author_IP>
			<wp:comment_date>2015-08-10 17:52:41</wp:comment_date>
			<wp:comment_date_gmt>2015-08-10 21:52:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You've given me some good suggestions to dominate to my business.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439243561]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439243561.925729;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>OSPF and RIP</title>
		<link>http://godlzr.com/index.php/2015/05/04/opfs-and-rip/</link>
		<pubDate>Mon, 04 May 2015 04:10:01 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=113</guid>
		<description></description>
		<content:encoded><![CDATA[1. OSPF, open shortest path first is a IGP routing protocol, it works in local area network based on shortest path first algorithm (dijkstra algorithm), it keeps track the topology of the entire network. And each router in the network maintain a shortest path tree indicate the shortest path to each destination and the closet router to send for each communication.

2. While RIP only track the closet router for each destination, and maintain a routing table for the fastest route from computer to computer. It is commonly used for the small network, because it count hops as metric, and it is only works for 15 hops, It use UDP to broadcast .
<ol>
	<li>RIP takes hop count into consideration but OSPF takes Path Cost into consideration to exchange routing information between the routers.</li>
	<li>RIP serves good when small network is taken care of while OSPF is mostly used for large network.</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date>2015-05-04 04:10:01</wp:post_date>
		<wp:post_date_gmt>2015-05-04 04:10:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opfs-and-rip</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="networking-and-protocol"><![CDATA[Networking and Protocol]]></category>
		<category domain="post_tag" nicename="networking-and-protocol"><![CDATA[Networking and Protocol]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11750395936]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11750395936]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vi Commands</title>
		<link>http://godlzr.com/index.php/2015/05/26/vi-commands/</link>
		<pubDate>Tue, 26 May 2015 21:14:20 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[进入vi的命令
vi filename :打开或新建文件，并将光标置于第一行首
vi +n filename ：打开文件，并将光标置于第n行首
vi + filename ：打开文件，并将光标置于最后一行首
vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处
vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename
vi filename....filename ：打开多个文件，依次进行编辑

移动光标类命令
h ：光标左移一个字符
l ：光标右移一个字符
space：光标右移一个字符
Backspace：光标左移一个字符
k或Ctrl+p：光标上移一行
j或Ctrl+n ：光标下移一行
Enter ：光标下移一行
w或W ：光标右移一个字至字首
b或B ：光标左移一个字至字首
e或E ：光标右移一个字至字尾
) ：光标移至句尾
( ：光标移至句首
}：光标移至段落开头
{：光标移至段落结尾
nG：光标移至第n行首
n+：光标下移n行
n-：光标上移n行
n$：光标移至第n行尾
H ：光标移至屏幕顶行
M ：光标移至屏幕中间行
L ：光标移至屏幕最后行
0：（注意是数字零）光标移至当前行首
$：光标移至当前行尾

屏幕翻滚类命令
Ctrl+u：向文件首翻半屏
Ctrl+d：向文件尾翻半屏
Ctrl+f：向文件尾翻一屏
Ctrl＋b；向文件首翻一屏
nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。

插入文本类命令
i ：在光标前
I ：在当前行首
a：光标后
A：在当前行尾
o：在当前行之下新开一行
O：在当前行之上新开一行
r：替换当前字符
R：替换当前字符及其后的字符，直至按ESC键
s：从当前光标位置处开始，以输入的文本替代指定数目的字符
S：删除指定数目的行，并以所输入文本代替之
ncw或nCW：修改指定数目的字
nCC：修改指定数目的行

删除命令
ndw或ndW：删除光标处开始及其后的n-1个字
do：删至行首
d$：删至行尾
ndd：删除当前行及其后n-1行
x或X：删除一个字符，x删除光标后的，而X删除光标前的
Ctrl+u：删除输入方式下所输入的文本

搜索及替换命令
/pattern：从光标开始处向文件尾搜索pattern
?pattern：从光标开始处向文件首搜索pattern
n：在同一方向重复上一次搜索命令
N：在反方向上重复上一次搜索命令
：s/p1/p2/g：将当前行中所有p1均用p2替代
：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代
：g/p1/s//p2/g：将文件中所有p1均用p2替换

选项设置
all：列出所有选项设置情况
term：设置终端类型
ignorance：在搜索中忽略大小写
list：显示制表位(Ctrl+I)和行尾标志（$)
number：显示行号
report：显示由面向行的命令修改过的数目
terse：显示简短的警告信息
warn：在转到别的文件时若没保存当前文件则显示NO write信息
nomagic：允许在搜索模式中，使用前面不带“”的特殊字符
nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始
mesg：允许vi显示其他用户用write写到自己终端上的信息

最后行方式命令
：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下
：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下
：n1,n2 d ：将n1行到n2行之间的内容删除
：w ：保存当前文件
：e filename：打开文件filename进行编辑
：x：保存当前文件并退出
：q：退出vi
：q!：不保存文件并退出vi
：!command：执行shell命令command
：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入
：r!command：将命令command的输出结果放到当前行

寄存器操作
"?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字
"?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字
"?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字
"?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字
ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。

VI的使用
--------------------------------------------------------------------------------

一、插入文本
┌──┬────────────┐
│命令│描述　　　　　　　　　　│
├──┼────────────┤
│i 　│在当前字符前插入文本　　│
├──┼────────────┤
│I 　│在行首插入文本 　　　 　│
├──┼────────────┤
│a 　│在当前字符后添加文本　　│
├──┼────────────┤
│A 　│在行末添加文本　　　　　│
├──┼────────────┤
│o 　│在当前行后面插入一空行　│
├──┼────────────┤
│O 　│在当前行前面插入一空行　│
├──┼────────────┤
│R 　│以改写方式输入文本　　　│
└──┴────────────┘
二、移动光标
┌─────┬───────────┐
│命令　　　│描述　　　　　　　　　│
├─────┼───────────┤
│j或下箭头 │向下移动一行　　　　　│
├─────┼───────────┤
│k或上箭头 │向上移动一行　　　　　│
├─────┼───────────┤
│h或左箭头 │左移一个字符　　　　　│
├─────┼───────────┤
│l或右箭头 │右移一个字符　　　　　│
├─────┼───────────┤
│w 　　　　│右移一个词　　　　　　│
├─────┼───────────┤
│W 　　　　│右移一个以空格分隔的词│
├─────┼───────────┤
│b 　　　　│左移一个词　　　　　　│
├─────┼───────────┤
│B 　　　　│左移一个以空格分隔的词│
├─────┼───────────┤
│0 　　　　│移到行首　　　　　　　│
│Ctrl-F　　│向前翻页　　　　　　　│
├─────┼───────────┤
│Ctrl-B　　│向后翻页　　　　　　　│
├─────┼───────────┤
│nG　　　　│到第n行 　　　　　　　│
├─────┼───────────┤
│G 　　　　│到最后一行　　　　　　│
└─────┴───────────┘
三、替换文本
┌─────┬──────┐
│命令　　　│描述　　　　│
├─────┼──────┤
│$ 　　　　│到行尾　　　│
├─────┼──────┤
│( 　　　　│到句子的开头│
├─────┼──────┤
│) 　　　　│到句子的末尾│
├─────┼──────┤
│{　 　　　│到段落的开头│
├─────┼──────┤
│}　　 　　│到段落的末尾│
└─────┴──────┘

四、删除文本
┌───┬───────────┐
│命令　│描述 　　　　　　 　　│
├───┼───────────┤
│r 　　│替换一个字符 　　　　 │
├───┼───────────┤
│c 　　│修改文本直到按下Esc健 │
├───┼───────────┤
│cw　　│修改下一个词 　　　 　│
├───┼───────────┤
│cnw　 │修改接下来的n个词 　　│
└───┴───────────┘
五、文本编辑
┌──┬──────────────────────┐
│命寺│描述　　　　　　　　　　　　　　　　　　　　│
├──┼──────────────────────┤
│yy　│将一行文本移到缺省缓冲区中 　　　　 　　　　│
├──┼──────────────────────┤
│yn　│将下一个词移到缺省缓冲区中 　　 　　　　　　│
├──┼──────────────────────┤
│ynw │将后面的n个词移到缺省缓冲区中　　　　 　　　│
├──┼──────────────────────┤
│p 　│如果缺省缓冲区中包含一行文本，则在当前　　　│
│　　│行后面插入一个空行井将缺省缓冲区中的声　　　│
│　　│容粘贴到这一行中；如果缺省缓冲区中包含　　　│
│　　│多个词，把这些词粘贴到光标的右边．　　　　　│
├──┼──────────────────────┤
│P 　│如果缺省缓冲区中包含一行文本，则正当前 　 　│
│ 　 │行前面插入一个空行井将缺省缓冲区中的内 　 　│
│　　│容粘贴到这一行中；如果缺省缓冲区中包含 　　 │
│ 　 │多个词，把这些词粘贴到光标的左边

│
└──┴──────────────────────┘
六、保存退出
┌───────────┬───────────────┐
│命令　　　　　　　　　│描述　　　　　　　　　　　　　│
├───────────┼───────────────┤
│zz　　　　　　　　　　│保存并退出　　　　　　　　　　│
├───────────┼───────────────┤
│:w filename　　　　 　│写入文件　　　　　　　　　 　 │
├───────────┼───────────────┤
│:W　　　　　　　　　　│写入文件　　　　　　　　　　　│
├───────────┼───────────────┤
│:x　　　　　　　　　　│保存(如果当前文件修改过)并退出│
├───────────┼───────────────┤
│:q!　　　　　　　　　 │不保存文件，直接退出　　 　　 │
├───────────┼───────────────┤
│:q　　　　　　　　　　│退出vi　　　　　　　　　　　　│

VI常用技巧

VI命令可以说是Unix/Linux世界里最常用的编辑文件的命令了，但是因为它的命令集众多，很多人都不习惯使用它，其实您只需要掌握基本命令，然后加以灵活运用，就会发现它的优势，并会逐渐喜欢使用这种方法。本文旨在介绍VI的一些最常用命令和高级应用技巧。

一、基本命令介绍

---- 1．光标命令

k、j、h、l——上、下、左、右光标移动命令。虽然您可以在Linux中使用键盘右边的4个光标键，但是记住这4个命令还是非常有用的。这4个键正是右手在键盘上放置的基本位置。
nG——跳转命令。n为行数，该命令立即使光标跳到指定行。
Ctrl+G——光标所在位置的行数和列数报告。
w、b——使光标向前或向后跳过一个单词。
---- 2．编辑命令
i、a、r——在光标的前、后以及所在处插入字符命令(i=insert、a=append、r=replace)。
cw、dw——改变(置换)/删除光标所在处的单词的命令 (c=change、d=delete)。
x、d$、dd——删除一个字符、删除光标所在处到行尾的所有字符以及删除整行的命令。
---- 3．查找命令
---- /string、?string——从光标所在处向后或向前查找相应的字符串的命令。
---- 4．拷贝复制命令
---- yy、p——拷贝一行到剪贴板或取出剪贴板中内容的命令。

二、常见问题及应用技巧

---- 1．在一个新文件中读/etc/passwd中的内容，取出用户名部分。
---- vi file
---- :r /etc/passwd 在打开的文件file中光标所在处读入/etc/passwd
---- :%s/:.*//g 删除/etc/passwd中用户名后面的从冒号开始直到行尾的所有部分。
---- 您也可以在指定的行号后读入文件内容，例如使用命令“:3r /etc/passwd”从新文件的第3行开始读入 /etc/passwd的所有内容。
---- 我们还可以使用以下方法删掉文件中所有的空行及以#开始的注释行。
---- #cat squid.conf.default | grep -v ^$ | grep -v ^#

---- 2．在打开一个文件编辑后才知道登录的用户对该文件没有写的权限，不能存盘，需要将所做修改存入临时文件。
---- vi file
---- :w /tmp/1 保存所做的所有修改，也可以将其中的某一部分修改保存到临时文件，例如仅仅把第20～59行之间的内容存盘成文件/tmp/1，我们可以键入如下命令。
---- vi file
---- :20,59w /tmp/1

---- 3．用VI编辑一个文件，但需要删除大段的内容。
---- 首先利用编辑命令“vi file”打开文件，然后将光标移到需要删除的行处按Ctrl+G显示行号，再到结尾处再按Ctrl+G，显示文件结尾的行号。
---- :23,1045d 假定2次得到的行号为23和1045，则把这期间的内容全删除，也可以在要删除的开始行和结束行中用ma、mb命令标记，然后利用“:a,bd”命令删除。

---- 4．在整个文件的各行或某几行的行首或行尾加一些字符串。
---- vi file
---- :3,$s/^/some string / 在文件的第一行至最后一行的行首插入“some string”。
---- :%s/$/some string/g 在整个文件每一行的行尾添加“some string”。
---- :%s/string1/string2/g 在整个文件中替换“string1”成“string2”。
---- :3,7s/string1/string2/ 仅替换文件中的第3行到第7行中的“string1”成“string2”。
---- 注意: 其中s为substitute，%表示所有行，g表示global。

---- 5．同时编辑2个文件，拷贝一个文件中的文本并粘贴到另一个文件中。
---- vi file1 file2
---- yy 在文件1的光标处拷贝所在行
---- :n 切换到文件2 (n=next)
---- p 在文件2的光标所在处粘贴所拷贝的行
---- :n 切换回文件1

---- 6．替换文件中的路径。
---- 使用命令“:%s#/usr/bin#/bin#g”可以把文件中所有路径/usr/bin换成/bin。也可以使用命令“:%s//usr/bin//bin/g”实现，其中“”是转义字符，表明其后的“/”字符是具有实际意义的字符，不是分隔符。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2015-05-26 21:14:20</wp:post_date>
		<wp:post_date_gmt>2015-05-26 21:14:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vi-commands</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11040238544]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11040238544]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQL 修改和删除</title>
		<link>http://godlzr.com/index.php/2015/05/27/sql-mod-del/</link>
		<pubDate>Wed, 27 May 2015 04:24:39 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=123</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 id="-">
	修改和删除
</h1>

<h2 id="-">
	实验简介
</h2>

<p>
	对数据库的内容做修改，删除，重命名等操作。
</p>

<h2 id="-">
	一、实验说明
</h2>

<h3 id="1-">
	1、环境登录
</h3>

<p>
	无需密码自动登录，系统用户名shiyanlou，密码shiyanlou
</p>

<h3 id="2-">
	2、环境介绍
</h3>

<p>
	本实验环境采用Ubuntu Linux桌面环境，实验中会用到的程序：
</p>

<p>
	1、MySQL：流行的数据库管理系统，实验楼环境已经安装
</p>

<p>
	2、Gedit：简单、快捷的文档编辑器
</p>

<p>
	3、github：有的实验会需要从github下载代码，点这里，了解<a href="http://forum.shiyanlou.com/forum.php?mod=viewthread&amp;tid=541&amp;extra=" target="_blank">怎么使用github</a>。
</p>

<h2 id="-">
	二、实验准备
</h2>

<p>
	在正式开始本实验内容之前，需要先从github下载相关代码。该代码可以新建两个数据库，分别名为<strong>test_01</strong>和<strong>mysql_shiyan</strong> ，并在<strong>mysql_shiyan</strong>数据库中建4个表（department，employee，project，table_1），然后向其中插入数据。
</p>

<p>
	具体操作如下,首先输入命令进入Desktop：
</p>

<pre>
<code class="hljs bash"><span class="hljs-built_in">cd</span> Desktop
</code></pre>

<p>
	然后再输入命令，下载代码：
</p>

<pre>
<code class="hljs nginx"><span class="hljs-title">git</span> clone <span class="hljs-url">http://git.shiyanlou.com/shiyanlou/SQL5</span>
</code></pre>

<p>
	下载完成后，输入&ldquo;cd ~&rdquo;（注意有空格）退回到原先目录，然后输入命令开启MySQL服务并使用root用户登录：
</p>

<pre>
<code class="hljs nginx"><span class="hljs-title">sudo</span> service mysql start        <span class="hljs-comment">#打开MySQL服务</span>

mysql -u root                   <span class="hljs-comment">#使用root用户登录</span>
</code></pre>

<p>
	刚才从github下载的SQL5目录下,有1个文件<strong>MySQL-05.sql</strong> （<strong>SQL5目录在桌面上，你可以用Gedit查看、编辑里面的文件。</strong>）
</p>

<p>
	输入命令运行这个文件，完成实验准备：
</p>

<pre>
<code class="hljs bash"><span class="hljs-built_in">source</span> /home/shiyanlou/Desktop/SQL5/MySQL-<span class="hljs-number">05</span>.sql
</code></pre>

<h2 id="-">
	三、实验内容
</h2>

<h3 id="1-">
	1、对数据库的修改
</h3>

<p>
	使用命令 <strong>SHOW DATABASES;</strong> 可以看到刚才运行<strong>MySQL-05.sql</strong>文件生成的两个数据库：
</p>

<p>
	<img alt="01" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-01.png/logoblackfont" />
</p>

<p>
	现在我们运行命令删除名为<strong>test_01</strong>的数据库：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">DATABASE</span> test_01;</span>
</code></pre>

<p>
	现在再次使用命令 <strong>SHOW DATABASES;</strong> 可以发现，<strong>test_01</strong>数据库已经被成功删除：
</p>

<p>
	<img alt="02" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-02.png/logoblackfont" />
</p>

<h3 id="2-">
	2、对一张表的修改
</h3>

<h4 id="-1-">
	(1)重命名一张表
</h4>

<p>
	重命名一张表的语句有多种形式，以下3种格式效果是一样的：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">RENAME</span> <span class="hljs-keyword">TABLE</span> 原名 <span class="hljs-keyword">TO</span> 新名字;</span>

<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 原名 <span class="hljs-keyword">RENAME</span> 新名;</span>

<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 原名 <span class="hljs-keyword">RENAME</span> <span class="hljs-keyword">TO</span> 新名;</span>
</code></pre>

<p>
	使用命令尝试修改 <strong>table_1</strong> 的名字为 <strong>table_2</strong> ：
</p>

<p>
	<img alt="03" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-03.png/logoblackfont" />
</p>

<h4 id="-2-">
	(2)删除一张表
</h4>

<p>
	删除一张表的语句，类似于刚才用过的删除数据库的语句，格式是这样的：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> 表名字;</span>
</code></pre>

<p>
	比如我们把 <strong>table_2</strong> 表删除：
</p>

<p>
	<img alt="04" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-04.png/logoblackfont" />
</p>

<h3 id="3-">
	3、对一列的修改(即对表结构的修改)
</h3>

<p>
	对表结构的修改，是本节实验的难点，有时候一些小的错误会造成不可挽回的后果，所以请细心操作。
</p>

<h4 id="-1-">
	(1)增加一列
</h4>

<p>
	在表中增加一列的语句格式为：
</p>

<pre>
<code class="hljs sql">    <span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> 列名字 数据类型 约束;</span>

或： <span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">ADD</span> 列名字 数据类型 约束;</span>
</code></pre>

<p>
	现在<strong>employee</strong>表中有id、name、age、salary、phone、in_dpt这6个列，我们尝试加入<strong>height</strong> (身高)一个列并指定DEFAULT约束：
</p>

<p>
	<img alt="05" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-05.png/logoblackfont" />
</p>

<p>
	可以发现：新增加的列，被默认放置在这张表的最右边。如果要把增加的列插入在指定位置，则需要在语句的最后使用AFTER关键词(<strong>&ldquo;AFTER 列1&rdquo; 表示新增的列被放置在 &ldquo;列1&rdquo; 的后面</strong>)。
</p>

<p>
	比如我们新增一列 <strong>weight</strong> (体重)放置在 <strong>age</strong> (年龄)的后面：
</p>

<p>
	<img alt="06" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-06.png/logoblackfont" />
</p>

<p>
	上面的效果是把新增的列加在某位置的后面，如果想放在第一列的位置，则使用<strong>FIRST</strong> 关键词，如语句：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> employee <span class="hljs-keyword">ADD</span> test <span class="hljs-built_in">INT</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">11</span> <span class="hljs-keyword">FIRST</span>;</span>
</code></pre>

<p>
	效果如下：
</p>

<p>
	<img alt="07" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-07.png/logoblackfont" />
</p>

<h4 id="-2-">
	(2)删除一列
</h4>

<p>
	删除表中的一列和刚才使用的新增一列的语句格式十分相似，只是把关键词<strong>ADD</strong> 改为 <strong>DROP</strong> ，语句后面不需要有数据类型、约束或位置信息。具体语句格式：
</p>

<pre>
<code class="hljs sql">    <span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">DROP</span> <span class="hljs-keyword">COLUMN</span> 列名字;</span>

或： <span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">DROP</span> 列名字;</span>
</code></pre>

<p>
	我们把刚才新增的 <strong>test</strong> 删除：
</p>

<p>
	<img alt="08" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-08.png/logoblackfont" />
</p>

<h4 id="-3-">
	(3)重命名一列
</h4>

<p>
	这条语句其实不只可用于重命名一列，准确地说，它是对一个列做修改(CHANGE) ：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">CHANGE</span> 原列名 新列名 数据类型 约束;</span>
</code></pre>

<blockquote>
	<p>
		<strong>注意：这条重命名语句后面的 &ldquo;数据类型&rdquo; 不能省略，否则重命名失败。</strong>
	</p>
</blockquote>

<p>
	当<strong>原列名</strong>和<strong>新列名</strong>相同的时候，指定新的<strong>数据类型</strong>或<strong>约束</strong>，就可以用于修改数据类型或约束。需要注意的是，修改数据类型可能会导致数据丢失，所以要慎重使用。
</p>

<p>
	我们用这条语句将 &ldquo;height&rdquo; 一列重命名为汉语拼音 &ldquo;shengao&rdquo; ，效果如下：
</p>

<p>
	<img alt="09" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-09.png/logoblackfont" />
</p>

<h4 id="-4-">
	(4)改变数据类型
</h4>

<p>
	要修改一列的数据类型，除了使用刚才的<strong>CHANGE</strong>语句外，还可以用这样的<strong>MODIFY</strong>语句：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 MODIFY 列名字 新数据类型;</span>
</code></pre>

<p>
	再次提醒，修改数据类型必须小心，因为这可能会导致数据丢失。在尝试修改数据类型之前，请慎重考虑。
</p>

<h3 id="4-">
	4、对表的内容修改
</h3>

<h4 id="-1-">
	(1)修改表中某个值
</h4>

<p>
	大多数时候我们需要做修改的不会是整个数据库或整张表，而是表中的某一个或几个数据，这就需要我们用下面这条命令达到精确的修改：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">UPDATE</span> 表名字 <span class="hljs-keyword">SET</span> 列<span class="hljs-number">1</span>=值<span class="hljs-number">1</span>,列<span class="hljs-number">2</span>=值<span class="hljs-number">2</span> <span class="hljs-keyword">WHERE</span> 条件;</span>
</code></pre>

<p>
	比如，我们要把Tom的age改为21，salary改为3000：
</p>

<p>
	<img alt="10" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-10.png/logoblackfont" />
</p>

<blockquote>
	<p>
		<strong>注意：一定要有WHERE条件，否则会出现你不想看到的后果</strong>
	</p>
</blockquote>

<h4 id="-2-">
	(2)删除一行记录
</h4>

<p>
	删除表中的一行数据，也必须加上WHERE条件，否则整列的数据都会被删除。删除语句：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> 表名字 <span class="hljs-keyword">WHERE</span> 条件;</span>
</code></pre>

<p>
	我们尝试把Tom的数据删除：
</p>

<p>
	<img alt="11" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-11.png/logoblackfont" />
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>123</wp:post_id>
		<wp:post_date>2015-05-27 04:24:39</wp:post_date>
		<wp:post_date_gmt>2015-05-27 04:24:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-mod-del</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11050068951]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11050068951]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[sql-%e4%bf%ae%e6%94%b9%e5%92%8c%e5%88%a0%e9%99%a4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQL 修改和删除</title>
		<link>http://godlzr.com/index.php/2015/05/27/sql-mod-del-2/</link>
		<pubDate>Wed, 27 May 2015 04:24:46 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=124</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 id="-">
	修改和删除
</h1>

<h2 id="-">
	实验简介
</h2>

<p>
	对数据库的内容做修改，删除，重命名等操作。
</p>

<h2 id="-">
	一、实验说明
</h2>

<h3 id="1-">
	1、环境登录
</h3>

<p>
	无需密码自动登录，系统用户名shiyanlou，密码shiyanlou
</p>

<h3 id="2-">
	2、环境介绍
</h3>

<p>
	本实验环境采用Ubuntu Linux桌面环境，实验中会用到的程序：
</p>

<p>
	1、MySQL：流行的数据库管理系统，实验楼环境已经安装
</p>

<p>
	2、Gedit：简单、快捷的文档编辑器
</p>

<p>
	3、github：有的实验会需要从github下载代码，点这里，了解<a href="http://forum.shiyanlou.com/forum.php?mod=viewthread&amp;tid=541&amp;extra=" target="_blank">怎么使用github</a>。
</p>

<h2 id="-">
	二、实验准备
</h2>

<p>
	在正式开始本实验内容之前，需要先从github下载相关代码。该代码可以新建两个数据库，分别名为<strong>test_01</strong>和<strong>mysql_shiyan</strong> ，并在<strong>mysql_shiyan</strong>数据库中建4个表（department，employee，project，table_1），然后向其中插入数据。
</p>

<p>
	具体操作如下,首先输入命令进入Desktop：
</p>

<pre>
<code class="hljs bash"><span class="hljs-built_in">cd</span> Desktop
</code></pre>

<p>
	然后再输入命令，下载代码：
</p>

<pre>
<code class="hljs nginx"><span class="hljs-title">git</span> clone <span class="hljs-url">http://git.shiyanlou.com/shiyanlou/SQL5</span>
</code></pre>

<p>
	下载完成后，输入&ldquo;cd ~&rdquo;（注意有空格）退回到原先目录，然后输入命令开启MySQL服务并使用root用户登录：
</p>

<pre>
<code class="hljs nginx"><span class="hljs-title">sudo</span> service mysql start        <span class="hljs-comment">#打开MySQL服务</span>

mysql -u root                   <span class="hljs-comment">#使用root用户登录</span>
</code></pre>

<p>
	刚才从github下载的SQL5目录下,有1个文件<strong>MySQL-05.sql</strong> （<strong>SQL5目录在桌面上，你可以用Gedit查看、编辑里面的文件。</strong>）
</p>

<p>
	输入命令运行这个文件，完成实验准备：
</p>

<pre>
<code class="hljs bash"><span class="hljs-built_in">source</span> /home/shiyanlou/Desktop/SQL5/MySQL-<span class="hljs-number">05</span>.sql
</code></pre>

<h2 id="-">
	三、实验内容
</h2>

<h3 id="1-">
	1、对数据库的修改
</h3>

<p>
	使用命令 <strong>SHOW DATABASES;</strong> 可以看到刚才运行<strong>MySQL-05.sql</strong>文件生成的两个数据库：
</p>

<p>
	<img alt="01" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-01.png/logoblackfont" />
</p>

<p>
	现在我们运行命令删除名为<strong>test_01</strong>的数据库：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">DATABASE</span> test_01;</span>
</code></pre>

<p>
	现在再次使用命令 <strong>SHOW DATABASES;</strong> 可以发现，<strong>test_01</strong>数据库已经被成功删除：
</p>

<p>
	<img alt="02" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-02.png/logoblackfont" />
</p>

<h3 id="2-">
	2、对一张表的修改
</h3>

<h4 id="-1-">
	(1)重命名一张表
</h4>

<p>
	重命名一张表的语句有多种形式，以下3种格式效果是一样的：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">RENAME</span> <span class="hljs-keyword">TABLE</span> 原名 <span class="hljs-keyword">TO</span> 新名字;</span>

<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 原名 <span class="hljs-keyword">RENAME</span> 新名;</span>

<span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 原名 <span class="hljs-keyword">RENAME</span> <span class="hljs-keyword">TO</span> 新名;</span>
</code></pre>

<p>
	使用命令尝试修改 <strong>table_1</strong> 的名字为 <strong>table_2</strong> ：
</p>

<p>
	<img alt="03" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-03.png/logoblackfont" />
</p>

<h4 id="-2-">
	(2)删除一张表
</h4>

<p>
	删除一张表的语句，类似于刚才用过的删除数据库的语句，格式是这样的：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> 表名字;</span>
</code></pre>

<p>
	比如我们把 <strong>table_2</strong> 表删除：
</p>

<p>
	<img alt="04" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-04.png/logoblackfont" />
</p>

<h3 id="3-">
	3、对一列的修改(即对表结构的修改)
</h3>

<p>
	对表结构的修改，是本节实验的难点，有时候一些小的错误会造成不可挽回的后果，所以请细心操作。
</p>

<h4 id="-1-">
	(1)增加一列
</h4>

<p>
	在表中增加一列的语句格式为：
</p>

<pre>
<code class="hljs sql">    <span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> 列名字 数据类型 约束;</span>

或： <span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">ADD</span> 列名字 数据类型 约束;</span>
</code></pre>

<p>
	现在<strong>employee</strong>表中有id、name、age、salary、phone、in_dpt这6个列，我们尝试加入<strong>height</strong> (身高)一个列并指定DEFAULT约束：
</p>

<p>
	<img alt="05" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-05.png/logoblackfont" />
</p>

<p>
	可以发现：新增加的列，被默认放置在这张表的最右边。如果要把增加的列插入在指定位置，则需要在语句的最后使用AFTER关键词(<strong>&ldquo;AFTER 列1&rdquo; 表示新增的列被放置在 &ldquo;列1&rdquo; 的后面</strong>)。
</p>

<p>
	比如我们新增一列 <strong>weight</strong> (体重)放置在 <strong>age</strong> (年龄)的后面：
</p>

<p>
	<img alt="06" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-06.png/logoblackfont" />
</p>

<p>
	上面的效果是把新增的列加在某位置的后面，如果想放在第一列的位置，则使用<strong>FIRST</strong> 关键词，如语句：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> employee <span class="hljs-keyword">ADD</span> test <span class="hljs-built_in">INT</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">11</span> <span class="hljs-keyword">FIRST</span>;</span>
</code></pre>

<p>
	效果如下：
</p>

<p>
	<img alt="07" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-07.png/logoblackfont" />
</p>

<h4 id="-2-">
	(2)删除一列
</h4>

<p>
	删除表中的一列和刚才使用的新增一列的语句格式十分相似，只是把关键词<strong>ADD</strong> 改为 <strong>DROP</strong> ，语句后面不需要有数据类型、约束或位置信息。具体语句格式：
</p>

<pre>
<code class="hljs sql">    <span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">DROP</span> <span class="hljs-keyword">COLUMN</span> 列名字;</span>

或： <span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">DROP</span> 列名字;</span>
</code></pre>

<p>
	我们把刚才新增的 <strong>test</strong> 删除：
</p>

<p>
	<img alt="08" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-08.png/logoblackfont" />
</p>

<h4 id="-3-">
	(3)重命名一列
</h4>

<p>
	这条语句其实不只可用于重命名一列，准确地说，它是对一个列做修改(CHANGE) ：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">CHANGE</span> 原列名 新列名 数据类型 约束;</span>
</code></pre>

<blockquote>
	<p>
		<strong>注意：这条重命名语句后面的 &ldquo;数据类型&rdquo; 不能省略，否则重命名失败。</strong>
	</p>
</blockquote>

<p>
	当<strong>原列名</strong>和<strong>新列名</strong>相同的时候，指定新的<strong>数据类型</strong>或<strong>约束</strong>，就可以用于修改数据类型或约束。需要注意的是，修改数据类型可能会导致数据丢失，所以要慎重使用。
</p>

<p>
	我们用这条语句将 &ldquo;height&rdquo; 一列重命名为汉语拼音 &ldquo;shengao&rdquo; ，效果如下：
</p>

<p>
	<img alt="09" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-09.png/logoblackfont" />
</p>

<h4 id="-4-">
	(4)改变数据类型
</h4>

<p>
	要修改一列的数据类型，除了使用刚才的<strong>CHANGE</strong>语句外，还可以用这样的<strong>MODIFY</strong>语句：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 MODIFY 列名字 新数据类型;</span>
</code></pre>

<p>
	再次提醒，修改数据类型必须小心，因为这可能会导致数据丢失。在尝试修改数据类型之前，请慎重考虑。
</p>

<h3 id="4-">
	4、对表的内容修改
</h3>

<h4 id="-1-">
	(1)修改表中某个值
</h4>

<p>
	大多数时候我们需要做修改的不会是整个数据库或整张表，而是表中的某一个或几个数据，这就需要我们用下面这条命令达到精确的修改：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">UPDATE</span> 表名字 <span class="hljs-keyword">SET</span> 列<span class="hljs-number">1</span>=值<span class="hljs-number">1</span>,列<span class="hljs-number">2</span>=值<span class="hljs-number">2</span> <span class="hljs-keyword">WHERE</span> 条件;</span>
</code></pre>

<p>
	比如，我们要把Tom的age改为21，salary改为3000：
</p>

<p>
	<img alt="10" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-10.png/logoblackfont" />
</p>

<blockquote>
	<p>
		<strong>注意：一定要有WHERE条件，否则会出现你不想看到的后果</strong>
	</p>
</blockquote>

<h4 id="-2-">
	(2)删除一行记录
</h4>

<p>
	删除表中的一行数据，也必须加上WHERE条件，否则整列的数据都会被删除。删除语句：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> 表名字 <span class="hljs-keyword">WHERE</span> 条件;</span>
</code></pre>

<p>
	我们尝试把Tom的数据删除：
</p>

<p>
	<img alt="11" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-05-11.png/logoblackfont" />
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date>2015-05-27 04:24:46</wp:post_date>
		<wp:post_date_gmt>2015-05-27 04:24:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-mod-del-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11050071204]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_52078ef438ee88aa0004afa3cf4b855c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11050071204]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_52078ef438ee88aa0004afa3cf4b855c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[sql-%e4%bf%ae%e6%94%b9%e5%92%8c%e5%88%a0%e9%99%a4-2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQL 其他</title>
		<link>http://godlzr.com/index.php/2015/05/27/sql-others/</link>
		<pubDate>Wed, 27 May 2015 04:28:29 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=127</guid>
		<description></description>
		<content:encoded><![CDATA[<h3 id="1-">
	1、索引
</h3>

<p>
	索引是一种与表有关的结构，它的作用相当于书的目录，可以根据目录中的页码快速找到所需的内容。 当表中有大量记录时，若要对表进行查询，没有索引的情况是全表搜索：将所有记录一一取出，和查询条件进行一一对比，然后返回满足条件的记录。这样做会消耗大量数据库系统时间，并造成大量磁盘I/O操作。 而如果在表中已建立索引，在索引中找到符合查询条件的索引值，通过索引值就可以快速找到表中的数据，可以<strong>大大加快查询速度</strong>。
</p>

<p>
	对一张表中的某个列建立索引，有以下两种语句格式：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表名字 <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">INDEX</span> 索引名 (列名);</span>

<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">INDEX</span> 索引名 <span class="hljs-keyword">ON</span> 表名字 (列名);</span>
</code></pre>

<p>
	我们用这两种语句分别建立索引：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> employee <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">INDEX</span> idx_id (id);</span>  #在employee表的id列上建立名为idx_id的索引

<span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">INDEX</span> idx_name <span class="hljs-keyword">ON</span> employee (name);</span>   #在employee表的name列上建立名为idx_name的索引
</code></pre>

<p>
	索引的效果是加快查询速度，当表中数据不够多的时候是感受不出它的效果的。这里我们使用命令 <strong>SHOW INDEX FROM 表名字;</strong> 查看刚才新建的索引：
</p>

<p>
	<img alt="01" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-06-01.png" />
</p>

<p>
	在使用SELECT语句查询的时候，语句中WHERE里面的条件，会<strong>自动判断有没有可用的索引</strong>。
</p>

<h3 id="2-">
	2、视图
</h3>

<p>
	视图是从一个或多个表中导出来的表，是一种<strong>虚拟存在的表</strong>。它就像一个窗口，通过这个窗口可以看到系统专门提供的数据，这样，用户可以不用看到整个数据库中的数据，而只关心对自己有用的数据。
</p>

<p>
	注意理解视图是虚拟的表：
</p>

<ul>
	<li>
		数据库中只存放了视图的定义，而没有存放视图中的数据，这些数据存放在原来的表中；
	</li>
	<li>
		使用视图查询数据时，数据库系统会从原来的表中取出对应的数据；
	</li>
	<li>
		视图中的数据依赖于原来表中的数据，一旦表中数据发生改变，显示在视图中的数据也会发生改变；
	</li>
	<li>
		在使用视图的时候，可以把它当作一张表。
	</li>
</ul>

<p>
	创建视图的语句格式为：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">VIEW</span> 视图名(列a,列b,列c) <span class="hljs-keyword">AS</span> <span class="hljs-keyword">SELECT</span> 列<span class="hljs-number">1</span>,列<span class="hljs-number">2</span>,列<span class="hljs-number">3</span> <span class="hljs-keyword">FROM</span> 表名字;</span>
</code></pre>

<p>
	可见创建视图的语句，后半句是一个SELECT查询语句，所以<strong>视图也可以建立在多张表上</strong>，只需在SELECT语句中使用<strong>子查询</strong>或<strong>连接查询</strong>，这些在之前的实验已经进行过。
</p>

<p>
	现在我们创建一个简单的视图，名为 <strong>v_emp</strong>，包含<strong>v_name</strong>，<strong>v_age</strong>，<strong>v_phone</strong>三个列：
</p>

<p>
	<img alt="02" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-06-02.png/logoblackfont" />
</p>

<h3 id="3-">
	3、导入
</h3>

<p>
	导入操作，可以把一个文件里的数据保存进一张表。导入语句格式为：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">LOAD</span> <span class="hljs-keyword">DATA</span> <span class="hljs-keyword">INFILE</span> <span class="hljs-string">&#39;文件路径&#39;</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">TABLE</span> 表名字;</span>
</code></pre>

<p>
	现在 /tmp/SQL6 目录下有一个名为 <strong>in.txt</strong> 的文件，我们尝试把这个文件中的数据导入数据库 <strong>mysql_shiyan</strong> 的 <strong>employee</strong> 表中。
</p>

<p>
	先按住 <strong>Ctrl+Z</strong> 退出MySQL，再使用命令 <strong>gedit /tmp/SQL6/in.txt</strong> 查看 <strong>test.txt</strong> 文件中的内容：
</p>

<p>
	<img alt="03" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-06-03.png" />
</p>

<p>
	再使用以下命令以root用户登录数据库，再连接 <strong>mysql_shiyan</strong> 数据库：
</p>

<pre>
<code class="hljs nginx"><span class="hljs-title">mysql</span> -u root

use mysql_shiyan
</code></pre>

<p>
	查看一下没有导入数据之前，employee表中的数据：
</p>

<p>
	<img alt="04" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-06-04.png" />
</p>

<p>
	现在执行导入语句，文件中的数据成功导入employee表：
</p>

<p>
	<img alt="05" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-06-05.png/logoblackfont" />
</p>

<h3 id="4-">
	4、导出
</h3>

<p>
	导出与导入是相反的过程，是把数据库某个表中的数据保存到一个文件之中。导出语句基本格式为：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> 列<span class="hljs-number">1</span>，列<span class="hljs-number">2</span> <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">OUTFILE</span> <span class="hljs-string">&#39;文件路径和文件名&#39;</span> <span class="hljs-keyword">FROM</span> 表名字;</span>
</code></pre>

<p>
	<strong>注意：语句中 &ldquo;文件路径&rdquo; 之下不能已经有同名文件。</strong>
</p>

<p>
	现在我们把整个employee表的数据导出到 /tmp 目录下，导出文件命名为 <strong>out.txt</strong> 具体语句为：
</p>

<pre>
<code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">INTO</span> <span class="hljs-keyword">OUTFILE</span> <span class="hljs-string">&#39;/tmp/out.txt&#39;</span> <span class="hljs-keyword">FROM</span> employee;</span>
</code></pre>

<p>
	用gedit可以查看导出文件 out.txt 的内容：
</p>

<p>
	<img alt="06" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-06-06.png/logoblackfont" />
</p>

<h3 id="5-">
	5、备份
</h3>

<p>
	数据库中的数据或许十分重要，出于安全性考虑，在数据库的使用中，应该注意使用备份功能。
</p>

<blockquote>
	<p>
		备份与导出的区别：导出的文件只是保存数据库中的数据；而备份，则是把数据库的结构，包括数据、约束、索引、视图等全部另存为一个文件。
	</p>
</blockquote>

<p>
	<strong>mysqldump</strong>是MySQL用于备份数据库的实用程序。它主要产生一个SQL脚本文件，其中包含从头重新创建数据库所必需的命令CREATE TABLE INSERT等。
</p>

<p>
	使用mysqldump备份的语句：
</p>

<pre>
<code class="hljs nginx"><span class="hljs-title">mysqldump</span> -u root 数据库名&gt;备份文件名;   <span class="hljs-comment">#备份整个数据库</span>

<span class="hljs-title">mysqldump</span> -u root 数据库名 表名字&gt;备份文件名;  <span class="hljs-comment">#备份整个表</span>
</code></pre>

<p>
	我们尝试备份整个数据库 <strong>mysql_shiyan</strong>，将备份文件命名为 <strong>bak.sql</strong>，先 <strong>Ctrl+Z</strong> 退出MySQL，再使用语句：
</p>

<pre>
<code class="hljs nginx"><span class="hljs-title">mysqldump</span> -u root mysql_shiyan &gt; bak.sql;
</code></pre>

<p>
	使用命令&ldquo;ls&rdquo;可见已经生成备份文件bak.sql：
</p>

<p>
	<img alt="07" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-06-07.png/logoblackfont" />
</p>

<blockquote>
	<p>
		你可以用gedit查看备份文件的内容，可以看见里面不止保存了数据，还有所备份的数据库的其他信息。
	</p>
</blockquote>

<h3 id="6-">
	6、恢复
</h3>

<p>
	用备份文件恢复数据库，其实我们早就使用过了。在本次实验的开始，我们使用过这样一条命令：
</p>

<pre>
<code class="hljs bash"><span class="hljs-built_in">source</span> /tmp/SQL6/MySQL-<span class="hljs-number">06</span>.sql
</code></pre>

<p>
	这就是一条恢复语句，它把MySQL-06.sql文件中保存的mysql_shiyan数据库恢复。
</p>

<p>
	还有另一种方式恢复数据库，但是在这之前我们先使用命令新建一个<strong>空的数据库 test</strong>：
</p>

<pre>
<code class="hljs bash">mysql -u root          <span class="hljs-comment">#因为在上一步已经退出了MySQL，现在需要重新登录</span>

CREATE DATABASE <span class="hljs-built_in">test</span>;  <span class="hljs-comment">#新建一个名为test的数据库</span>
</code></pre>

<p>
	再次 <strong>Ctrl+Z</strong> 退出MySQL，然后输入语句进行恢复，把刚才备份的 <strong>bak.sql</strong> 恢复到<strong>test</strong> 数据库：
</p>

<pre>
<code class="hljs bash">mysql -u root <span class="hljs-built_in">test</span> &lt; bak.sql
</code></pre>

<p>
	我们输入命令查看tset数据库的表，便可验证是否恢复成功：
</p>

<pre>
<code class="hljs bash">mysql -u root          <span class="hljs-comment">#因为在上一步已经退出了MySQL，现在需要重新登录</span>

use <span class="hljs-built_in">test</span>               <span class="hljs-comment">#连接数据库test</span>

SHOW TABLES;           <span class="hljs-comment">#查看test数据库的表</span>
</code></pre>

<p>
	可以看见原数据库的4张表和1个视图，现在已经恢复到test数据库中：
</p>

<p>
	<img alt="08" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-06-08.png/logoblackfont" />
</p>

<p>
	再查看employee表的恢复情况：
</p>

<p>
	<img alt="09" src="https://dn-anything-about-doc.qbox.me/MySQL/sql-06-09.png/logoblackfont" />
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>127</wp:post_id>
		<wp:post_date>2015-05-27 04:28:29</wp:post_date>
		<wp:post_date_gmt>2015-05-27 04:28:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-others</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11050146202]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11050146202]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[sql-%e5%85%b6%e4%bb%96]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQL Select</title>
		<link>http://godlzr.com/index.php/2015/05/27/sql-select/</link>
		<pubDate>Wed, 27 May 2015 14:49:13 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=129</guid>
		<description></description>
		<content:encoded><![CDATA[在数据库操作语句中，使用最频繁，也被认为最重要的是SELECT查询语句。之前的实验中，我们已经在不少地方用到了 <strong>SELECT * FROM table_name;</strong> 这条语句用于查看一张表中的所有内容。 而SELECT与各种限制条件关键词搭配使用，具有各种丰富的功能，这次实验就进行详细介绍。
<h3 id="1-select-">1、基本的SELECT语句</h3>
SELECT语句的基本格式为：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> 要查询的列名 <span class="hljs-keyword">FROM</span> 表名字 <span class="hljs-keyword">WHERE</span> 限制条件;</span>
</code></pre>
如果要查询表的所有内容，则把<strong>要查询的列名</strong>用一个 * 号表示(实验2、3中都已经使用过)，代表要查询表中所有的列。 而大多数情况，我们只需要查看某个表的指定的列，比如要查看employee表的name和age：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> name,age <span class="hljs-keyword">FROM</span> employee;</span>
</code></pre>
<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-01.png/logoblackfont" alt="01" />
<h3 id="2-">2、数学符号条件</h3>
SELECT语句常常会有WHERE限制条件，用于达到更加精确的查询。WHERE限制条件可以有数学符号 (<strong>=,&lt;,&gt;,&gt;=,&lt;=</strong>) ，刚才我们查询了name和age，现在稍作修改：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> name,age <span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">WHERE</span> age&gt;<span class="hljs-number">25</span>;</span>
</code></pre>
筛选出age大于25的结果：

<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-02.png/logoblackfont" alt="02" />

或者查找一个名字为Mary的员工：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> name,age,phone <span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">WHERE</span> name=<span class="hljs-string">'Mary'</span>;</span>
</code></pre>
结果当然是：

<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-03.png/logoblackfont" alt="03" />
<h3 id="3-and-or-">3、“AND”与“OR”</h3>
从这两个单词就能够理解它们的作用。WHERE后面可以有不止一条限制，而根据条件之间的逻辑关系，可以用<strong>OR(或)</strong>和<strong>AND(且)</strong>连接：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> name,age <span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">WHERE</span> age&lt;<span class="hljs-number">25</span> <span class="hljs-keyword">OR</span> age&gt;<span class="hljs-number">30</span>;</span>     #筛选出age小于25，或age大于30
</code></pre>
<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-04.png/logoblackfont" alt="04" />
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> name,age <span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">WHERE</span> age&gt;<span class="hljs-number">25</span> <span class="hljs-keyword">AND</span> age&lt;<span class="hljs-number">30</span>;</span>    #筛选出age大于25，且age小于30
</code></pre>
<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-05.png/logoblackfont" alt="05" />

而刚才的限制条件 <strong>age&gt;25 AND age&lt;30</strong> 可以替换为 <strong>age BETWEEN 25 AND 30</strong> ，结果是一样的：

<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-06.png/logoblackfont" alt="06" />
<h3 id="4-in-not-in">4、IN和NOT IN</h3>
关键词<strong>IN</strong>和<strong>NOT IN</strong>的作用和它们的名字一样明显，用于筛选<strong>“在”</strong>或<strong>“不在”</strong>某个范围内的结果，比如说我们要查询在<strong>dpt3</strong>或<strong>dpt4</strong>的人:
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> name,age,phone,in_dpt <span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">WHERE</span> in_dpt <span class="hljs-keyword">IN</span> (<span class="hljs-string">'dpt3'</span>,<span class="hljs-string">'dpt4'</span>);</span>
</code></pre>
<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-07.png/logoblackfont" alt="07" />

而<strong>NOT IN</strong>的效果则是，如下面这条命令，查询出了不在<strong>dpt1</strong>也不在<strong>dpt3</strong>的人：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> name,age,phone,in_dpt <span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">WHERE</span> in_dpt <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">'dpt1'</span>,<span class="hljs-string">'dpt3'</span>);</span>
</code></pre>
<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-08.png/logoblackfont" alt="08" />
<h3 id="5-">5、通配符</h3>
关键字 <strong>LIKE</strong> 在SQL语句中和通配符一起使用，通配符代表未知字符。SQL中的通配符是 _ 和 % 。其中 _ 代表一个未指定字符，% 代表<strong>不定个</strong>未指定字符。

比如，要只记得电话号码前四位数为1101，而后两位忘记了，则可以用两个 _ 通配符代替：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> name,age,phone <span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">WHERE</span> phone <span class="hljs-keyword">LIKE</span> <span class="hljs-string">'1101__'</span>;</span>
</code></pre>
这样就查找出了<strong>1101开头的6位数电话号码</strong>：

<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-09.png/logoblackfont" alt="09" />

另一种情况，比如只记名字的首字母，又不知道名字长度，则用 % 通配符代替不定个字符：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> name,age,phone <span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">WHERE</span> name <span class="hljs-keyword">LIKE</span> <span class="hljs-string">'J%'</span>;</span>
</code></pre>
这样就查找出了首字母为 <strong>J</strong> 的人：

<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-10.png/logoblackfont" alt="10" />
<h3 id="6-">6、对结果排序</h3>
为了使查询结果看起来更顺眼，我们可能需要对结果按某一列来排序，这就要用到<strong>ORDER BY</strong> 排序关键词。默认情况下，<strong>ORDER BY</strong>的结果是<strong>升序</strong>排列，而使用关键词<strong>ASC</strong>和<strong>DESC</strong>可指定<strong>升序</strong>或<strong>降序</strong>排序。 比如，我们<strong>按salary降序排列</strong>，SQL语句为：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> name,age,salary,phone <span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> salary <span class="hljs-keyword">DESC</span>;</span>
</code></pre>
<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-11.png/logoblackfont" alt="11" />
<h3 id="7-sql-">7、SQL内置函数和计算</h3>
SQL允许对表中的数据进行计算。对此，SQL有5个内置函数，这些函数都对SELECT的结果做操作：
<table>
<thead>
<tr>
<th>函数名：</th>
<th>COUNT</th>
<th>SUM</th>
<th>AVG</th>
<th>MAX</th>
<th>MIN</th>
</tr>
</thead>
<tbody>
<tr>
<td>作用：</td>
<td>计数</td>
<td>求和</td>
<td>求平均值</td>
<td>最大值</td>
<td>最小值</td>
</tr>
</tbody>
</table>
<blockquote>其中COUNT函数可用于任何数据类型(因为它只是计数)，而另4个函数都只能对数字类数据类型做计算。</blockquote>
具体举例，比如计算出salary的最大、最小值，用这样的一条语句：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">MAX</span>(salary) <span class="hljs-keyword">AS</span> max_salary,<span class="hljs-keyword">MIN</span>(salary) <span class="hljs-keyword">FROM</span> employee;</span>
</code></pre>
有一个细节你或许注意到了，<strong>使用AS关键词可以给值重命名</strong>，比如最大值被命名为了max_salary：

<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-12.png/logoblackfont" alt="12" />
<h3 id="8-">8、子查询</h3>
上面讨论的SELECT语句都仅涉及一个表中的数据，然而有时必须处理多个表才能获得所需的信息。例如：想要知道名为"Tom"的员工所在部门做了几个工程。员工信息储存在employee表中，但工程信息储存在project表中。 对于这样的情况，我们可以用子查询：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> of_dpt,<span class="hljs-keyword">COUNT</span>(proj_name) <span class="hljs-keyword">AS</span> count_project <span class="hljs-keyword">FROM</span> project
<span class="hljs-keyword">WHERE</span> of_dpt <span class="hljs-keyword">IN</span>
(<span class="hljs-keyword">SELECT</span> in_dpt <span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">WHERE</span> name=<span class="hljs-string">'Tom'</span>);</span>
</code></pre>
<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-13.png/logoblackfont" alt="13" />
<blockquote>子查询还可以扩展到3层、4层或更多层。</blockquote>
<h3 id="9-">9、连接查询</h3>
在处理多个表时，子查询只有在结果来自一个表时才有用。但如果需要显示两个表或多个表中的数据，这时就必须使用连接<strong>(join)</strong>操作。 连接的基本思想是把两个或多个表当作一个新的表来操作，如下：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> id,name,people_num
<span class="hljs-keyword">FROM</span> employee,department
<span class="hljs-keyword">WHERE</span> employee.in_dpt = department.dpt_name
<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> id;</span>
</code></pre>
这条语句查询出的是，各员工所在部门的人数，其中员工的id和name来自employee表，people_num来自department表：

<img src="https://dn-anything-about-doc.qbox.me/MySQL/sql-04-14.png/logoblackfont" alt="14" />

另一个连接语句格式是使用JOIN ON语法，刚才的语句等同于：
<pre><code class="hljs sql"><span class="hljs-operator"><span class="hljs-keyword">SELECT</span> id,name,people_num
<span class="hljs-keyword">FROM</span> employee <span class="hljs-keyword">JOIN</span> department
<span class="hljs-keyword">ON</span> employee.in_dpt = department.dpt_name
<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> id;</span>
</code></pre>
结果也与刚才的语句相同。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2015-05-27 14:49:13</wp:post_date>
		<wp:post_date_gmt>2015-05-27 14:49:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-select</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11064806714]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11064806714]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[转] Linux  FHS2.3目录结构</title>
		<link>http://godlzr.com/index.php/2015/05/31/linux-fhs2-3-cat/</link>
		<pubDate>Sun, 31 May 2015 00:49:06 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=135</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	<img alt="" src="https://dn-anything-about-doc.qbox.me/linux_base/4-1.png/logoblackfont" />
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>135</wp:post_id>
		<wp:post_date>2015-05-31 00:49:06</wp:post_date>
		<wp:post_date_gmt>2015-05-31 00:49:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-fhs2-3-cat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11177932248]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11177932248]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e8%bd%ac-linux-fhs2-3%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Differences between sending cv::Mat, const cv::Mat, const cv::Mat&amp; or cv::Mat&amp; as arguments to a function</title>
		<link>http://godlzr.com/index.php/2015/06/26/differences-between-sending-cvmat-const-cvmat-const-cvmat-or-cvmat-as-arguments-to-a-function/</link>
		<pubDate>Fri, 26 Jun 2015 15:45:56 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=151</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="post-text">
<ol>
	<li><code>cv::Mat Input</code>: pass a copy of <code>Input</code>'s header, its header will not be changed after this function, but can be changed within the function. For example:
<pre class="lang-cpp prettyprint prettyprinted"><code><span class="kwd">void</span><span class="pln"> sillyFunc</span><span class="pun">(</span><span class="pln">cv</span><span class="pun">::</span><span class="typ">Mat</span> <span class="typ">Input</span><span class="pun">,</span><span class="pln"> cv</span><span class="pun">::</span><span class="typ">Mat</span><span class="pun">&amp;</span> <span class="typ">Output</span><span class="pun">){</span>
    <span class="typ">Input</span> <span class="pun">=</span><span class="pln"> cv</span><span class="pun">::</span><span class="typ">Mat</span><span class="pun">::</span><span class="pln">ones</span><span class="pun">(</span><span class="lit">4</span><span class="pun">,</span> <span class="lit">4</span><span class="pun">,</span><span class="pln"> CV_32F</span><span class="pun">);</span> <span class="com">// OK, but only changed within the function</span>
    <span class="com">//...</span>
<span class="pun">}</span></code></pre>
</li>
	<li><code>const cv::Mat Input</code>: pass a copy of <code>Input</code>'s header, its header will not be changed after this function and within the function. For example:
<pre class="lang-cpp prettyprint prettyprinted"><code><span class="kwd">void</span><span class="pln"> sillyFunc</span><span class="pun">(</span><span class="kwd">const</span><span class="pln"> cv</span><span class="pun">::</span><span class="typ">Mat</span> <span class="typ">Input</span><span class="pun">,</span><span class="pln"> cv</span><span class="pun">::</span><span class="typ">Mat</span><span class="pun">&amp;</span> <span class="typ">Output</span><span class="pun">){</span>
    <span class="typ">Input</span> <span class="pun">=</span><span class="pln"> cv</span><span class="pun">::</span><span class="typ">Mat</span><span class="pun">::</span><span class="pln">ones</span><span class="pun">(</span><span class="lit">4</span><span class="pun">,</span> <span class="lit">4</span><span class="pun">,</span><span class="pln"> CV_32F</span><span class="pun">);</span> <span class="com">// Error even change within the function</span>
    <span class="com">//...</span>
<span class="pun">}</span></code></pre>
</li>
	<li><code>const cv::Mat&amp; Input</code>: pass a reference of <code>Input</code>'s header, guarantee that <code>Input</code>'s header will not be changed after the function and within the function. For example:
<pre class="lang-cpp prettyprint prettyprinted"><code><span class="kwd">void</span><span class="pln"> sillyFunc</span><span class="pun">(</span><span class="kwd">const</span><span class="pln"> cv</span><span class="pun">::</span><span class="typ">Mat</span><span class="pun">&amp;</span> <span class="typ">Input</span><span class="pun">,</span><span class="pln"> cv</span><span class="pun">::</span><span class="typ">Mat</span><span class="pun">&amp;</span> <span class="typ">Output</span><span class="pun">){</span>
    <span class="typ">Input</span> <span class="pun">=</span><span class="pln"> cv</span><span class="pun">::</span><span class="typ">Mat</span><span class="pun">::</span><span class="pln">ones</span><span class="pun">(</span><span class="lit">4</span><span class="pun">,</span> <span class="lit">4</span><span class="pun">,</span><span class="pln"> CV_32F</span><span class="pun">);</span> <span class="com">// Error when changing its header</span>
    <span class="pun">...</span>
<span class="pun">}</span></code></pre>
</li>
	<li><code>cv::Mat&amp; Input</code>: pass a reference of <code>Input</code>'s header, <code>Input</code>'s header can be changed after the function and within the function. For example:
<pre class="lang-cpp prettyprint prettyprinted"><code><span class="kwd">void</span><span class="pln"> sillyFunc</span><span class="pun">(</span><span class="pln">cv</span><span class="pun">::</span><span class="typ">Mat</span><span class="pun">&amp;</span> <span class="typ">Input</span><span class="pun">,</span><span class="pln"> cv</span><span class="pun">::</span><span class="typ">Mat</span><span class="pun">&amp;</span> <span class="typ">Output</span><span class="pun">){</span>
    <span class="typ">Input</span> <span class="pun">=</span><span class="pln"> cv</span><span class="pun">::</span><span class="typ">Mat</span><span class="pun">::</span><span class="pln">ones</span><span class="pun">(</span><span class="lit">4</span><span class="pun">,</span> <span class="lit">4</span><span class="pun">,</span><span class="pln"> CV_32F</span><span class="pun">);</span> <span class="com">// totally OK and does changed</span>
    <span class="pun">...</span>
<span class="pun">}</span></code></pre>
</li>
</ol>
<strong>P.S.2</strong>: I must point out that, for all the four situations (<code>cv::Mat</code>, <code>const cv::Mat</code>, <code>const cv::Mat&amp;</code> or <code>cv::Mat&amp;</code>), they only constrain the access to its header, not to the data it pointers to. For example, you can change its data in all the four situations and its data will indeed change after and within the function:
<pre class="lang-cpp prettyprint prettyprinted"><code><span class="com">/*** will work for all the four situations ***/</span>
<span class="com">//void sillyFunc(cv::Mat Input){</span>
<span class="com">//void sillyFunc(const cv::Mat Input){</span>
<span class="com">//void sillyFunc(const cv::Mat &amp;Input){</span>
<span class="kwd">void</span><span class="pln"> sillyFunc</span><span class="pun">(</span><span class="pln">cv</span><span class="pun">::</span><span class="typ">Mat</span> <span class="pun">&amp;</span><span class="typ">Input</span><span class="pun">){</span>
    <span class="typ">Input</span><span class="pun">.</span><span class="pln">data</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]</span> <span class="pun">=</span> <span class="lit">5</span><span class="pun">;</span> <span class="com">// its data will be changed here</span>
<span class="pun">}</span></code></pre>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2015-06-26 15:45:56</wp:post_date>
		<wp:post_date_gmt>2015-06-26 15:45:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>differences-between-sending-cvmat-const-cvmat-const-cvmat-or-cvmat-as-arguments-to-a-function</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opencv"><![CDATA[OpenCV]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12062931760]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12062931760]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12062931760]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>STL Vector与List区别</title>
		<link>http://godlzr.com/index.php/2015/07/12/stl-vector-n-list/</link>
		<pubDate>Sun, 12 Jul 2015 23:39:40 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=157</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	vector为存储的对象分配一块连续的地址空间，因此对vector中的元素随机访问效率很高。在vecotor中插入或者删除某个元素，需要将现有元素进行复制，移动。如果vector中存储的对象很大，或者构造函数复杂，则在对现有元素进行拷贝时开销较大，因为拷贝对象要调用拷贝构造函数。对于简单的小对象，vector的效率优于list。vector在每次扩张容量的时候，将容量扩展2倍，这样对于小对象来说，效率是很高的。<br />
	list中的对象是离散存储的，随机访问某个元素需要遍历list。在list中插入元素，尤其是在首尾插入元素，效率很高，只需要改变元素的指针。<br />
	综上所述：<br />
	vector适用：对象数量变化少，简单对象，随机访问元素频繁<br />
	list适用：对象数量变化大，对象复杂，插入和删除频繁<br />
	最大的区别是,list是双向的，而vector是单向的。<br />
	因此在实际使用时，如何选择这三个容器中哪一个，应根据你的需要而定，一般应遵循下面的原则：<br />
	1、如果你需要高效的随即存取，而不在乎插入和删除的效率，使用vector<br />
	2、如果你需要大量的插入和删除，而不关心随即存取，则应使用list<br />
	3、如果你需要随即存取，而且关心两端数据的插入和删除，则应使用deque。<br />
	vector&nbsp;&nbsp; 表示一段连续的内存区域，每个元素被顺序存储在这段内存中，对vector&nbsp;&nbsp; 的随机访问效率很高，但对非末尾元素的插和删除则效率非常低。
</p>

<p>
	deque<br />
	也表示一段连续的内存区域，但与vector不同的是它支持高效地在其首部插入和删除元素，它通过两级数组结构来实现，一级表示实际的容器，第二级指向容器的首和尾list&nbsp;&nbsp; 表示非连续的内存区域并通过一对指向首尾元素的指针双向链接起来，插入删除效率高，随机访问效率低
</p>

<p>
	2<br />
	stl提供了三个最基本的容器：vector,list,deque。
</p>

<p>
	vector和built-in数组类似，它拥有一段连续的内存空间，并且起始地址不变，因此它能非常好的支持随即存取，即[]操作符，但由于它的内存空间是连续的，所以在中间进行插入和删除会造成内存块的拷贝，另外，当该数组后的内存空间不够时，需要重新申请一块足够大的内存并进行内存的拷贝。这些都大大影响了vector的效率。
</p>

<p>
	list就是数据结构中的双向链表(根据sgi &nbsp; stl源代码)，因此它的内存空间可以是不连续的，通过指针来进行数据的访问，这个特点使得它的随即存取变的非常没有效率，因此它没有提供[]操作符的重载。但由于链表的特点，它可以以很好的效率支持任意地方的删除和插入。
</p>

<p>
	deque是一个double-ended &nbsp; queue，它的具体实现不太清楚，但知道它具有以下两个特点：它支持[]操作符，也就是支持随即存取，并且和vector的效率相差无几，它支持在两端的操作：push_back,push_front,pop_back,pop_front等，并且在两端操作上list的效率也差不多。
</p>

<p>
	因此在实际使用时，如何选择这三个容器中哪一个，应根据你的需要而定，一般应遵循下面的原则：<br />
	1、如果你需要高效的随即存取，而不在乎插入和删除的效率，使用vector<br />
	2、如果你需要大量的插入和删除，而不关心随即存取，则应使用list<br />
	3、如果你需要随即存取，而且关心两端数据的插入和删除，则应使用deque。
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date>2015-07-12 23:39:40</wp:post_date>
		<wp:post_date_gmt>2015-07-12 23:39:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stl-vector-n-list</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cc"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="cc"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="stl"><![CDATA[STL]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12667911194]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12667911194]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[stl-vector%e4%b8%8elist%e5%8c%ba%e5%88%ab]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>C language Union，Struct, Enumerations and C++ language Struct, Class.</title>
		<link>http://godlzr.com/index.php/2015/07/20/union_struct/</link>
		<pubDate>Mon, 20 Jul 2015 03:24:55 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=166</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	<strong>C Enumeration:</strong>
</p>

<p>
	Enumeration is a set&nbsp;of the ordered elements. Each element corresponds to a number. If you don&#39;t define the corresponding number for each element, they will corresponding from 0 to n by default. And you can define the corresponding number for the element, and the undefined element will corresponding to the number of previous element plus 1 since they are stored in the continuous memory addresses. The enum element are constant, they can&#39;t be changed after definition.
</p>

<p>
	枚举类型是排序好的一组元素集合，每一个元素可对应一个数字，程序员可以给元素定义它的对应数字，默认的是从0开始一个一个逐次对应，没有定义对应数字的元素默认的对应数字比其前一个元素对应的数字大1，因为他们默认的是保存在地址连续的一串内存当中。
</p>

<ul>
	<li>
		枚举元素是常量，定义之后不能赋值。
	</li>
	<li>
		元素有值，编译时按定义时的顺序使它们的值为0，1，2...
	</li>
	<li>
		枚举值可以作比较
	</li>
	<li>
		一个整数不能直接赋值给枚举变量，要转换为相应的枚举类型。
	</li>
</ul>

<p>
	<strong>C Union:&nbsp;</strong>
</p>

<p>
	In C programming, sometimes, we need to store some different type of variable in a same memory block. That&#39;s a kind of coverage technique, the value of the latter variable will cover the previous variable. This structure which&nbsp;allows several different types of &nbsp;variable share a same memory block is called &quot;Union&quot; in C.
</p>

<p>
	在进行某些算法的C语言编程的时候，需要使几种不同类型的变量存放到同一段内存单元中。也就是使用覆盖技术，几个变量互相覆盖。这种几个不同的变量共同占用一段内存的结构，在C语言中，被称作&ldquo;共用体&rdquo;类型结构，简称共用体，也叫联合体。
</p>

<ul>
	<li>
		每一瞬间只能存放其中一种。
	</li>
	<li>
		存放的是最后一次存放的成员
	</li>
	<li>
		共用体变量的地址和其各成员的地址都是同一地址
	</li>
	<li>
		不能对共用体变量名赋值，也不能在初始化时赋值
	</li>
	<li>
		共用体变量不能作为函数参数
	</li>
	<li>
		可以在结构体中使用共用体变量
	</li>
</ul>

<p>
	<strong>C Struct:</strong>
</p>

<p>
	In C, struct is a kind of data structure, belong to aggregate data type. Struct can be defined as variable, pointer and array. It is a set of different types of data, these data elements are members of struct, and the members can be accessed by their names.
</p>

<p>
	在C语言中，结构体(struct)指的是一种数据结构，是C语言中聚合数据类型(aggregate data type)的一类。结构体可以被声明为变量、指针或数组等，用以实现较复杂的数据结构。结构体同时也是一些元素的集合，这些元素称为结构体的成员(member)，且这些成员可以为不同的类型，成员一般用名字访问。将不同类型的数据组合成一个整体以便引用，把它们组织成一个组合项, 在一个组合项中包含若干个类型不同的数据项。成为结构体。struct structName{int a = 0, char b =&quot;h&quot;, double c = 1.5;} structVariableName1, structVariableName2;
</p>

<p>
	<strong>Difference between Union and Struct:</strong>
</p>

<ul>
	<li>
		The memory size of struct equal the sum of the length of all members of the struct, each member have its own memory block.
	</li>
	<li>
		结构体变量所占内存长度是各成员的内存长度之和，每个成员分别占有其自己的内存单元。
	</li>
	<li>
		The memory size of union equal the memory length of member which has the longest size in the union
	</li>
	<li>
		共用体变量所占的内存长度等于最长的成员的长度.
	</li>
	<li>
		Sample:
	</li>
	<li>
		结构体共用体使用举例：
	</li>
</ul>

<p style="padding-left:30px;">
	union uq1 {<br />
	long value; /*这就是输入的那个32位数*/<br />
	struct {<br />
	short lowbit; /*这是低位*/<br />
	short highbit; /*这是高位*/<br />
	} bit;<br />
	};<br />
	整个共用体还是4字节没有改变. 解决那题,就象这样:<br />
	uq1 u;<br />
	long v;<br />
	v=0x00FF00FF; /*就先假设输入的数是这个*/<br />
	u.value=v;<br />
	printf(&quot;high=%d,low=%dn&quot;,u.bit.highbit, u.bit.lowbit);<br />
	这题的结果应该是:<br />
	high=255, low=255
</p>

<p>
	****************************************************************************************************************************************
</p>

<p>
	<strong>C++ Struct：</strong>
</p>

<p>
	In c strut can not have method member. But in c++, the struct is extended, it can have method member. The difference between c++ struct and class is that the method is public default in struct, but in class, the default type of method is private.
</p>

<p>
	在C语言中，可以定义结构体类型，将多个相关的变量包装成为一个整体使用。在结构体中的变量，可以是相同、部分相同，或完全不同的数据类型。<em><span style="text-decoration:underline;">在C语言中，结构体不能包含函数</span></em>。在面向对象的程序设计中，对象具有状态（属性）和行为，状态保存在成员变量中，行为通过成员方法（函数）来实现。C语言中的结构体只能描述一个对象的状态，不能描述一个对象的行为。在C++中，考虑到C语言到C++语言过渡的连续性，对结构体进行了扩展，<em><span style="text-decoration:underline;">C++的结构体可以包含函数</span></em>，这样，C++的结构体也具有类的功能，<span style="text-decoration:underline;"><em>与class不同的是，结构体包含的函数默认为public，而不是private</em></span>。
</p>

<p>
	<strong>The difference between C++ struct and Class：</strong>
</p>

<ul>
	<li class="para">
		（1）class中默认的成员访问权限是private的，而struct中则是public的。
	</li>
	<li class="para">
		（2）从class继承默认是private继承，而从struct继承默认是public继承。
	</li>
	<li class="para">
		（3）C++的结构体声明不必有struct关键字，而C语言的结构体声明必须带有关键字（使用typedef别名定义除外）。
	</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2015-07-20 03:24:55</wp:post_date>
		<wp:post_date_gmt>2015-07-20 03:24:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>union_struct</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cc"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="cc"><![CDATA[C/C++]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12893159452]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12893159452]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[c-language-union%ef%bc%8cstruct-enumerations-and-c-language-struct-class]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OpenGL and OpenGL ES</title>
		<link>http://godlzr.com/index.php/2015/07/20/opengl-and-opengl-es/</link>
		<pubDate>Mon, 20 Jul 2015 18:08:10 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=168</guid>
		<description></description>
		<content:encoded><![CDATA[<b>OpenGL</b> (<b>Open Graphics Library</b>)<span style="font-size:10px;"> </span>is a cross-language, multi-platform application programming interface(API) for rendering 2D and 3D vector graphics. The API is typically used to interact with a graphics processing unit(GPU), to achieve hardware-accelerated rendering. It is widely used in CAD, scientific visualization,  virtual reality, flight simulation, video game. Lastest version 4.5. It's a common accepted industry standard and most driver for pc graphics cards have OpenGL implementation.

OpenGL consists of three libraries GL, GLU,glx/wgl/agl
<ul>
	<li>GL: geometric primitive operations. Texturing/Image primitive operations. Set states of OpenGL state machine.</li>
	<li>GLU: Higher-level utility functions for NURBS, tessellators, quadric shapes etc.</li>
	<li>GLX/WGL/AGL: connects OpenGL and the windowing system of the OS.</li>
	<li>GLUT: OpenGL utility toolkit is a simple platform-independent GUI and is contained in the lib glut.</li>
</ul>
<strong>OpenGL ES (OpenGL for Embedded System) </strong>is a subset<span style="font-size:10px;"> </span>of the OpenGL computer graphics rendering API(application programming interface) for rendering 2D and 3D computer graphics such as those used by video games, typically hardware-accelerated using a GPU(graphics processing unit). It is designed for embedded systems like smartphones, computer tablets, video game consoles and PDAs.

The API is cross-language and multi-platform. The libraries GLUT and GLU are not available for OpenGL ES. Lastest version 3.1<sup id="cite_ref-3" class="reference"></sup>

<strong>Difference between OpenGL and OpenGL ES</strong>

OpenGL ES 1.1 and OpenGL ES 2.0 are subsets of the full OpenGL standard. When using the OpenGL ES API, there are limitations that you must be aware of when developing your applications. For example, the following OpenGL functionality is not present in either OpenGL ES 1.1 or OpenGL ES 2.0:
<ul>
	<li>There is no support for <code class="function">glBegin</code> or <code class="function">glEnd</code>. Use vertex arrays and vertex buffer objects instead.</li>
	<li>The only supported rasterization primitives are points, lines and triangles. Quads are not supported.</li>
	<li>There is no polynomial function evaluation stage.</li>
	<li>You cannot send blocks of fragments directly to individual fragment operations.</li>
	<li>There is no support for display lists.</li>
</ul>
In addition, the following OpenGL functionality is not present in OpenGL ES 2.0:
<ul>
	<li>There is no support for the fixed-function graphics pipeline. You must use your own vertex and fragment shader programs.</li>
	<li>There is no support for viewing transforms such as <code class="function">glFrustumf</code>. You must compute your own transformation matrix, pass it to the vertex shader as a uniform variable, and perform the matrix multiplication in the shader.</li>
	<li>There is no support for specialized functions such as <code class="function">glVertexPointer</code> and <code class="function">glNormalPointer</code>. Use <code class="function">glVertexAttribPointer</code>instead.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2015-07-20 18:08:10</wp:post_date>
		<wp:post_date_gmt>2015-07-20 18:08:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opengl-and-opengl-es</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[OpenGL]]></category>
		<category domain="post_tag" nicename="opengl"><![CDATA[OpenGL]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12913245829]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12913245829]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[zcqyrjnadwu]]></wp:comment_author>
			<wp:comment_author_email>gyksls@qzutkx.com</wp:comment_author_email>
			<wp:comment_author_url>http://yxlzoigdeugs.com/</wp:comment_author_url>
			<wp:comment_author_IP>217.23.12.158</wp:comment_author_IP>
			<wp:comment_date>2015-08-05 08:50:06</wp:comment_date>
			<wp:comment_date_gmt>2015-08-05 12:50:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[dwLtQn  <a href="http://rclmjzaaawok.com/" rel="nofollow">rclmjzaaawok</a>, [url=http://tixqyxzjnrio.com/]tixqyxzjnrio[/url], [link=http://afocsltunoij.com/]afocsltunoij[/link], http://noevghalajan.com/]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438779006]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438779006.0603991;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[psbfdpndn]]></wp:comment_author>
			<wp:comment_author_email>rxqfdg@ggnftb.com</wp:comment_author_email>
			<wp:comment_author_url>http://vnbghyhompfx.com/</wp:comment_author_url>
			<wp:comment_author_IP>217.23.12.158</wp:comment_author_IP>
			<wp:comment_date>2015-08-05 09:25:05</wp:comment_date>
			<wp:comment_date_gmt>2015-08-05 13:25:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[6WryUR  <a href="http://ieuxndzmhdyv.com/" rel="nofollow">ieuxndzmhdyv</a>, [url=http://tjudclariuhw.com/]tjudclariuhw[/url], [link=http://yeexecsxnqcu.com/]yeexecsxnqcu[/link], http://xbghdfdiwjkb.com/]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1438781105]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438781105.2978201;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>GNU Toolchain</title>
		<link>http://godlzr.com/index.php/2015/07/23/gnu-toolchain/</link>
		<pubDate>Thu, 23 Jul 2015 21:23:10 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[GNU toolchain is a free C/C++ programming toolchain, it is an important part during the improvement of Linux system. Most of CPU manufacturers support the GNU compiler toolchain include the native- compile toolchain and cross-compile toolchain, that also makes the GNU toolchain become the most popular toolchain of embedded software development. It supports wide range of CPU architecture, such as x86, IA-32, MIPS,tile, PowerPC, Spark etc.

In common, GNU toolchain consists of these parts:
<ol>
	<li>GUN C Library.</li>
	<li>GNU Compiler Collection(GCC).</li>
	<li>Binutils(GNU Binary Utilities), includes objdump, readelf, strip, ar, nm, ldd, ngprof, gcov etc.</li>
	<li>GNU Remote Debugger(GDB).</li>
	<li>GNU make</li>
	<li>kernel debugger (KGDB).</li>
</ol>
Generally, GNU toolchain also includes:
<ol>
	<li>GNU code editor (vi, emacs, vim etc.</li>
	<li>GNU automake tool, in order to improve the portability of the code。</li>
</ol>
GNU编译工具链是一个“免费”的C/C++工具链，有力的支撑了Linux系统的发展。众多的处理器厂家都提供了对GNU编译工具链的支持（本地编译工具链（native-compile toolchain）、交叉编译（cross-compile toolchain）），这也使得其成为了嵌入式软件开发中最流行的工具集。其支持的体系结构非常广泛，其中包括：X86, IA-32, MIPS, tile, PowerPC, Spark etc.

通常来讲，我们认为GNU工具链主要由以下几个大的单元构成：
<ol>
	<li>GNU C Library，也就是通常所说的glibc，另外在嵌入式领域，往往采用glibc兼容的uclibc、newlib等。glibc是由GNU项目提供的标准C运行库，它针对PC应用设计，较庞大，但能提供最优的兼容性。如果一般的嵌入式开发可选用uClibc。uClibc原本是uCLinux开发过程中的一个C语言库，现已经独立于uCLinux项目并且进一步完善。它对glibc的大部分函数进行了重写，并且目标就定位于嵌入式，所以其相对glibc而言要小巧很多。此外由于它的函数与glibc保持一致，这样很多原本基于glibc开发的软件基本无需改动便可改用uClibc编译运行，使得在嵌入式系统上占用的内存和磁盘空间更少。但由于毕竟不是标准的C运行库，因此uClibc拥有着一定的兼容性问题。 Newlib是一个面向嵌入式系统的C运行库.最初是由Solutions收集组装的一个源代码集合,取名为newlib, 现在由Red Hat维护,对于与GNU兼容的嵌入式C运行库,Newlib并不是唯一的选择,但是从成熟度来讲,newlib是最优秀的.newlib具有独特的体系结构,使得它能够非常好地满足深度嵌入式系统的要求.newlib可移植性强, 具有可重入特性,功能完备等特点,已广泛应用于各种嵌入式系统中.</li>
	<li>编译工具GNU Compiler Collection (GCC)，</li>
	<li>二进制实用程序Binutils (GNU binary utilities)，其中包括：objdump、readelf、strip、ar、nm、ldd、ngprof、gcov等。</li>
	<li>调试工具GNU Remote Debugger (GDB)</li>
	<li>GNU make</li>
	<li>内核调试工具kgdb.</li>
</ol>
从广义上来讲，GNU的工具链还包括如下几个单元：
<ol>
	<li>GNU代码编辑器(vi, emacs, vim etc.)</li>
	<li>GNU自动化工具，旨在提高程序可移植性。</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2015-07-23 21:23:10</wp:post_date>
		<wp:post_date_gmt>2015-07-23 21:23:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gnu-toolchain</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="operating-system"><![CDATA[Operating System]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13021776487]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13021776487]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[oakley sunglasses outlet]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://shopping.discount-oksunglasses.com/</wp:comment_author_url>
			<wp:comment_author_IP>175.44.8.54</wp:comment_author_IP>
			<wp:comment_date>2015-09-17 23:46:35</wp:comment_date>
			<wp:comment_date_gmt>2015-09-18 03:46:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>oakley sunglasses outlet</strong>

Hello, I enjoy reading all of your article. I like to write a little comment to support you.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1442547995]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1442547995.2859321;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Callback Function 回调函数</title>
		<link>http://godlzr.com/index.php/2015/07/30/callback-function/</link>
		<pubDate>Thu, 30 Jul 2015 18:50:57 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=250</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">回调函数就是一个通过</span>函数指针<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">调用的函数。如果你把函数的</span>指针<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">（地址）作为</span>参数传递<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">给另一个函数，当这个指针被用来调用其所指向的函数时，我们就说这是回调函数。回调函数不是由该函数的实现方法直接调用，而是在特定的事件或条件发生时由另外的一方调用的，用于对该事件或条件进行响应。</span>
</p>

<p>
	<strong style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14.3999996185303px; line-height: 16.7999992370605px; background-color: rgb(40, 85, 126);"><span style="background-color:#FFFFFF;">为什么要使用回调函数？</span></strong><br />
	<span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14.3999996185303px; line-height: 16.7999992370605px;"><span style="background-color:#FFFFFF;">　　因为可以把调用者与被调用者分开。调用者不关心谁是被调用者，所有它需知道的，只是存在一个具有某种特定原型、某些限制条件（如返回值为int）的被调用函数。</span></span><br />
	<span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14.3999996185303px; line-height: 16.7999992370605px;"><span style="background-color:#FFFFFF;">　　如果想知道回调函数在实际中有什么作用，先假设有这样一种情况，我们要编写一个库，它提供了某些排序算法的实现，如冒泡排序、快速排序、shell排序、shake排序等等，但为使库更加通用，不想在函数中嵌入排序逻辑，而让使用者来实现相应的逻辑；或者，想让库可用于多种数据类型（int、float、string），此时，该怎么办呢？可以使用函数指针，并进行回调。</span></span><br />
	<span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14.3999996185303px; line-height: 16.7999992370605px;"><span style="background-color:#FFFFFF;">　　回调可用于通知机制，例如，有时要在程序中设置一个计时器，每到一定时间，程序会得到相应的通知，但通知机制的实现者对我们的程序一无所知。而此时，就需有一个特定原型的函数指针，用这个指针来进行回调，来通知我们的程序事件已经发生。实际上，SetTimer() API使用了一个回调函数来通知计时器，而且，万一没有提供回调函数，它还会把一个消息发往程序的消息队列。</span></span><br />
	<span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14.3999996185303px; line-height: 16.7999992370605px;"><span style="background-color:#FFFFFF;">　　另一个使用回调机制的API函数是EnumWindow()，它枚举屏幕上所有的顶层窗口，为每个窗口调用一个程序提供的函数，并传递窗口的处理程序。如果被调用者返回一个值，就继续进行迭代，否则，退出。EnumWindow()并不关心被调用者在何处，也不关心被调用者用它传递的处理程序做了什么，它只关心返回值，因为基于返回值，它将继续执行或退出。</span></span><br />
	<span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14.3999996185303px; line-height: 16.7999992370605px;"><span style="background-color:#FFFFFF;">　　不管怎么说，回调函数是继续自C语言的，因而，在C++中，应只在与C代码建立接口，或与已有的回调接口打交道时，才使用回调函数。除了上述情况，在C++中应使用虚拟方法或函数符（functor），而不是回调函数。</span></span><br />
	<span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14.3999996185303px; line-height: 16.7999992370605px;"><span style="background-color:#FFFFFF;">&nbsp; &nbsp; &nbsp; &nbsp;下面是一个简单的回调函数，相比其他的那些复杂的代码，这个更容易理解：</span></span>
</p>

<pre class="brush:cpp;">
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
void perfect(int n)
{
    int i=1;
    int count=0;
    for(i=1;i&lt;n;i++)
    {
        if(0==n%i)
        {
           count+=i;
        }
     }
     if(count==n)
         printf(&quot;%d是完数\n&quot;,n);
     else 
         printf(&quot;%d不是完数\n&quot;,n);
}

void myCallback(void (*perfect)(int ),int n)
{
     perfect(n);
}

int main()
{
     int n;
     printf(&quot;请输入一个正整数\n&quot;);
     scanf(&quot;%d&quot;,&amp;n);

     myCallback(perfect,n);
     return 0;
}</pre>

<p>
	&nbsp;
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>250</wp:post_id>
		<wp:post_date>2015-07-30 14:50:57</wp:post_date>
		<wp:post_date_gmt>2015-07-30 18:50:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>callback-function</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cc"><![CDATA[C/C++]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Debug issue &quot;no source main()&quot; with cmake build eclipse CDT project</title>
		<link>http://godlzr.com/index.php/2015/07/31/cmake-build-eclipse-project-debugging-no-source-main/</link>
		<pubDate>Fri, 31 Jul 2015 20:35:30 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=256</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	When using&nbsp;cmake to build the eclipse project automaticly, the execturable file lack debug symbol, and gdb can not work on it.
</p>

<p>
	The issue is caused when you use<strong> cmake -G &quot;Eclipse CDT4 - Unix Makefiles&quot;,&nbsp;</strong>it doesn&#39;t create debug symbol for gdb.
</p>

<p>
	To solve the issue indicate the make build type&nbsp;
</p>

<p>
	<span style="color: rgb(0, 0, 0); font-family: sans-serif; line-height: 19.0499992370605px;"><strong>cmake -DCMAKE_BUILD_TYPE=Debug </strong>&nbsp;or (<strong>Release)</strong><strong>&nbsp;</strong></span>
</p>

<p>
	<font color="#000000" face="sans-serif"><span style="line-height: 19.0499992370605px;">and then build the CDT4 project regularly, the gdb should works correctly.</span></font><font color="#000000" face="sans-serif"><span style="line-height: 19.0499992370605px;">&nbsp;</span></font>
</p>

<p>
	<font color="#000000" face="sans-serif"><span style="line-height: 19.0499992370605px;">Other solution of cmake related issues can be found <a href="http://www.cmake.org/Wiki/CMake_FAQ">here</a>.&nbsp;</span></font>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date>2015-07-31 16:35:30</wp:post_date>
		<wp:post_date_gmt>2015-07-31 20:35:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cmake-build-eclipse-project-debugging-no-source-main</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cmake"><![CDATA[cmake]]></category>
		<category domain="post_tag" nicename="gdb"><![CDATA[GDB]]></category>
		<category domain="category" nicename="issues-solution"><![CDATA[Issues Solution]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OpenGL is a State Machine（OpenGL状态机）</title>
		<link>http://godlzr.com/index.php/2015/08/02/opengl_state_machine/</link>
		<pubDate>Sun, 02 Aug 2015 22:46:18 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=261</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: justify;">
	1. OpenGL is a state machine, so the first question is &quot;what is the&nbsp;state machine?&quot;
</p>

<ul>
	<li style="text-align: justify;">
		State machine: is a kind of machine which keep various of state in its memory. It can accept input and change the corresponding state in its memory, and it can also output its current state when getting inqurie. So for a time, and a state, it only have one value for&nbsp;this state. And it may get into a special state(stop state), and it stop to accept input, and turned off.
	</li>
</ul>

<p style="text-align: justify;">
	So OpenGL works as a state machine. First of all, OpenGL keep various of states values, such as current color, l<span style="line-height: 20.7999992370605px;">urrent viewing and projection transformations, line and polygon stipple patterns, polygon drawing modes, pixel-packing conventions, positions and characteristics of lights, and material properties of the objects being drawn,&nbsp;</span>etc.&nbsp;Programmer&nbsp;puts it into various states (or modes) that then remain in effect until changing&nbsp;them. The current color is a state variable. You can set the current color to white, red, or any other color, and thereafter every object is drawn with that color until you set the current color to something else. The current color is only one of many state variables that OpenGL maintains. Many state variables refer to modes that are enabled or disabled with the command&nbsp;glEnable()&nbsp;or&nbsp;glDisable().
</p>

<p style="text-align: justify;">
	2. Each state variable or mode has a default value, and at any point you can query the system for each variable&#39;s current value. Typically, you use one of the six following commands to do this:&nbsp;
</p>

<ul>
	<li style="text-align: justify;">
		glGetBooleanv(), &nbsp;
	</li>
	<li style="text-align: justify;">
		glGetDoublev(),
	</li>
	<li style="text-align: justify;">
		glGetFloatv(),
	</li>
	<li style="text-align: justify;">
		glGetIntegerv(),&nbsp;
	</li>
	<li style="text-align: justify;">
		glGetPointerv(),
	</li>
	<li style="text-align: justify;">
		or&nbsp;glIsEnabled().
	</li>
</ul>

<p style="text-align: justify;">
	Which of these commands you select depends on what data type you want the answer to be given in. Some state variables have a more specific query command (such as&nbsp;glGetLight*(),&nbsp;glGetError(), or&nbsp;glGetPolygonStipple()). In addition, you can save a collection of state variables on an attribute stack with&nbsp;glPushAttrib()&nbsp;or&nbsp;glPushClientAttrib(), temporarily modify them, and later restore the values with&nbsp;glPopAttrib()&nbsp;or&nbsp;glPopClientAttrib(). For temporary state changes, you should use these commands rather than any of the query commands, since they&#39;re likely to be more efficient.
</p>

<p style="line-height: 20.7999992370605px; text-align: justify;">
	3. So how to set the state of OpenGL? Although you need to use getXXX to check the current state of OpenGL, but there is no set function as setXXX to set or change the state of OpenGL. OpenGL provides many functions such as&nbsp;<span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">glColor*, glMaterial*, glEnable, glDisable, to give the programmer the control of state change. So there is no need to have setXXX functions for OpenGL.</span>&nbsp;<strong>Important:&nbsp;From the prespective of state machine, it changes its state itself based on&nbsp;the external input, and it is not allowed to change its&nbsp;state directly by the outside, this is the reason why no need of the kind of setXXX function for OpenGL.</strong>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2015-08-02 18:46:18</wp:post_date>
		<wp:post_date_gmt>2015-08-02 22:46:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opengl_state_machine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[OpenGL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[opengl-is-a-state-machine%ef%bc%88opengl%e7%8a%b6%e6%80%81%e6%9c%ba%ef%bc%89]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Header Files, Libraries and DLLs</title>
		<link>http://godlzr.com/index.php/2015/08/02/header-files-libraries-and-dlls/</link>
		<pubDate>Sun, 02 Aug 2015 23:33:43 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=267</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	DLL: In real world project, you don&#39;t build the program&nbsp;from scratch, instead&nbsp;you download SDK, it comes with DLL, headers and lib files. DLLs are just the a compiled set of functions, the main benefit of DLL is reusable, for example some games in your computer may use the same&nbsp;graphics library, so this library can be packaged into a DLL. And DLL always comes with header files and lib files.
</p>

<p>
	Header: are usually a text file in a &quot;.h&quot; extension. All these are a description of functions you can call. But there is no implementation of the functions in the header file. Instead the implementations are all in the DLL. You can use keyword &quot;include&quot; in you program, the &quot; &quot; means to search the header file locally and &quot;&lt; &gt;&quot; means to&nbsp;search the header file elsewhere.
</p>

<p>
	LIB: related header file to DLL. Lib file is a binary file and tell us where in the DLL we can find the funcitons. For example, if we include a header file the project needs the lib file so that when we comilpe it we know where inside the DLL to find the functions, and then during&nbsp;the runtime in thoes exactly where to look inside that DLL for these functions.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date>2015-08-02 19:33:43</wp:post_date>
		<wp:post_date_gmt>2015-08-02 23:33:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>header-files-libraries-and-dlls</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cc"><![CDATA[C/C++]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>GPU 图形处理器</title>
		<link>http://godlzr.com/index.php/2015/08/02/gpu/</link>
		<pubDate>Mon, 03 Aug 2015 03:20:18 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=270</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	图形处理器（英语：Graphics Processing Unit，缩写：GPU），又称显示核心、视觉处理器、显示芯片，是一种专门在个人电脑、工作站、游戏机和一些移动设备（如平板电脑、智能手机等）上图像运算工作的微处理器。
</p>

<div class="para" style="margin: 15px 0px 5px; text-indent: 2em; line-height: 24px; font-family: arial, 宋体, sans-serif; font-size: 14px;">
	显卡的处理器称为图形处理器（GPU），它是显卡的&ldquo;心脏&rdquo;，与CPU类似，只不过GPU是专为执行复杂的数学和几何计算而设计的，这些计算是图形渲染所必需的。某些最快速的GPU集成的晶体管数甚至超过了普通CPU。
</div>

<div class="para" style="margin: 15px 0px 5px; text-indent: 2em; line-height: 24px; font-family: arial, 宋体, sans-serif; font-size: 14px;">
	时下的GPU多数拥有2D或3D图形加速功能。如果CPU想画一个二维图形，只需要发个指令给GPU，如&ldquo;在坐标位置（x, y）处画个长和宽为a&times;b大小的长方形&rdquo;，GPU就可以迅速计算出该图形的所有像素，并在显示器上指定位置画出相应的图形，画完后就通知CPU &ldquo;我画完了&rdquo;，然后等待CPU发出下一条图形指令。&nbsp;
</div>

<div class="para" style="margin: 15px 0px 5px; text-indent: 2em; line-height: 24px; font-family: arial, 宋体, sans-serif; font-size: 14px;">
	有了GPU，CPU就从图形处理的任务中解放出来，可以执行其他更多的系统任务，这样可以大大提高计算机的整体性能。<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">GPU是显示卡的&ldquo;大脑&rdquo;，GPU决定了该显卡的档次和大部分性能，同时GPU也是2D显示卡和3D显示卡的区别依据。2D显示芯片在处理3D图像与特效时主要依赖CPU的处理能力，称为软加速。3D显示芯片是把三维图像和特效处理功能集中在显示芯片内，也就是所谓的&ldquo;</span>硬件加速<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">&rdquo;功能。</span>
</div>

<div class="para" style="margin: 15px 0px 5px; text-indent: 2em; line-height: 24px; font-family: arial, 宋体, sans-serif; font-size: 14px;">
	<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">今天，GPU已经不再局限于3D图形处理了，GPU通用计算技术发展已经引起业界不少的关注，事实也证明在</span>浮点运算<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">、</span>并行计算<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">等部分计算方面，GPU可以提供数十倍乃至于上百倍于CPU的性能，如此强悍的&ldquo;新星&rdquo;难免会让CPU厂商老大</span>英特尔<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">为未来而紧张， NVIDIA和英特尔也经常为CPU和GPU谁更重要而展开口水战。GPU通用计算方面的标准目前有 OPEN CL、CUDA、ATI STREAM。其中，OpenCL(全称Open Computing Language，开放运算语言)是第一个面向异构系统通用目的并行编程的开放式、免费标准，也是一个统一的</span>编程环境<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">，便于软件开发人员为高性能计算服务器、桌面计算系统、手持设备编写高效轻便的代码，而且广泛适用于</span>多核心<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">处理器(CPU)、图形处理器(GPU)、Cell类型架构以及</span>数字信号处理器<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">(DSP)等其他并行处理器，在游戏、娱乐、科研、医疗等各种领域都有广阔的发展前景，</span>
</div>

<div class="para" style="margin: 15px 0px 5px; text-indent: 2em; line-height: 24px; font-family: arial, 宋体, sans-serif; font-size: 14px;">
	<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">简单说GPU就是能够从硬件上支持T&amp;L（Transform and Lighting，多边形转换和光源处理）的</span>显示芯片<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">，由于T&amp;L是3D</span>渲染<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">中的一个重要部分，其作用是计算多边形的3D位置与处理动态光线效果，也能称为&ldquo;几何处理&rdquo;。一个好的T&amp;L单元，能提供细致的3D物体和高级的光线特效；只不过大多数PC中，T&amp;L的大部分运算是交由CPU处理的(这就也就是所谓软件T&amp;L)，因为CPU的任务繁多，除了T&amp;L之外，还要做</span>内存管理<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">和输入响应等非3D图形处理工作，所以在实际运算的时候性能会大打折扣，一般出现显卡等待CPU数据的情况，CPU运算速度远跟不上时下复杂三维游戏的要求。即使CPU的</span>工作频率<span style="font-family: arial, 宋体, sans-serif; font-size: 14px; line-height: 24px; text-indent: 28px;">超出1GHz或更高，对它的帮助也不大，因为这是PC本身设计造成的问题，与CPU的速度无太大关系。</span>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>270</wp:post_id>
		<wp:post_date>2015-08-02 23:20:18</wp:post_date>
		<wp:post_date_gmt>2015-08-03 03:20:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gpu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[OpenGL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[gpu-%e5%9b%be%e5%bd%a2%e5%a4%84%e7%90%86%e5%99%a8]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OpenGL pipeline</title>
		<link>http://godlzr.com/index.php/2015/08/03/opengl-pipeline/</link>
		<pubDate>Mon, 03 Aug 2015 05:56:25 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=276</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	渲染：计算机根据模型创建图象。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	<em><strong>模型</strong></em>（或物体）是由<em><strong>几何图元</strong></em>构成的，而<em><strong>几何图元</strong></em>是通过<em><strong>顶点(顶点数据)</strong></em>来指定的。可以这样理解，顶点数据即几何图元的数学表示。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	最终渲染的图象由屏幕<em><strong>像素</strong></em>组成。<em><strong>像素（pixel）</strong></em>是显示硬件能够放置到屏幕上的最小的可视元素。有关像素的信息（如颜色）在系统内存中被组织为位面（bitplane）。位面构成了帧缓存（包含图形显示设备为控制屏幕上所有像素的颜色和亮度所需的信息）。&nbsp;<br />
	1、使用几何图元建立模型，从而得到物体的数学描述。（OpenGL将点、直线、多边形、图形和位图视为图元）；&nbsp;<br />
	2、在三维空间排列物体，选择观察场景的有利位置；&nbsp;<br />
	3、计算所有物体的颜色。颜色可能是由应用程序指定的、根据光照条件确定的、将问题粘贴到物体上得到的，也可能是上述多种操作的结果；&nbsp;<br />
	4、将物体的数学描述和相关的颜色信息转换为屏幕像素，这被称为<em><strong>光栅化（）</strong></em>。&nbsp;<br />
	当我们把绘制的图形传递给OpenGL后，OpenGL还要做许多才能完成3D空间到屏幕的投影。这一系列的过程称为OpenGL渲染流水线。一般的渲染流水线过程有如下几步： 显示列表 求值程序 顶点操作 图元装配 像素操作 纹理装配 光栅化 片断操作
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px; text-align: center;">
	<a href="http://godlzr.com/wp-content/uploads/2015/08/open1.jpg"><img alt="open1" class="alignnone size-full wp-image-277" height="425" src="http://godlzr.com/wp-content/uploads/2015/08/open1.jpg" width="940" /></a>
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	&nbsp;
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	OpenGL pipeline 可以分为两部分，一部分是对<strong>顶点数据(Vertex data)</strong>的操作，另一部分是对<strong>像素数据(Pixel data)</strong>的操作。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	1.首先，<strong>顶点数据</strong>和<strong>像素数据</strong>都可以保存在<strong>显示列表(Display list)</strong>当中，用来维护一定的执行顺序。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	2.<strong>求值器(Evaluators)，</strong>将几何图元用顶点数据来表示，求值器根据顶点计算出图元的数学表达方法，多数情况下是一种多项式映射，简单的理解为一个函数表达式，可以进一步计算该图元上的某顶点的信息(表面法线，纹理坐标，颜色，空间坐标)。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	3. <strong>顶点操作</strong>接着，对于顶点数据，可以做一系列的操作，包括几何变换，还有纹理光照等一系列的着色操作，这里就可以使用shader着色器，所以这一步也是vertex shader。然后将顶点变换为图元。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	4.&nbsp;<strong>图元装配(primitive assembly)，</strong>根据一定的透视规则裁剪图元并将单个图元装配成完整的几何图元。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	<strong>像素操作(pixel operations) </strong>即对像素做一些对应的操作.
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	5.像素操作之后即<strong>纹理装配(texture assembly)</strong>，包括一系列的纹理贴图与定位。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	6. <strong>光栅化(Rasterization)</strong>, 将几何数据与像素数据合并转换为<strong>片段(fragment)</strong>，即帧缓冲中的像素， 把顶点连接起来并填充内部像素。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	7.<strong>片段操作(fragment operation)</strong>,一系列操作（<span style="color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">这里也可以运用shader即<strong>fragment shader</strong></span>）之后生成最终的帧，存入<strong>帧缓冲(frame buffer)。</strong>
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	&nbsp;
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	简单来说，Data--&gt; vertex shader (将数据转化为顶点)--&gt;rasterization(连接顶点并填充三角形)--&gt; fragment shader(根据几何图元加载颜色生成像素)--&gt;output image(根据像素生成图片)--&gt;在屏幕上显示
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>276</wp:post_id>
		<wp:post_date>2015-08-03 01:56:25</wp:post_date>
		<wp:post_date_gmt>2015-08-03 05:56:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opengl-pipeline</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[OpenGL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[business development]]></wp:comment_author>
			<wp:comment_author_email>Saggione252814@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://businessfirstfamily.com/</wp:comment_author_url>
			<wp:comment_author_IP>192.3.13.65</wp:comment_author_IP>
			<wp:comment_date>2015-08-10 07:17:53</wp:comment_date>
			<wp:comment_date_gmt>2015-08-10 11:17:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I love your ideas that everybody can relate to.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1439205473]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439205474.0041251;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[TheDigitalBridges.com]]></wp:comment_author>
			<wp:comment_author_email>Schrimsher445419@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.thedigitalbridges.com</wp:comment_author_url>
			<wp:comment_author_IP>108.170.22.198</wp:comment_author_IP>
			<wp:comment_date>2015-08-31 17:27:04</wp:comment_date>
			<wp:comment_date_gmt>2015-08-31 21:27:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome website and even better content! Will soon be back soon.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1441056424]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441056424.389915;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1442245077.9891169;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"godlzr";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>一览众山小：OpenCV 2.4.8组件结构全解析</title>
		<link>http://godlzr.com/index.php/2015/08/07/opencv2-4-8_components/</link>
		<pubDate>Fri, 07 Aug 2015 16:14:53 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=286</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<h1 style="margin: 0px; padding: 0px;">
		&nbsp;
	</h1>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 16px;"><span style="color: rgb(51, 51, 255);">本系列文章由zhmxy555（毛星云）编写，转载请注明出处。&nbsp;</span></span><span style="color: rgb(51, 51, 255);">&nbsp;</span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-size: 16px;"><span style="font-family: 'Microsoft YaHei';"><span style="color: rgb(102, 0, 204);">文章链接：</span><a href="http://blog.csdn.net/poem_qianmo/article/details/19809337" style="color: rgb(202, 0, 0); text-decoration: none;" target="_blank">&nbsp;</a><a href="http://blog.csdn.net/poem_qianmo/article/details/19925819" style="color: rgb(202, 0, 0); text-decoration: none;" target="_blank">http://blog.csdn.net/poem_qianmo/article/details/19925819</a></span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-size: 16px;"><span style="font-family: 'Microsoft YaHei';"><span style="color: rgb(0, 153, 0);">作者：毛星云（浅墨）&nbsp;&nbsp;&nbsp;&nbsp;邮箱：&nbsp;</span><span style="color: rgb(0, 153, 0);"><a href="mailto:happylifemxy@163.com" style="color: rgb(202, 0, 0); text-decoration: none;" target="_blank">happylifemxy@163.com</a>&nbsp;</span></span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="white-space: pre; font-size: 16px;"><span style="color: rgb(255, 0, 0);">写作当前博文时配套使用OpenCV版本：2.4.8</span></span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">之前啃了不少OpenCV的官方文档，发现如果了解了一些OpenCV整体的模块架构后，再重点学习自己感兴趣的部分的话，就会有一览众山小的感觉，于是，就决定写出这篇文章，作为启程OpenCV系列博文的第二篇。</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">至于OpenCV组件结构的研究方法，我们不妨管中窥豹，通过opencv安装路径下include目录里面头文件的分类存放，来一窥OpenCV这些年迅猛发展起来的庞杂组件架构。</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">我们进入到D:\ProgramFiles\opencv\build\include目录，可以看到有opencv和opencv2这两个文件夹。显然，opencv这个文件夹里面包含着旧版的头文件。</span><span style="font-family: 'Microsoft YaHei';">而opencv2这个文件夹里面包含着具有时代意义的新版OpenCV2系列的头文件。</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;<img alt="" src="http://img.blog.csdn.net/20140225181139578?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcG9lbV9xaWFubW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="border: none; max-width: 100%;" /></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">在opencv这个文件夹里面，也就是D:\Program Files\opencv\build\include\opencv目录下，可以看到如下的各种头文件。这里面大概就是opencv 1.0最核心的，而且保留下来的内容的头文件，可以把它们整体理解为一个组件。</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;<img alt="" src="http://img.blog.csdn.net/20140225181220281?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcG9lbV9xaWFubW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="border: none; max-width: 100%;" /></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;再来看看我们重点关注的opencv2这边，</span><span style="font-family: 'Microsoft YaHei';">在D:\ProgramFiles\opencv\build\include\opencv2目录下，我们可以看到这些文件夹：</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><img alt="" src="http://img.blog.csdn.net/20140225181302390?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcG9lbV9xaWFubW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="border: none; max-width: 100%;" /></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">我们灵机一动，发现下面有个叫opencv_modules.hpp的hpp文件，一看就知道里面存放的是opencv2中的新模块构造相关的说明代码，打开一看，果不其然，定义的是OpenCV2所有组件的宏：</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<div class="dp-highlighter bg_cpp" style="font-family: Consolas, 'Courier New', Courier, mono, serif; font-size: 12px; width: 895.03125px; overflow: auto; padding-top: 1px; margin: 18px 0px !important; background-color: rgb(231, 229, 220);">
		<div class="bar" style="padding-left: 45px;">
			<div class="tools" style="padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(153, 153, 153); background-color: rgb(248, 248, 248);">
				<strong>[cpp][/cpp]</strong>&nbsp;<a class="ViewSource" href="http://blog.csdn.net/poem_qianmo/article/details/19925819#" style="color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 0px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_plain.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;" target="_blank" title="view plain">view plain</a><a class="CopyToClipboard" href="http://blog.csdn.net/poem_qianmo/article/details/19925819#" style="color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 0px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: url(http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/images/default/ico_copy.gif); background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;" target="_blank" title="copy">copy</a><a href="https://code.csdn.net/snippets/204804" style="color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 0px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: none; background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;" target="_blank" title="在CODE上查看代码片"><img alt="在CODE上查看代码片" height="12" src="https://code.csdn.net/assets/CODE_ico.png" style="max-width: 100%; position: relative; top: 1px; left: 2px;" width="12" /></a><a href="https://code.csdn.net/snippets/204804/fork" style="color: rgb(160, 160, 160); text-decoration: none; border: none; padding: 0px; margin: 0px 10px 0px 0px; display: inline-block; width: 16px; height: 16px; text-indent: -2000px; background-image: none; background-attachment: initial; background-color: inherit; background-size: initial; background-origin: initial; background-clip: initial; background-position: 0% 0%; background-repeat: no-repeat;" target="_blank" title="派生到我的代码片"><img alt="派生到我的代码片" height="12" src="https://code.csdn.net/assets/ico_fork.svg" style="max-width: 100%; position: relative; top: 2px; left: 2px;" width="12" /></a>

				<p>
					&nbsp;
				</p>

				<div style="position: absolute; left: 467px; top: 1884px; width: 29px; height: 14px; z-index: 99;">
					&nbsp;
				</div>

				<p>
					&nbsp;
				</p>
			</div>

			<p>
				&nbsp;
			</p>
		</div>

		<ol class="dp-cpp" start="1" style="padding-right: 0px; padding-left: 0px; border: none; color: rgb(92, 92, 92); margin: 0px 0px 1px 45px !important; background-color: rgb(255, 255, 255);">
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">/*</span>&nbsp;</span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**&nbsp;File&nbsp;generated&nbsp;automatically,&nbsp;do&nbsp;not&nbsp;modify&nbsp;**</span>&nbsp;</span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*</span>&nbsp;</span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*This&nbsp;file&nbsp;defines&nbsp;the&nbsp;list&nbsp;of&nbsp;modules&nbsp;available&nbsp;in&nbsp;current&nbsp;build&nbsp;configuration</span>&nbsp;</span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*</span>&nbsp;</span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">&nbsp;*</span>&nbsp;</span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="comment" style="margin: 0px; padding: 0px; border: none; color: rgb(0, 130, 0); background-color: inherit;">*/</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;">&nbsp;&nbsp;&nbsp;</span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_CALIB3D</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_CONTRIB</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_CORE</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_FEATURES2D</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_FLANN</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_GPU</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_HIGHGUI</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_IMGPROC</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_LEGACY</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_ML</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_NONFREE</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_OBJDETECT</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_OCL</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_PHOTO</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_STITCHING</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_SUPERRES</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_TS</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: rgb(85, 85, 85); line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_VIDEO</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
			<li class="alt" style="margin: 0px !important; padding: 0px 3px 0px 10px !important; border-style: none none none solid; border-left-width: 3px; border-left-color: rgb(153, 153, 153); list-style: decimal-leading-zero outside; color: inherit; line-height: 18px; background-color: rgb(245, 250, 226);">
				<span style="margin: 0px; padding: 0px; border: none; color: black; background-color: inherit;"><span class="preprocessor" style="margin: 0px; padding: 0px; border: none; color: gray; background-color: inherit;">#define&nbsp;HAVE_OPENCV_VIDEOSTAB</span><span style="margin: 0px; padding: 0px; border: none; background-color: inherit;">&nbsp;&nbsp;</span></span>
			</li>
		</ol>
	</div>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">OK，就不多客套了，下面就是OpenCV的所有模块介绍，按照顺序来：</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(204, 0, 0);">【calib3d】</span>&mdash;&mdash;其实就是就是Calibration（校准）加3D这两个词的组合缩写。这个模块主要是相机校准和三维重建相关的内容。基本的多视角几何算法，单个立体摄像头标定，物体姿态估计，立体相似性算法，3D信息的重建等等。</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(0, 153, 0);">【contrib】</span>&mdash;&mdash;也就是Contributed/Experimental Stuf的缩写， 该模块包含了一些最近添加的不太稳定的可选功能，不用去多管。2.4.8里的这个模块有新型人脸识别，</span><span style="font-family: 'Microsoft YaHei'; color: rgb(49, 49, 49);">立体匹配</span><span style="font-family: 'Microsoft YaHei';">，人工视网膜模型等技术。</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(255, 102, 0);">【core】</span>&mdash;&mdash;核心功能模块，包含如下内容：</span>
	</p>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
		<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
			<h1 style="margin: 0px; padding: 0px;">
				<a name="t2" style="color: rgb(202, 0, 0);" target="_blank"></a>
			</h1>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
				&nbsp;
			</p>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
				&nbsp;
			</p>

			<ul>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">OpenCV基本数据结构</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">动态数据结构</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">绘图函数</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">数组操作相关函数</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">辅助功能与系统函数和宏</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">与OpenGL的互操作</span></span>
				</li>
			</ul>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
				&nbsp;
			</p>
		</blockquote>
	</blockquote>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<h1 style="margin: 0px; padding: 0px;">
		<a name="t3" style="color: rgb(202, 0, 0);" target="_blank"></a>
	</h1>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei'; font-size: 18px; color: rgb(153, 51, 153);">&nbsp;【imgproc</span><span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(153, 51, 153);">】</span><span style="font-size: 14px;">&mdash;&mdash;Image和Processing这两个单词的缩写组合。图像处理模块，这个模块包含了如下内容：</span></span>
	</p>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
		<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
			<h1 style="margin: 0px; padding: 0px;">
				<a name="t4" style="color: rgb(202, 0, 0);" target="_blank"></a>
			</h1>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
				&nbsp;
			</p>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
				&nbsp;
			</p>

			<ul>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">线性和非线性的图像滤波</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">图像的几何变换</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">其它（Miscellaneous）图像转换</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">直方图相关</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">结构分析和形状描述</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">运动分析和对象跟踪</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">特征检测</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">目标检测等内容</span></span>
				</li>
			</ul>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
				&nbsp;
			</p>
		</blockquote>
	</blockquote>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<h1 style="margin: 0px; padding: 0px;">
		<a name="t5" style="color: rgb(202, 0, 0);" target="_blank"></a>
	</h1>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(51, 51, 255);">【features2d】</span><span style="font-size: 14px;">&nbsp;&mdash;&mdash;也就是Features2D， 2D功能框架 ，包含如下内容：</span></span>
	</p>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
		<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
			<ul>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>特征检测和描述</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>特征检测器（Feature Detectors）通用接口</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>描述符提取器（Descriptor Extractors）通用接口</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>描述符匹配器（Descriptor Matchers）通用接口</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>通用描述符（Generic Descriptor）匹配器通用接口</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>关键点绘制函数和匹配功能绘制函数</strong></span>
				</li>
			</ul>
		</blockquote>
	</blockquote>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
		<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
			<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
				<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
					<h1 style="margin: 0px; padding: 0px;">
						<a name="t6" style="color: rgb(202, 0, 0);" target="_blank"></a>
					</h1>

					<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
						&nbsp;
					</p>

					<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
						&nbsp;
					</p>
				</blockquote>
			</blockquote>
		</blockquote>
	</blockquote>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<h1 style="margin: 0px; padding: 0px;">
		<a name="t7" style="color: rgb(202, 0, 0);" target="_blank"></a>
	</h1>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(255, 102, 102);">【flann】</span><span style="font-size: 14px;">&mdash;&mdash;&nbsp;Fast Library for Approximate Nearest Neighbors，高维的近似近邻快速搜索算法库，</span></span><span style="font-size: 14px; font-family: 'Microsoft YaHei';">包含两个部分：</span>
	</p>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
		<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
			<h1 style="margin: 0px; padding: 0px;">
				<a name="t8" style="color: rgb(202, 0, 0);" target="_blank"></a>
			</h1>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
				&nbsp;
			</p>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
				&nbsp;
			</p>

			<ul>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">快速近似最近邻搜索</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">聚类</span></span>
				</li>
			</ul>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
				&nbsp;
			</p>
		</blockquote>
	</blockquote>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
		<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
			<h1 style="margin: 0px; padding: 0px;">
				<a name="t9" style="color: rgb(202, 0, 0);" target="_blank"></a>
			</h1>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
				&nbsp;
			</p>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
				<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
			</p>
		</blockquote>
	</blockquote>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<h1 style="margin: 0px; padding: 0px;">
		&nbsp;
	</h1>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(153, 102, 51);">【gpu】</span><span style="font-size: 14px;">&mdash;&mdash;运用GPU加速的计算机视觉模块</span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(51, 102, 255);">【highgui】</span><span style="font-size: 14px;">&mdash;&mdash;也就是high gui，高层GUI图形用户界面，包含媒体的I / O输入输出，</span></span><span style="font-family: 'Microsoft YaHei'; font-size: 14px;">视频捕捉、图像和视频的编码解码、图形交互界面的接口等内容</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(255, 0, 0);">【legacy】</span><span style="font-size: 14px;">&mdash;&mdash;一些已经废弃的代码库，保留下来作为向下兼容，包含如下相关的内容：</span></span><span style="font-family: 'Microsoft YaHei'; font-size: 14px;">&nbsp;</span>
	</p>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
		<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
			<ul>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>运动分析</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>期望最大化</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>直方图</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>平面细分（C API）</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>特征检测和描述（Feature Detection and Description）</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>描述符提取器（Descriptor Extractors）的通用接口</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>通用描述符（Generic Descriptor Matchers）的常用接口</strong></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><strong>匹配器</strong></span>
				</li>
			</ul>
		</blockquote>
	</blockquote>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<h1 style="margin: 0px; padding: 0px;">
		<a name="t11" style="color: rgb(202, 0, 0);" target="_blank"></a>
	</h1>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(204, 0, 0);">【ml】</span><span style="font-size: 14px;">&mdash;&mdash;Machine Learning，机器学习模块，&nbsp;基本上是统计模型和分类算法，包含如下内容：</span></span>
	</p>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
		<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
			<h1 style="margin: 0px; padding: 0px;">
				&nbsp;
			</h1>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
				&nbsp;
			</p>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
				&nbsp;
			</p>

			<ul>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">统计模型 （Statistical Models）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">一般贝叶斯分类器 （Normal Bayes Classifier）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">K-近邻 （K-NearestNeighbors）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">支持向量机 （Support Vector Machines）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">决策树 （Decision Trees）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">提升（Boosting）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">梯度提高树（Gradient Boosted Trees）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">随机树 （Random Trees）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">超随机树 （Extremely randomized trees）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">期望最大化 （Expectation Maximization）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">神经网络 （Neural Networks）</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">MLData</span></span>
				</li>
			</ul>
		</blockquote>
	</blockquote>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<h1 style="margin: 0px; padding: 0px;">
		&nbsp;
	</h1>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(204, 0, 0);">【nonfree】</span><span style="font-size: 14px;">，也就是一些具有专利的算法模块 ，包含特征检测和GPU相关的内容。最好不要商用，可能会被告哦。</span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(102, 51, 255);">【objdetect】</span><span style="font-size: 14px;">&mdash;&mdash;目标检测模块，包含Cascade Classification（级联分类）和Latent SVM这两个部分。</span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(51, 204, 0);">【ocl】</span><span style="font-size: 14px;">&mdash;&mdash;即OpenCL-accelerated Computer Vision，运用OpenCL加速的计算机视觉组件模块</span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(255, 102, 0);">【photo】</span><span style="font-size: 14px;">&mdash;&mdash;也就是Computational Photography，包含图像修复和图像去噪两部分</span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(0, 204, 204);">【stitching】</span><span style="font-size: 14px;">&mdash;&mdash;images stitching，图像拼接模块，包含如下部分：</span></span>
	</p>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
		<blockquote style="margin: 0px 0px 0px 40px; border: none; padding: 0px;">
			<h1 style="margin: 0px; padding: 0px;">
				<a name="t14" style="color: rgb(202, 0, 0);" target="_blank"></a>
			</h1>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
				&nbsp;
			</p>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
				&nbsp;
			</p>

			<ul>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">拼接流水线</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">特点寻找和匹配图像</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">估计旋转</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">自动校准</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">图片歪斜</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">接缝估测</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">曝光补偿</span></span>
				</li>
				<li>
					<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 14px;">图片混合</span></span>
				</li>
			</ul>

			<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
				&nbsp;
			</p>
		</blockquote>
	</blockquote>
</blockquote>

<blockquote style="font-family: Arial; font-size: 14px; font-style: normal; line-height: 26px; margin: 0px 0px 0px 40px; border: none; padding: 0px;">
	<h1 style="margin: 0px; padding: 0px;">
		&nbsp;
	</h1>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(51, 204, 0);">【superres】</span><span style="font-size: 14px;">&mdash;&mdash;SuperResolution，超分辨率技术的相关功能模块</span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(255, 102, 0);">【ts】</span><span style="font-size: 14px;">&mdash;&mdash;opencv测试相关代码，不用去管他</span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(102, 0, 204);">【video】</span><span style="font-size: 14px;">&mdash;&mdash;视频分析组件，</span></span><span style="font-family: 'Microsoft YaHei'; font-size: 14px;">该模块包括运动估计，背景分离，对象跟踪等视频处理相关内容。</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		<span style="font-family: 'Microsoft YaHei';"><span style="font-size: 18px; color: rgb(204, 0, 0);">【Videostab】</span><span style="font-size: 14px;">&mdash;&mdash;Video stabilization，视频稳定相关的组件，官方文档中没有多作介绍，不管它了。</span></span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px;">
		&nbsp;
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">&nbsp;</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">看到到这里，相信大家已经对OpenCV的模块架构设计有了一定的认识。</span>
	</p>

	<p style="margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; font-size: 14px;">
		<span style="font-family: 'Microsoft YaHei';">OpenCV其实就是这么多模块作为代码容器组合起来的一个SDK而已，没什么稀奇的，对吧。</span>
	</p>
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>286</wp:post_id>
		<wp:post_date>2015-08-07 12:14:53</wp:post_date>
		<wp:post_date_gmt>2015-08-07 16:14:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opencv2-4-8_components</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opencv"><![CDATA[OpenCV]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e4%b8%80%e8%a7%88%e4%bc%97%e5%b1%b1%e5%b0%8f%ef%bc%9aopencv-2-4-8%e7%bb%84%e4%bb%b6%e7%bb%93%e6%9e%84%e5%85%a8%e8%a7%a3%e6%9e%90]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pointers as function return</title>
		<link>http://godlzr.com/index.php/2015/08/11/pointers-as-function-return/</link>
		<pubDate>Wed, 12 Aug 2015 02:03:17 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=289</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	我们可以将指针作为返回值，但是要注意的是，如果是在栈中分配的内存空间，函数中内存空间在函数执行完之后就释放了，同理，函数中的局部变量也会释放，如果这段空间被其他代码占用，则该指针指向的内存单元所保存的值就不再是我们期望的了，这种做法很明显是危险的。
</p>

<p>
	使用指针作为返回值有两种情况，一种是该指针指向的是在heap中由程序员申请的内存空间，这种情况下程序员可清楚的知道内存的分配情况。另一种是全局变量，全局变量的内存空间在程序执行完之后才会释放，所以可以放心的访问。
</p>

<p>
	<a href="http://godlzr.com/wp-content/uploads/2015/08/Screen-Shot-2015-08-11-at-9.51.24-PM.png"><img alt="Screen Shot 2015-08-11 at 9.51.24 PM" class="alignnone size-full wp-image-290" height="1068" src="http://godlzr.com/wp-content/uploads/2015/08/Screen-Shot-2015-08-11-at-9.51.24-PM.png" width="2534" /></a>
</p>

<p>
	This image is cropped from youtube channel mycodeschool, &quot;<a href="https://www.youtube.com/watch?v=E8Yh4dw6Diw&amp;list=PL2_aWCzGMAwLZp6LMUKI3cc7pgGsasm2_&amp;index=14"><span class="watch-title " dir="ltr" id="eow-title" style="margin: 0px; padding: 0px; border: 0px; background: transparent;" title="Pointers as function returns in C/C++">Pointers as function returns in C/C++</span></a>&quot;.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>289</wp:post_id>
		<wp:post_date>2015-08-11 22:03:17</wp:post_date>
		<wp:post_date_gmt>2015-08-12 02:03:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pointers-as-function-return</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cc"><![CDATA[C/C++]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[转]大总结：雅思听力答案的写法</title>
		<link>http://godlzr.com/index.php/2015/08/12/ielts_listening/</link>
		<pubDate>Wed, 12 Aug 2015 15:45:30 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=299</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	<strong>For questions where the answers are letters or Roman numbers, you should write ONLY the number of answers required. For example, if the answer is a single letter or number, you should write only one answer. If you have written more letters or numerals than are required, the answer must be marked wrong.</strong>
</p>

<p>
	什么意思呢？（哼，这个都看不懂，就不用去考雅思阅读了！！ [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] ）
</p>

<p>
	好吧，还是解释一下。也就是说，如果答案要求的是英文单词，你就只能填单词；如果要求写数字，就只能填数字。否则就不给分！与此同时，还需要符合单词和数字的数量要求。
</p>

<p>
	数量要求这一点，也是相当纠结，我们单独拿出说。总的原则是&ldquo;过犹不及&rdquo;，in other words，如果要求写三个单词，你写了四个，即使上下文意思完全正确，语法也perfect，考官还是会毫不留情的扣分 [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] 。官方是这样描述的：<br />
	<strong>If you are asked to write an answer using a certain number of words and/or (a) number(s), you will be penalized if you exceed this. For example, if a question specifies an answer using NO MORE THAN THREE WORDS and the correct answer is &ldquo;black leather coat&rdquo;, the answer of &ldquo;coat of black leather&rdquo; is incorrect.</strong>
</p>

<p>
	解释一下。比如，如果问题规定答案不能超过三个字，录音中如果出现的是&ldquo;coat&nbsp;of&nbsp;black&nbsp;leather&rdquo;，你很老实的填了&ldquo;coat&nbsp;of&nbsp;black&nbsp;leather&rdquo;，就错了。正确的答案应该是只有三个单词，&ldquo;black&nbsp;leather&nbsp;coat&rdquo;。Got it?
</p>

<p>
	雅思听力考试中，凡是填空类型的题目，在题目要求中都会用大写+黑体+斜体出现
</p>

<p>
	&ldquo;NO MORE THAN&nbsp;THREE WORDS AND/OR A NUMBER&rdquo;的字样。怎么理解这个复杂的要求呢？其实这是三个要求：<br />
	（1）不超过三个单词；
</p>

<p>
	（2）不超过一个数字；
</p>

<p>
	（3）最最最多不超过三个单词 + 一个数字
</p>

<p>
	同学们在誊写答案的时候，要仔细阅读每道题目的具体要求，不能自以为是。因为上文的字数要求是最熟悉的，而另外一些时候则会出现&ldquo;no&nbsp;more&nbsp;than&nbsp;two&nbsp;words&rdquo;，或者&ldquo;no more than a number&rdquo;，这些exceptions就很容易被忽略。在此，建议大家在读题的过程中，务必把题目要求中的字数要求划出来，避免低级错误。 [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi]
</p>

<p>
	那么，可能同学们就要问了。听力录音中要是真的出现了长、难短语，怎么去满足字数要求呢？以下是三个小窍门儿！<br />
	第一、省略冠词
</p>

<p>
	像form filling和note completion等一类题目，不需要遵循严格语法格式和要求。如果录音中是&ldquo;in the morning&rdquo;，完全可以誊写成&ldquo;in morning&rdquo;。
</p>

<p>
	第二、&quot;A介词B介词C&quot;结构 - CBA<br />
	如果录音中是&ldquo;a ball of string&rdquo;，可以写成&ldquo;string ball&rdquo;。如果录音中是&ldquo;a tour of the sites of London&rdquo;，可以写成&ldquo;London sites tour&rdquo;。
</p>

<p>
	第三、连字符（hyphen）<br />
	连字符的作用起码有两个。首先，凡是被连字符连起来的的几个词，都算一个。是不是有点绕？ [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] 举个例子吧~ 录音中是&ldquo;Preparing for IELTS is time and engergy consuming&rdquo;（&ldquo;准备雅思考试费时费力&rdquo;，有木有道出你的心声 [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] ），如果你写成&ldquo;time-and-engergy-consuming&rdquo;就算一个字了。因此，可以有效的减少字数。
</p>

<p>
	其实，很多同学都很混乱，到底什么时候要加连字符呢？有时候，在做听力时，听到&ldquo;door to door service&rdquo;，好开心耶，单词都简单，所以就写了&ldquo;door to door service&rdquo;。Sorry，没分数 [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] ~ 练习册后提供的答案是&ldquo;door-to-door service&rdquo;。为什么呢？看好了哦~ Service是名词，door to door在没有加hyphen的时候是介词短语，不能修饰service，加上以后，door-to-door变成了形容词。同理，face-to-face interview，keep-fit center，drop-off site。
</p>

<p>
	Answers maybe written in upper or lower case.<br />
	答案大写、小写都接受！这条要求，对于那些永远记不住大写原则的同学们来说，真是bless。什么意思呢？如果录音中听到了&ldquo;三月&rdquo;，那么，在answer sheet上，你既可以写符合英语文法的首字母大写版的&ldquo;March&rdquo;，也可以写全部字母都大写的&ldquo;MARCH&rdquo;，两种都符合答案要求。
</p>

<p>
	** 除非有特殊的要求，需要答案必须写lower case（小写）！！对了，&ldquo;小写&rdquo;的英文是lower case，&ldquo;大写&rdquo;怎么表达呢？除了这里的upper case，还可以说capital letter或是block letter，再或者，用动词形式，capitalize~<br />
	<strong>In&nbsp;questions&nbsp;where&nbsp;you&nbsp;are&nbsp;expected&nbsp;to&nbsp;complete&nbsp;a&nbsp;gap,&nbsp;you&nbsp;should&nbsp;transfer&nbsp;only&nbsp;the&nbsp;necessary missing&nbsp;word(s) onto&nbsp;the&nbsp;answer&nbsp;sheet.&nbsp;For example,&nbsp;<br />
	to&nbsp;complete&nbsp;&ldquo;in&nbsp;the&nbsp;&hellip;&rdquo;,&nbsp;and&nbsp;the&nbsp;correct&nbsp;answer&nbsp;is&nbsp;&ldquo;morning&rdquo;,&nbsp;the&nbsp;answer&nbsp;&ldquo;in&nbsp;the&nbsp;morning&rdquo;&nbsp;would&nbsp;be&nbsp;incorrect.&nbsp;</strong>
</p>

<p>
	这条要求具体是个什么意思呢？如果是填空题，只需要把正确答案那部分写在答题纸上。比如，要填充&ldquo;in&nbsp;the&nbsp;____&rdquo;，正确答案应该是&ldquo;morning&rdquo;，而你如果誊写了全部的三个字&ldquo;in&nbsp;the&nbsp;morning&rdquo;，就算答错了！ [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] &nbsp;
</p>

<p>
	与&ldquo;新奇&rdquo;合作的前考官们明确表示，如果重复题目中的任何一个词，哪怕是一个小小的a，the这种，都会影响得分。 [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] &nbsp;例如，______and______，录音中念道&ldquo;animals and plants&rdquo;，答题卡上只能写&ldquo;animals plants&rdquo;，写了那个&ldquo;and&rdquo;，就死了... [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] &nbsp;在此建议大家，誊写答案后，一定要检查答案是否重复了题目中的单词哟。切记！ [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi]
</p>

<p>
	来看下面一条要求：
</p>

<p>
	<strong>All answers require correct spelling (including words in brackets).</strong>
</p>

<p>
	所有答案必须拼写正确（包括括号中的词）。First of all，神马是&ldquo;括号中的词&rdquo;啊？
</p>

<p>
	剑桥系列的听力答案中，经常会出现这样的情况：April (the) 18th，或者put (it) together，再或者(the) best buy。这里的的&ldquo;the&rdquo;，&ldquo;it&rdquo;，&ldquo;the&rdquo;在誊答案的时候，是可有可无的，写不写都可以得分，但是如果选择写了，就必须拼写对！因为雅思Listening部分，几乎只要出现拼写错误，就不得分。
</p>

<p>
	不过，有没有看到我说的是&ldquo;几乎&rdquo;？还是有一个例外滴~ 那就是，人名、地名的不拼写原则。换言之，如果答案是录音中没有拼写的人名或地名，只要你的答案符合读音规则，考官就可以接受的。比如，某男的名字叫做Forest，写最靠谱的&ldquo;森林&rdquo;当然最理想，实在拼成了有double r的Forrest也不会丢分。同理，Allen = Alen，Anna=Ana，Green = Grean。很愉快吧！
</p>

<p>
	虽然有点撞大运的意思，但还是要真心的建议同学们，在平时的学习中注意字母组合的认读。有时候，相同的字母组合会发不同的音（e.g. 字母组合ou在pour，out，double，shoulder，soup，could中的发音都不相同）；不同的字母组合却会发相同的音(e.g.字母组合ie，ee，ea，ae，eo，oe，e，e，ey等，都可以发/i:/的音）。
</p>

<p>
	当然，拼写中还包括单复数的问题。我们合作的考官通常建议大家，在不影响理解的情况下，两者均可。多年的教学经验（额，好酸的一句话...），我建议同学们务必先通过context（上下文）判断用哪一种形式。比如：____ are in danger of becoming extinct。这里的be动词是are，填空处一定就要用复数。在无法判断的情况下，复数相对比较保险。因为在一般情况下，只要不是特指，英语中更习惯使用复数形式。
</p>

<p>
	Both US and UK spellings are acceptable.<br />
	包括雅思在内的不少英语考试中，单词的拼写一般都接受来不同英语国家的拼写习惯，即美式或英式拼写都接受。比如：colour=color，neighbour=neighbor， metre=meter，cheque=check。但是&ldquo;手紧&rdquo;的考官有话说！建议大家在誊答案的时候，统一用某类拼写，最好不要英美混杂。比如：My&nbsp;favourite&nbsp;（英式）shopping&nbsp;center（美式）...这种句子两边不讨好~
</p>

<p>
	<strong>All standard alternatives for numbers, dates and currencies are acceptable.</strong>
</p>

<p>
	有的同学在录音中听到了&ldquo;2.3 kilometer&rdquo;，看到问题问的是&ldquo;How long is the tunnel？&rdquo;就孜孜不倦的去拼写&ldquo;kilometer&rdquo;。不要当劳模好不好~ 浪费时间，而且很容易就错过下面一道题啦~ 雅思听力考试中，所有数字、日期、货币等的标准替代符号都是接受的！！
</p>

<p>
	雅思听力考试数字、日期、货币是常考点，在誊写这类答案时，既可以写成英语单词，也可以写成阿拉伯数字，或直接使用货币符号。例如，5 hours=5hrs，twelve=12，five percent=5%，July 18th 1988=7.18.1988，60 dollars=$60。
</p>

<p>
	值得注意的是，关于money的，单词要写在数字后，货币符号则要写在数字前。比如，10 dollars或$10。明白？ [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] &nbsp;同学们要用巧劲，使用货币符号 + 阿拉伯数字就既省时间又省空间。再者，$10只算一个数字，而10 dollars则算一个数字加一个单词。
</p>

<p>
	有的同学这时候就开始天马行空了~ 但是时间的分钟，比如10 minutes 30 seconds，一定不能写成10&#39;30&quot;，只能写成10.5 minutes。这是因为10 feet 30 inches在英语国家也可以写成是10&#39;30&quot;，会引起歧义。
</p>

<p>
	<strong>All standard abbreviations are acceptable.</strong>
</p>

<p>
	不会写联合国，不知道世界卫生组织的全称？没关系，雅思听力中所有标准缩写都被接受。这一条要求简直值得撒花庆祝！！
</p>

<p>
	关于缩写这个问题，雅思听力经常浮现。比如，地址的常考点&ldquo;街道&rdquo;，就有多种说法吧，这里，Street=St，Road=Rd，Boulevard=Blvd，Avenue=Ave，Drive=Dr... 啊，突然就可以少背好几个单词呢 [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi]
</p>

<p>
	国际组织更是，United Nations=UN，United Nations Education Science and Culture Organization=UNESCO。社会和学术称谓亦然，Doctor=Dr，Professor=Prof。 [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] &nbsp;&nbsp;这里提醒一句，使用缩写的时候，拜托大家使用标准缩写，别使用自己的&ldquo;懒惰版&rdquo;缩写，像15 minutes就不能写成15m，因为这可能会与15米混淆。Got it?
</p>

<p>
	好啦，事到如今，雅思官方对听力答案书写要求的所有条款，就为各位童鞋解读完了~ 累史我了 [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi] &nbsp;还不快谢谢我 [大总结：雅思听力答案的写法&nbsp;<wbr />By&nbsp;<wbr />Danqi]
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date>2015-08-12 11:45:30</wp:post_date>
		<wp:post_date_gmt>2015-08-12 15:45:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ielts_listening</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[Others]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e5%a4%a7%e6%80%bb%e7%bb%93%ef%bc%9a%e9%9b%85%e6%80%9d%e5%90%ac%e5%8a%9b%e7%ad%94%e6%a1%88%e7%9a%84%e5%86%99%e6%b3%95]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e9%9b%85%e6%80%9d%e5%90%ac%e5%8a%9b%e7%ad%94%e6%a1%88%e7%9a%84%e5%86%99%e6%b3%95]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.Singleton 单例模式</title>
		<link>http://godlzr.com/index.php/2015/08/13/singleton/</link>
		<pubDate>Thu, 13 Aug 2015 16:37:50 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=304</guid>
		<description></description>
		<content:encoded><![CDATA[<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">1.<a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/src/com/godlzr/GOF23/singleton">单例模式</a>，一个类只有一个对象，并且提供一个访问该实例的全局访问点</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">例如，windows的任务管理器，回收站。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">调用效率，线程安全，懒加载</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">优点：只有一个实例，内存占用和系统开销小，</span></span>
</p>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">饿汉式：</span></span>
		</p>

		<ul style="margin-top:0pt;margin-bottom:0pt;">
			<li dir="ltr" style="list-style-type: circle; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">线程安全，调用效率高，不能延时加载</span></span>
				</p>
			</li>
		</ul>
	</li>
</ul>

<pre class="brush:java;">
/*
 * 测试饿汉式单例模式
 */
public class SingletonDemo1 {

	//由于加载类时天然的线程安全
	private static SingletonDemo1 instance = new SingletonDemo1();//2.类初始化时立即直接构造函数实例（饿汉式）（没有延时加载的优势）
	
	private SingletonDemo1(){
	}//1.构造函数私有化
	
	//方法没有同步，调用效率高
	public static SingletonDemo1 getInstance(){
		return instance;
	}//3.实例唯一的访问方法
}</pre>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">懒汉式：</span></span>
		</p>

		<ul style="margin-top:0pt;margin-bottom:0pt;">
			<li dir="ltr" style="list-style-type: circle; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">线程安全，调用效率低，延时加载（懒加载，只有用的时候才new实例),</span></span>
				</p>
			</li>
			<li dir="ltr" style="list-style-type: circle; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">需要同步，并发效率低。</span></span>
				</p>
			</li>
		</ul>
	</li>
</ul>

<pre class="brush:java;">
/*
 * 单例模式懒汉式
 */
public class SingletonDemo2 {

	private static SingletonDemo2 instance;//2.类初始化时不初始化对象实例，延时加载，真正使用的时候再加载
	
	private SingletonDemo2(){ }//1.构造函数私有化
	
	//4.SYNCHRONIZED 需要同步，调用效率低，保证同一时间只有一个线程访问获取实例函数，这样就不会有多个实例被创建
	public static synchronized SingletonDemo2 getInstance(){
		if( instance == null)
		{
			instance = new SingletonDemo2();//3.使用的时候才真正构造对象实例，加载对象
		}
		return instance;
	} 
}</pre>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">双重检测锁 double check lock</span></span>
		</p>

		<ul style="margin-top:0pt;margin-bottom:0pt;">
			<li dir="ltr" style="list-style-type: circle; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">将同步检测放在if下，提高了调用的效率</span></span>
				</p>
			</li>
		</ul>
	</li>
</ul>

<pre class="brush:java;">
/*
 * 双重检查锁实现单例模式
 */
public class SingletonDemo3 {
	private static SingletonDemo3 instance = null;
	
	private SingletonDemo3(){}
	
	public static SingletonDemo3 getInstance(){
		
		if(instance == null){
			SingletonDemo3 sc;
			synchronized (SingletonDemo3.class){
				sc = instance;
				if(sc == null){
					synchronized (SingletonDemo3.class){
						if(sc == null){
							sc = new SingletonDemo3();
						}
					}
					instance  = sc;
				}
			}
		}
		return instance;
	}
}</pre>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">静态内部类 *（并发高效调用，和延时加载）</span></span>
		</p>

		<ul style="margin-top:0pt;margin-bottom:0pt;">
			<li dir="ltr" style="list-style-type: circle; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">也是一种懒加载</span></span>
				</p>
			</li>
			<li dir="ltr" style="list-style-type: circle; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">使用静态内部类</span></span>
				</p>
			</li>
		</ul>
	</li>
</ul>

<pre class="brush:java;">
/*
 * 静态内部类实现单例模式
 * 这种方式线程安全，调用效率高，实现了延时加载
 */

public class SingletonDemo4 {

	//静态内部类
	private static class SingletonClassInstance{
		private static final SingletonDemo4 instance =  new SingletonDemo4();
	}
	private SingletonDemo4(){}
	
	//方法没有同步，调用效率高
	public static SingletonDemo4 getInstance(){
		return SingletonClassInstance.instance;//调用时才加载静态内部类，并由静态内部类获取实例
	}
}</pre>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">枚举单例 （最安全）</span></span>
		</p>

		<ul style="margin-top:0pt;margin-bottom:0pt;">
			<li dir="ltr" style="list-style-type: circle; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">枚举对象天然是单例的</span></span>
				</p>
			</li>
			<li dir="ltr" style="list-style-type: circle; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">天然防止反射和反序列化</span></span>
				</p>
			</li>
		</ul>
	</li>
</ul>

<pre class="brush:java;">
/*
 * 枚举模式实现单例，枚举没有延时加载
 */
public enum SingletonDemo5 {
	
	//这个枚举元素本身就是单例
	INSTANCE;
	//添加自己需要的操作
	public void singletonOperation(){
	}
}</pre>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(152, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">如何选用</span></span>
</p>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">单例对象 占用资源少 不需要延时加载：枚举 好于 饿汉</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">单例对象 占用资源多 需要延时加载：静态内部类 好于 懒汉</span></span>
		</p>
	</li>
</ul>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(152, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">问题</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(152, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">&nbsp;&nbsp; &nbsp;</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/src/com/godlzr/GOF23/singleton/Client2.java">反射破解除枚举外的单例模式，</a>（<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/src/com/godlzr/GOF23/singleton/SingletonDemo6.java">在构造器中判断实例是否为空</a>，不是的话抛出异常，不初始化新实例）</span></span>
</p>

<p>
	<span id="docs-internal-guid-0a891e64-27e9-c0b1-bd6e-8d7ca9e765e7"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">&nbsp;&nbsp; &nbsp;</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/src/com/godlzr/GOF23/singleton/Client2.java">反序列化破解除枚举外的单例模式</a>。（<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/src/com/godlzr/GOF23/singleton/SingletonDemo6.java">使用 readResolve() 防止</a>）。</span></span>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>304</wp:post_id>
		<wp:post_date>2015-08-13 12:37:50</wp:post_date>
		<wp:post_date_gmt>2015-08-13 16:37:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>singleton</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="creational-patterns"><![CDATA[Creational Patterns]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[singleton-%e5%8d%95%e4%be%8b%e6%a8%a1%e5%bc%8f]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2. Factor, Builder, Prototype 工厂模式, 建造者模式和原型模式</title>
		<link>http://godlzr.com/index.php/2015/08/14/factor-builder-prototype/</link>
		<pubDate>Fri, 14 Aug 2015 17:57:13 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=307</guid>
		<description></description>
		<content:encoded><![CDATA[<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-2d58-0d77-87de-ff60ff20a0e6"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">2.工厂模式，实现创建者和调用者的分离</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-2d58-0d77-87de-ff60ff20a0e6"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">分为 </span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">简单工厂模式</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">，</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">工厂方法模式</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">，</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">抽象工厂模式</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-2d58-0d77-87de-ff60ff20a0e6"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">面向对象的基本设计原则，</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">分工</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-2d58-0d77-87de-ff60ff20a0e6"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">OCP(open close principle): 一个软件的实体应当对扩展开发对修改关闭，添加新类来扩展功能</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-2d58-0d77-87de-ff60ff20a0e6"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">DIP(dependency Inversion Principle): 针对接口编程，不要针对实现编程</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-2d58-0d77-87de-ff60ff20a0e6"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">LoD(Law of Demeter): 只与你直接的朋友通信，而避免和陌生人通信</span></span>
</p>

<ul dir="ltr">
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-4aa9959f-2d58-0d77-87de-ff60ff20a0e6"><span style="font-size: 14.6666666666667px; font-family: Arial; font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><em><u><strong><a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/src/com/godlzr/GOF23/factory/simpleFactory"><span style="color:#FF0000;">简单工厂模式</span></a></strong></u></em></span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(56, 118, 29); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">:</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"> </span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">静态工厂，方法都是静态的， 通过接受不同参数创建不同实例， 增加新的类需要修改已有方法，扩展困难, 实际使用最多。</span></span>
	</li>
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-4aa9959f-2d58-0d77-87de-ff60ff20a0e6"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(56, 118, 29); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/src/com/godlzr/GOF23/factory/facotryMethod">工厂方法模式</a>：</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">避免了简单工厂不满足ocp的缺点，简单工厂只有一个工厂类，而工厂方法模式有一组实现了相同接口的工厂类（</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(255, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">一般都用简单工厂模式</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">), 不修改已有类的前提下，增加新的工厂类来实现扩展</span></span>
	</li>
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-4aa9959f-2d58-0d77-87de-ff60ff20a0e6"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(56, 118, 29); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/src/com/godlzr/GOF23/factory/abstractFactory">抽象工厂模式</a>：</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">用来生成不同</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(255, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">产品族</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">的全部产品， 工厂方法的升级版，不能增加产品，但能增加产品族。</span></span>
	</li>
</ul>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-2d59-3f8c-0b02-4fd6a6d4fb76"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">3.<a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/src/com/godlzr/GOF23/builder">建造者模式</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-2d59-3f8c-0b02-4fd6a6d4fb76"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">对象的组件多，装配顺序复杂</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-2d59-3f8c-0b02-4fd6a6d4fb76"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">装配的问题，零件之间有一个装配顺序，分离了对象子组件的单独构造（<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/src/com/godlzr/GOF23/builder/godlzrAirshipBuilder.java">builder</a>）和装配（<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/src/com/godlzr/GOF23/builder/godlzrAirshipDirector.java">director</a>）</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-2d59-3f8c-0b02-4fd6a6d4fb76"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">实现了构建和装配的解耦，不同的构建器，相同的装配器，构建不同的对象。相同的构建器，不同的装配器，构建不同的对象。实现了构建算法和装配算法的解耦，有很好的复用性。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	&nbsp;
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-3415-2f2f-5dba-5ed82fea99fe"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">4.</span><span style="color:#FF0000;"><span style="font-size: 14.6666666666667px; font-family: Arial; font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">原型模式 </span></span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/src/com/godlzr/GOF23/prototype">Prototype</a>（克隆模式）</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-3415-2f2f-5dba-5ed82fea99fe"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">以</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">某个对象为原型，复制拷贝出新的对象，实现数据的复用。新对象具备原型对象的特点。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-3415-2f2f-5dba-5ed82fea99fe"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">优势：效率高</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-3415-2f2f-5dba-5ed82fea99fe"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">克隆类似于new，但new的对象的属性采用默认值，克隆的对象属性与原型一样。克隆的对象改变不会影响原型。例如，opencv中 mat 的clone(), copyTo().</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-3415-2f2f-5dba-5ed82fea99fe"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">有</span><a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/src/com/godlzr/GOF23/prototype/Sheep.java"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(153, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">深克隆</span></a><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">，</span><a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/src/com/godlzr/GOF23/prototype/Sheep2.java"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(153, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">浅克隆</span></a><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">之分。 对浅克隆来说，如果对象中的某些属性也是对象，则克隆的对象与原型对象的同一个属性对象在内存中只有一个，该属性对象并没有被复制。如果修改了该属性，则无论是克隆对象和原型对象的该属性都被修改。</span></span>
</p>

<pre class="brush:java;">
public class Sheep implements Cloneable{ 
	
	private String sname;
	private Date birthday;
	
	@Override
	protected Object clone() throws CloneNotSupportedException {
		Object obj = super.clone();//直接调用object的clone方法
		
		//实现deep clone
		Sheep s = (Sheep)obj;
		s.birthday = (Date) this.birthday.clone();//把属性也进行克隆
		return obj;
	}
}</pre>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-3415-2f2f-5dba-5ed82fea99fe"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">实现深克隆就要把原型对象的所有属性都复制。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-3415-2f2f-5dba-5ed82fea99fe"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(153, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">深克隆</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">可以利用<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/src/com/godlzr/GOF23/prototype/Client2.java">序列化和反序列化技术实现</a>。</span></span>
</p>

<pre class="brush:java;">
public static void main(String[] args) throws  IOException, ClassNotFoundException {
		Date date = new Date(11123123L);
		Sheep2 s1 = new Sheep2(&quot;Dori&quot;, date);
		
		//使用序列化将对象输出到数据流
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		ObjectOutputStream oos = new ObjectOutputStream(bos);
		oos.writeObject(s1);//输出s1的拷贝
		byte[] bytes = bos.toByteArray();
		
		//使用反序列化将数据流中的对象读入并实现深克隆
		ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
		ObjectInputStream ois = new ObjectInputStream(bis);
		Sheep2 s2 = (Sheep2) ois.readObject();//拷贝给s2
}</pre>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-3427-993b-7b1b-0597efd2c0fb"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(153, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/src/com/godlzr/GOF23/prototype/Client3.java">使用情景</a>：使用new创建对象很耗时间时，利用原型模式拷贝来提高效率。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-4aa9959f-3427-993b-7b1b-0597efd2c0fb"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">原型模式一般和工厂模式结合起来</span></span>
</p>

<div>
	&nbsp;
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>307</wp:post_id>
		<wp:post_date>2015-08-14 13:57:13</wp:post_date>
		<wp:post_date_gmt>2015-08-14 17:57:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>factor-builder-prototype</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="creational-patterns"><![CDATA[Creational Patterns]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[factor-and-builder-%e5%b7%a5%e5%8e%82%e6%a8%a1%e5%bc%8f%e5%92%8c%e5%bb%ba%e9%80%a0%e8%80%85%e6%a8%a1%e5%bc%8f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[factor-and-builder]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1. Adapter and Proxy Patterns 适配器模式和代理模式</title>
		<link>http://godlzr.com/index.php/2015/08/16/1-adapter-and-proxy-patterns/</link>
		<pubDate>Mon, 17 Aug 2015 01:04:56 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=329</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 dir="ltr" style="line-height:1.38;margin-top:10pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 21.3333333333333px; font-family: 'Trebuchet MS'; color: rgb(0, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">结构型模式</span></span>
</h1>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">核心作用：是从程序的结构上实现松耦合，从而可以扩大整体的类结构，用来解决更大的问题</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">分类：适配器模式，代理模式，桥接模式，装饰模式，组合模式，外观模式，享元模式。</span></span>
		</p>
	</li>
</ul>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">1.<a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.structural/adapter">适配器模式 Adapter</a></span></span>
</p>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">将一个类的接口转成希望的另一个接口，使得原来接口不兼容的类可以一起工作。</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">模型中的角色</span></span>
		</p>

		<ul style="margin-top:0pt;margin-bottom:0pt;">
			<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">目标接口（<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.structural/adapter/Target.java">Target</a>）：期待的接口，目标可以是具体的或抽象的类，也可以是接口。</span></span>
				</p>
			</li>
			<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">需要适配的类（<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.structural/adapter/Adaptee.java">Adaptee</a>）：需要适配的类或者适配者类</span></span>
				</p>
			</li>
			<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">适配器（Adapter）：通过包装一个需要适配的对象，把原接口转换成目标接口</span></span>
				</p>
			</li>
		</ul>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">两种方式：<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.structural/adapter/Adapter.java">类继承</a>，或者<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.structural/adapter/Adapter2.java">类组合</a>的方式。</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">场景：旧系统改造和升级</span></span>
		</p>
	</li>
</ul>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">2. 代理模式 Proxy Pattern</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">通过代理，控制对对象的访问。可以详细控制访问某个对象的方法，在调用这个方法前做前置处理，后做后置处理，从而将统一流程代码放到代理类中处理。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(153, 0, 255); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">AOP Aspect Oriented Programming面向切面编程的核心实现机制。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">核心角色：</span></span>
</p>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">抽象角色：定义代理角色和真实角色的公开对外方法</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">真实角色：实现抽象角色，</span><span style="font-size: 14.6666666666667px; font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">真正的业务逻辑</span><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">，定义真实角色所需要实现的业务逻辑，供代理角色调用</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">代理角色：实现抽象角色，</span><span style="font-size: 14.6666666666667px; font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">统一的控制流程在代理角色中处理</span><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">，是真实角色的代理通过真实角色的业务逻辑方法来实现抽象方法，并可以附加自己的操作。</span></span>
		</p>
	</li>
</ul>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">应用：安全代理，远程代理，延迟加载</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">分类：<a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.structural/staticProxy">静态代理static</a>（<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.structural/staticProxy/ProxySinger.java">自己定义代理类</a>）和<a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.structural/dynamicProxy">动态代理dynamic</a>（由程序生成代理类）</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">动态代理:动态生成代理类，灵活统一</span></span>
</p>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">JDK自带的动态代理</span></span>
		</p>

		<ul style="margin-top:0pt;margin-bottom:0pt;">
			<li dir="ltr" style="list-style-type: circle; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">java.lang.reflect.Proxy</span></span>
				</p>
			</li>
			<li dir="ltr" style="list-style-type: circle; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
				<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
					<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">java.lang.reflect.<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.structural/dynamicProxy/SingerHandler.java">InvocationHandler(</a>处理器接口)</span></span>
				</p>
			</li>
		</ul>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">javaassist字节码操作库实现</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">CGLIB</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<span id="docs-internal-guid-9db97b8d-392b-1e44-77ff-531cc67f0bd1"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">ASM（底层使用指令，可维护性差）</span></span>
	</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>329</wp:post_id>
		<wp:post_date>2015-08-16 21:04:56</wp:post_date>
		<wp:post_date_gmt>2015-08-17 01:04:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-adapter-and-proxy-patterns</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="structural"><![CDATA[Structural Patterns]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2. Bridge，Decorator and Composite桥建，装饰和组合模式</title>
		<link>http://godlzr.com/index.php/2015/08/17/bridge%ef%bc%8cdecorator-and-composite/</link>
		<pubDate>Mon, 17 Aug 2015 23:17:57 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=333</guid>
		<description></description>
		<content:encoded><![CDATA[<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">3.桥接模式 <a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.structural/bridge">Bridge</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(255, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">多层继承结构 </span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">扩展性问题，类个数膨胀问题，违反单一职责原则</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">处理</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(255, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">多层继承</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">结构，处理</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">多维度</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">变化场景，将各个维度设计成独立的继承结构，使各个维度可以独立的扩展在抽象层建立关系。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<a href="https://en.wikipedia.org/wiki/File:Bridge_UML_class_diagram.svg" target="_self"><img alt="" src="https://upload.wikimedia.org/wikipedia/commons/c/cf/Bridge_UML_class_diagram.svg" style="height: 250px; width: 500px;" /></a>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">4.装饰模式 <a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.structural/decorator">Decorator</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">动态的为一个对象</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(255, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">增加新的功能</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">, 降低系统耦合度，具体类和装饰类可以独立变换。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">装饰模式是一种用于代替继承的技术，</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(255, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">无须通过继承增加子类就能扩展对象的新功能</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">。使用对象</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">的关联关系代替继承关系更加灵活，</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(255, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">避免类型体系的快速膨胀。</span></span>
</p>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">Component抽象构件</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">ConcreteComponent具体构件（真实对象）</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">Decorator装饰器</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">ConcreteDecorator具体装饰器</span></span>
		</p>
	</li>
</ul>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">也可称为Wrapper.</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">缺点：产生很多小对象，易出错，调试麻烦</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<img alt="" src="https://upload.wikimedia.org/wikipedia/commons/e/e9/Decorator_UML_class_diagram.svg" style="width: 500px; height: 396px;" />
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	&nbsp;
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">5.组合模式 <a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.structural/composite">Composite</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">组合（A类中定义B类的对象b属性）与组合模式不同。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">把部分和整体的关系用</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(255, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">树形结构</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">来表示，从而使客户端可以使用统一的方式处理部分对象和整体对象。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">组合模式核心：</span></span>
</p>

<ul style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">Component抽象构件角色：定义了叶子和容器构件的共同点</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">Leaf叶子构件角色：无子节点</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: disc; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">Composite容器构件角色：有容器特征，可以包含子节点</span></span>
		</p>
	</li>
</ul>

<p>
	<span id="docs-internal-guid-0a891e64-3dea-190f-6ea8-bda5c7b9570b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">场景：资源管理器，GUI容器层次，XML文件解析，组织结构处理，Junit单元测试框架</span></span>
</p>

<p>
	<img alt="" src="https://upload.wikimedia.org/wikipedia/commons/5/5a/Composite_UML_class_diagram_%28fixed%29.svg" style="width: 500px; height: 323px;" />
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>333</wp:post_id>
		<wp:post_date>2015-08-17 19:17:57</wp:post_date>
		<wp:post_date_gmt>2015-08-17 23:17:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bridge%ef%bc%8cdecorator-and-composite</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="structural"><![CDATA[Structural Patterns]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[bridge%ef%bc%8cdecorator-and-composite%e6%a1%a5%e5%bb%ba%ef%bc%8c%e8%a3%85%e9%a5%b0%e5%92%8c%e7%bb%84%e5%90%88%e6%a8%a1%e5%bc%8f]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3. Facade and FlyWeight 外观模式和享元模式</title>
		<link>http://godlzr.com/index.php/2015/08/17/3-facade-and-flyweight/</link>
		<pubDate>Mon, 17 Aug 2015 23:23:33 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=340</guid>
		<description></description>
		<content:encoded><![CDATA[<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">6.外观模式 <a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.structural/facade">Facade</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">迪米特法则：（最少知识原则）一个软件实体应当尽可能少的与其他实体发生相互作用。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">为子系统提供一个入口，</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(255, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">封装</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">子系统的复习性，便于客户端使用。最简单的设计模式。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">使用频率很高。</span></span>
</p>

<p>
	<img alt="" src="https://upload.wikimedia.org/wikipedia/en/5/57/Example_of_Facade_design_pattern_in_UML.png" style="width: 450px; height: 299px;" />
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">7.享元模式 <a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.structural/flyweight">FlyWeight</a>（轻量级）</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">如果存在很多完全相同或相似的对象，我们可以通过享元模式，</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(255, 0, 0); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">节省内存</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">以共享的方式高效的支持大量细粒度对象的重用。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">区分了内部状态和外部状态：</span></span>
</p>

<ul dir="ltr">
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">内部状态：可以共享，不会随环境的变化而改变。</span></span>
	</li>
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">外部状体：不可以共享，会随环境变化而改变。</span></span>
	</li>
</ul>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">例如围棋软件中的棋子对象有属性：颜色，形状，大小（内部状态，不会改变都一样，可以恭喜那个）位置（外部状态，不同，不可共享）</span></span>
</p>

<ul dir="ltr">
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.structural/flyweight/ChessFlyWeightFactory.java">FlyweightFactory</a>: 享元工厂类，创建并管理享元对象，享元池一般设计成键对值</span></span>
	</li>
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.structural/flyweight/ChessFlyWeight.java">Flyweight</a>：抽象享元类，通常是一个接口或抽象类，声明公共方法，这些方法可以向外界提供对象的内部状态，设置外部状态。</span></span>
	</li>
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.structural/flyweight/ChessFlyWeight.java">ConcreteFlyWeight</a>：具体的享元类，为内部状态提供成员变量进行存储</span></span>
	</li>
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;"><a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.structural/flyweight/Coordinate.java">UnsharedConcreteFlyweight</a>：非共享享元类，不能被共享的子类可以设计外部状态</span></span>
	</li>
</ul>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">应用场景主要是线程池，数据连接池</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">优点：</span></span>
</p>

<ul dir="ltr">
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">极大减少内存的对象数量</span></span>
	</li>
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">相同相似的对象内存中只存一份，极大结缘资源，提高系统性能</span></span>
	</li>
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">外部状态相对独立，不影响内部状态</span></span>
	</li>
</ul>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">缺点：</span></span>
</p>

<ul dir="ltr">
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">模式复杂，使程序逻辑复杂化</span></span>
	</li>
	<li style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;">
		<span id="docs-internal-guid-0a891e64-3df4-f04a-a18f-7201516ee00b"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">节省内存，共享内部状态，分离出外部状态，而读取外部状态是运行时间变长，时间换空间。</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">&nbsp;&nbsp; &nbsp;</span></span>
	</li>
</ul>

<div>
	<img alt="" src="http://www.dofactory.com/images/diagrams/net/flyweight.gif" style="width: 467px; height: 289px;" />
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>340</wp:post_id>
		<wp:post_date>2015-08-17 19:23:33</wp:post_date>
		<wp:post_date_gmt>2015-08-17 23:23:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-facade-and-flyweight</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="structural"><![CDATA[Structural Patterns]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[3-facade-and-flyweight-%e5%a4%96%e8%a7%82%e6%a8%a1%e5%bc%8f%e5%92%8c%e4%ba%ab%e5%85%83%e6%a8%a1%e5%bc%8f]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java, difference between abstract class and interface</title>
		<link>http://godlzr.com/index.php/2015/08/31/java-difference-between-abstract-class-and-interface/</link>
		<pubDate>Mon, 31 Aug 2015 21:03:41 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=344</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	接口和抽象类有什么区别
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	你选择使用接口和抽象类的依据是什么？
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	<br />
	接口和抽象类的概念不一样。接口是对动作的抽象，抽象类是对根源的抽象。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	抽象类表示的是，这个对象是什么。接口表示的是，这个对象能做什么。比如，男人，女人，这两个类（如果是类的话&hellip;&hellip;），他们的抽象类是人。说明，他们都是人。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	人可以吃东西，狗也可以吃东西，你可以把&ldquo;吃东西&rdquo;定义成一个接口，然后让这些类去实现它.
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	所以，在高级语言上，一个类只能继承一个类（抽象类）(正如人不可能同时是生物和非生物)，但是可以实现多个接口(吃饭接口、走路接口)。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	第一点．&nbsp;接口是抽象类的变体，接口中所有的方法都是抽象的。而抽象类是声明方法的存在而不去实现它的类。<br />
	第二点．&nbsp;接口可以多继承，抽象类不行<br />
	第三点．&nbsp;接口定义方法，不能实现，而抽象类可以实现部分方法。<br />
	第四点．&nbsp;接口中基本数据类型为static 而抽类象不是的。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	当你关注一个事物的本质的时候，用抽象类；当你关注一个操作的时候，用接口。
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	&nbsp;
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	抽象类的功能要远超过接口，但是，定义抽象类的代价高。因为高级语言来说（从实际设计上来说也是）每个类只能继承一个类。在这个类中，你必须继承或编写出其所有子类的
</p>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	所有共性。虽然接口在功能上会弱化许多，但是它只是针对一个动作的描述。而且你可以在一个类中同时实现多个接口。在设计阶段会降低难度的。
</p>

<div>
	&nbsp;
</div>

<p style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-family: Arial; font-size: 14px; line-height: 26px;">
	&nbsp;
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>344</wp:post_id>
		<wp:post_date>2015-08-31 17:03:41</wp:post_date>
		<wp:post_date_gmt>2015-08-31 21:03:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java-difference-between-abstract-class-and-interface</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1. Chain of Responsibility, Iterator and Mediator 责任链，迭代器和中介者模式</title>
		<link>http://godlzr.com/index.php/2015/09/02/1-chain-of-responsibility-iterator-and-mediator/</link>
		<pubDate>Wed, 02 Sep 2015 16:25:58 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=346</guid>
		<description></description>
		<content:encoded><![CDATA[<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">1.责任链模式<a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.behavioural/chainOfResponsibility">Chain of Responsibility</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">能够将处理同一类请求的对象连城一条链，所提交的请求沿着链传递，链上的对象逐个判断是否有能力处理该请求，如果能则处理否则传递给链上的下一个对象。所有的对象有<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.behavioural/chainOfResponsibility/Leader.java">抽象类</a>控制</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">场景：打牌轮流出牌，接力赛跑，奖学金审批，公文审批</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">开发中的场景：异常机制，javascript时间的冒泡捕获，java是观察者，Servlet过滤器，structs2拦截器的调用。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	&nbsp;
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">2.迭代器模式<a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.behavioural/iterator">Iterator</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">提供一种可以遍历聚合对象的方式，又称为：游标cursor模式</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">1.聚合对象：存储数据 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.迭代器：遍历对象</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">正向逆向遍历</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">开发中的场景：jdk 内置迭代器</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	&nbsp;
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">3.中介者模式<a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.behavioural/mediator">Mediator</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">如果一个系统中对象之间的联系呈现为网状结构，对象之间存在大量多对多关系，这些对象称为</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); font-weight: 700; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">同事对象</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">，我们可以引入一个</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); font-weight: 700; font-style: italic; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">中介者对象</span><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">，使各个同事对象只跟中介者对象打交道，将复杂的网状结构化解为星型结构</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">实现同事对象之间的解耦，通过中介者对象统一的管理交互</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8edc-5523-32e5-b9158b53060c"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">开发中的场景： MVC中C就是中介</span></span>
</p>

<div>
	&nbsp;
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>346</wp:post_id>
		<wp:post_date>2015-09-02 12:25:58</wp:post_date>
		<wp:post_date_gmt>2015-09-02 16:25:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-chain-of-responsibility-iterator-and-mediator</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="behavioural-patterns"><![CDATA[Behavioural Patterns]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[1-chain-of-responsibility-iterator-and-mediator-%e8%b4%a3%e4%bb%bb%e9%93%be%ef%bc%8c%e8%bf%ad%e4%bb%a3%e5%99%a8%e5%92%8c%e4%b8%ad%e4%bb%8b%e8%80%85%e6%a8%a1%e5%bc%8f]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[cheap ray ban sunglasses]]></wp:comment_author>
			<wp:comment_author_email>yxtoyt@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://shopping.rboutletonlinesales.com/</wp:comment_author_url>
			<wp:comment_author_IP>193.201.224.74</wp:comment_author_IP>
			<wp:comment_date>2015-10-19 13:06:59</wp:comment_date>
			<wp:comment_date_gmt>2015-10-19 17:06:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey very interesting blog!]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_error</wp:meta_key>
				<wp:meta_value><![CDATA[1445274419]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1445274419.502624;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>2. Command，Interpreter，Visitor， Strategy and Template 命令，解释器，访问者，策略和模板方法模式</title>
		<link>http://godlzr.com/index.php/2015/09/02/visitor-and-strategy/</link>
		<pubDate>Wed, 02 Sep 2015 16:29:39 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=348</guid>
		<description></description>
		<content:encoded><![CDATA[<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">4.命令模式<a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.behavioural/command">Command</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">将一个请求封装为一个对象，从而使我们可用不同的请求对客户进行参数化； 对请求排队或者记录请求日志，以及支持可撤销的操作。也称为：动作模式action 事务模式transaction。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">结构：</span></span>
</p>

<ol style="margin-top:0pt;margin-bottom:0pt;">
	<li dir="ltr" style="list-style-type: decimal; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">Command 抽象命令类</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: decimal; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">ConcreteCommand具体命令类</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: decimal; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">Invoker调用者</span></span>
		</p>
	</li>
	<li dir="ltr" style="list-style-type: decimal; font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; background-color: transparent;">
		<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
			<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">Receiver接受者</span></span>
		</p>
	</li>
</ol>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">开发中的场景：Struts2中，action的整个调用过程就是命令模式， 数据库事务机制的底层实现</span></span>
</p>

<p>
	&nbsp;
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">5.解释器模式 Interpreter</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">不常用，开发新的语言时，可以考虑使用解释器模式。主要用于描述如何构成一个简单的语言解释器，主要用于使用面向对象语言开发的编译器和解释器设计。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">在项目中可以使用js引擎等动态语言来替代解释器的作用，弥补java语言的不足。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">开发中的场景：EL表达式，正则表达式，SQL语法，数学表达式</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	&nbsp;
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">6.访问者模式 Visitor</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">对于存储在一个集合中的对象，他们可能具有不同的类型，对于该集合中的对象，可以接受一类称为访问者的对象来访问，不同的访问者其访问方式也有所不同</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">开发中的场景：XML文档解释器设计，编译器设计，复杂集合对象的处理</span></span>
</p>

<p>
	&nbsp;
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">7.策略模式 <a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.behavioural/strategy">Strategy</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">策略模式对应于解决某一个问题的一个算法族，允许用户从该算法族中任选一个算法解决某一个问题，同时可以方便的更换算法或者增加新的算法。并且由客户端决定调用哪个算法。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">策略接口，具体的策略类，上下文类管理策略</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">开发中的场景：spring中 resource接口，资源访问策略</span></span>
</p>

<p>
	&nbsp;
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 255); font-weight: 700; vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">8.模板方法模式 <a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.behavioural/templateMethod">Template</a></span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">场景：客户到银行办理业务，1.取号排队2.办理具体业务3.给柜员评分。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">定义了算法的骨架，某些步骤延迟到子类中实现，新的子类可以在不改变一个算法结构的前提下重新定义该算法的某些特定步骤。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">又称为方法回调，钩子方法，</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">实现算法时整体步骤固定，某些步骤易变，易变的部分可以抽象出来供子类实现。</span></span>
</p>

<p dir="ltr" style="line-height:1.38;margin-top:0pt;margin-bottom:0pt;">
	<span id="docs-internal-guid-b09b2da6-8ee0-a5cd-8380-516910d54b7a"><span style="font-size: 14.6666666666667px; font-family: Arial; color: rgb(0, 0, 0); vertical-align: baseline; white-space: pre-wrap; background-color: transparent;">开发中的场景：数据库访问封装，Junit，hibernate模板。</span></span>
</p>

<div>
	&nbsp;
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>348</wp:post_id>
		<wp:post_date>2015-09-02 12:29:39</wp:post_date>
		<wp:post_date_gmt>2015-09-02 16:29:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visitor-and-strategy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="behavioural-patterns"><![CDATA[Behavioural Patterns]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3. State, Observer and Memento状态，观察者和备忘录模式</title>
		<link>http://godlzr.com/index.php/2015/09/08/3-state-observer-and-memento/</link>
		<pubDate>Tue, 08 Sep 2015 20:10:18 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=353</guid>
		<description></description>
		<content:encoded><![CDATA[<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06"><span style="color:#0000FF;">9.状态模式 </span><a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.behavioural/state"><span style="color:#0000FF;">State</span></a></b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">不同的状态对应不同的行为，如红绿灯，电梯运行的各种状态。</b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">解决复杂对象的状态切换以及不同状态下行为的封装问题。</b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">结构：<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.behavioural/state/Context.java">context</a>上下文类（维护state对象，定义了当前的状态），<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.behavioural/state/State.java">state抽象状态类</a>，concretestate具体状态类（封装了状态对应的行为）</b><br />
	&nbsp;
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06"><span style="color:#0000FF;">10.观察者模式 </span><a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.behavioural/observer"><span style="color:#0000FF;">Observer</span></a></b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">实现群发广播机制，群体广播信息时使用，类比广播站和收音机，收音机就是观察者，广播站发送信号。</b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">广播的订阅者，客户称为观察者，需要同步给多个订阅者的数据封装到对象中，称之为目标。</b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">用于1：N的通知，当目标对象subject的状态变化时，他需要及时告知一系列对象（观察者）令他们做出响应。</b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">有推（观察者被动接受），拉（观察者自己决定什么时候获取内容）两个动作。</b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">javase 提供了java.util.Observable 和java.util.Observer来实现<a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.behavioural/javaseObserver">观察者模式</a></b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">开发中的场景: 聊天室中服务器转发给所有客户端。网络游戏中，服务器将客户状态分发，邮件订阅，android广播机制</b>
</p>

<p>
	&nbsp;
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06"><span style="color:#0000FF;">11.备忘录模式 </span><a href="https://github.com/godlzr/GOF23_DesignPattern/tree/master/com.godlzr.GOF23.behavioural/memento"><span style="color:#0000FF;">Memento</span></a><span style="color:#0000FF;">（纪念章）</span></b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">保持对象状态的功能，保存某个对象内部状态的拷贝，这样以后就可以将该对象恢复到原先的状态。</b>
</p>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">结构：</b>
</p>

<ul>
	<li dir="ltr">
		<p dir="ltr">
			<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">源发器类<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.behavioural/memento/EmpMemento.java">Originator</a></b>
		</p>
	</li>
	<li dir="ltr">
		<p dir="ltr">
			<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">备忘录类<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.behavioural/memento/Emp.java">Memento</a></b>
		</p>
	</li>
	<li dir="ltr">
		<p dir="ltr">
			<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">负责人类<a href="https://github.com/godlzr/GOF23_DesignPattern/blob/master/com.godlzr.GOF23.behavioural/memento/CareTaker.java">CareTaker</a></b>
		</p>
	</li>
</ul>

<p dir="ltr">
	<b id="docs-internal-guid-b09b2da6-ae82-f928-69b2-33f44727ec06">开发中的场景: 撤销操作，事务管理，回滚操作，历史记录</b>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>353</wp:post_id>
		<wp:post_date>2015-09-08 16:10:18</wp:post_date>
		<wp:post_date_gmt>2015-09-08 20:10:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-state-observer-and-memento</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="behavioural-patterns"><![CDATA[Behavioural Patterns]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tadoussac  September 2015 ;)</title>
		<link>http://godlzr.com/index.php/2015/09/09/tadoussac-september-2015/</link>
		<pubDate>Wed, 09 Sep 2015 17:08:34 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=358</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	&nbsp;
</p>

<p>
	出海钓个鱼，哎呦上钩了;)<a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7811.jpg"><img alt="IMG_7811" class="alignnone size-full wp-image-359" height="1501" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7811.jpg" width="2252" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7815.jpg"><img alt="IMG_7815" class="alignnone size-full wp-image-360" height="1446" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7815.jpg" width="2170" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7825.jpg"><img alt="IMG_7825" class="alignnone size-full wp-image-361" height="1151" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7825.jpg" width="1673" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7844.jpg"><img alt="IMG_7844" class="alignnone size-full wp-image-362" height="1568" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7844.jpg" width="2352" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7849.jpg"><img alt="IMG_7849" class="alignnone size-full wp-image-364" height="1364" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7849.jpg" width="2085" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7862.jpg"><img alt="IMG_7862" class="alignnone size-full wp-image-365" height="1260" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7862.jpg" width="2145" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7869.jpg"><img alt="IMG_7869" class="alignnone size-full wp-image-366" height="1486" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7869.jpg" width="2230" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7875.jpg"><img alt="IMG_7875" class="alignnone size-full wp-image-367" height="960" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7875.jpg" width="1617" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7887.jpg"><img alt="IMG_7887" class="alignnone size-full wp-image-368" height="975" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7887.jpg" width="1473" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7893.jpg"><img alt="IMG_7893" class="alignnone size-full wp-image-369" height="1568" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7893.jpg" width="2352" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7912.jpg"><img alt="IMG_7912" class="alignnone size-full wp-image-373" height="2161" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7912.jpg" width="1461" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7924.jpg"><img alt="IMG_7924" class="alignnone size-full wp-image-376" height="1437" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7924.jpg" width="2253" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7927.jpg"><img alt="IMG_7927" class="alignnone size-full wp-image-377" height="1088" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7927.jpg" width="1788" /></a> <a href="http://godlzr.com/wp-content/uploads/2015/09/IMG_7941.jpg"><img alt="IMG_7941" class="alignnone size-full wp-image-380" height="1520" src="http://godlzr.com/wp-content/uploads/2015/09/IMG_7941.jpg" width="2280" /></a>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date>2015-09-09 13:08:34</wp:post_date>
		<wp:post_date_gmt>2015-09-09 17:08:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tadoussac-september-2015</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tadoussac_001</title>
		<link>http://godlzr.com/index.php/2015/09/09/tadoussac_001/</link>
		<pubDate>Wed, 09 Sep 2015 19:28:04 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=403</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>403</wp:post_id>
		<wp:post_date>2015-09-09 15:28:04</wp:post_date>
		<wp:post_date_gmt>2015-09-09 19:28:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tadoussac_001</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[373]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>大鱼上钩了 ;)</title>
		<link>http://godlzr.com/index.php/2015/09/09/bigfish/</link>
		<pubDate>Wed, 09 Sep 2015 19:29:02 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=405</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>405</wp:post_id>
		<wp:post_date>2015-09-09 15:29:02</wp:post_date>
		<wp:post_date_gmt>2015-09-09 19:29:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bigfish</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[367]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e5%a4%a7%e9%b1%bc%e4%b8%8a%e9%92%a9%e4%ba%86]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Well, whale</title>
		<link>http://godlzr.com/index.php/2015/09/09/well-whale/</link>
		<pubDate>Wed, 09 Sep 2015 19:29:58 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=407</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>407</wp:post_id>
		<wp:post_date>2015-09-09 15:29:58</wp:post_date>
		<wp:post_date_gmt>2015-09-09 19:29:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>well-whale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[365]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Back to Quebec City</title>
		<link>http://godlzr.com/index.php/2015/09/09/back-to-quebec-city/</link>
		<pubDate>Wed, 09 Sep 2015 19:30:54 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=409</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>409</wp:post_id>
		<wp:post_date>2015-09-09 15:30:54</wp:post_date>
		<wp:post_date_gmt>2015-09-09 19:30:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>back-to-quebec-city</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[380]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>海燕</title>
		<link>http://godlzr.com/index.php/2015/09/09/haiyan/</link>
		<pubDate>Wed, 09 Sep 2015 19:31:39 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=411</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>411</wp:post_id>
		<wp:post_date>2015-09-09 15:31:39</wp:post_date>
		<wp:post_date_gmt>2015-09-09 19:31:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>haiyan</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[368]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e6%b5%b7%e7%87%95]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rainbow</title>
		<link>http://godlzr.com/index.php/2015/09/09/rainbow/</link>
		<pubDate>Wed, 09 Sep 2015 19:32:20 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=413</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date>2015-09-09 15:32:20</wp:post_date>
		<wp:post_date_gmt>2015-09-09 19:32:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rainbow</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[362]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>嘿</title>
		<link>http://godlzr.com/index.php/2015/09/09/%e5%98%bf/</link>
		<pubDate>Wed, 09 Sep 2015 19:32:56 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=415</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>415</wp:post_id>
		<wp:post_date>2015-09-09 15:32:56</wp:post_date>
		<wp:post_date_gmt>2015-09-09 19:32:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%98%bf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[371]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>出海</title>
		<link>http://godlzr.com/index.php/2015/09/09/sea/</link>
		<pubDate>Wed, 09 Sep 2015 19:33:28 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=417</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>417</wp:post_id>
		<wp:post_date>2015-09-09 15:33:28</wp:post_date>
		<wp:post_date_gmt>2015-09-09 19:33:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sea</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[364]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e5%87%ba%e6%b5%b7]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>together</title>
		<link>http://godlzr.com/index.php/2015/09/09/together/</link>
		<pubDate>Wed, 09 Sep 2015 19:34:48 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=419</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2015-09-09 15:34:48</wp:post_date>
		<wp:post_date_gmt>2015-09-09 19:34:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>together</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[369]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>想起那年夕阳下的垂钓，那是回不去的年少</title>
		<link>http://godlzr.com/index.php/2015/09/09/ottawariver/</link>
		<pubDate>Wed, 09 Sep 2015 23:37:59 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=432</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>432</wp:post_id>
		<wp:post_date>2015-09-09 19:37:59</wp:post_date>
		<wp:post_date_gmt>2015-09-09 23:37:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ottawariver</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Image]]></category>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[434]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e6%83%b3%e8%b5%b7%e9%82%a3%e5%b9%b4%e5%a4%95%e9%98%b3%e4%b8%8b%e7%9a%84%e5%9e%82%e9%92%93%ef%bc%8c%e9%82%a3%e6%98%af%e5%9b%9e%e4%b8%8d%e5%8e%bb%e7%9a%84%e5%b9%b4%e5%b0%91]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sort Algorithms</title>
		<link>http://godlzr.com/index.php/2015/09/15/sort-algorithm/</link>
		<pubDate>Tue, 15 Sep 2015 16:47:14 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=479</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	<span style="color:#DAA520;">1. Bubble Sort O(n<sup>2</sup>) *</span>
</p>

<p>
	<span style="color:#FF0000;">2. Simple Selection Sort O(n<sup>2</sup>) **</span>
</p>

<p>
	<span style="color:#0000FF;">3. Straight Insertion Sort O(n<sup>2</sup>) ***</span>
</p>

<p>
	<span style="color:#0000FF;">4. Shell Sort &nbsp;O(n<sup>3/2</sup>) ***</span>
</p>

<p>
	<span style="color:#FF0000;">5. Heap Sort O(nlogn) **</span>
</p>

<p>
	<span style="color:#006400;">6. Merging&nbsp;Sort O(nlogn) ****</span>
</p>

<p>
	<span style="color:#DAA520;">7. Quick Sort O(nlogn) *</span>
</p>

<p>
	---------------------------------------------------
</p>

<p>
	<span style="font-size:12px;"><span style="font-family:courier new,courier,monospace;"><span style="color:#DAA520;">* Swapping</span></span></span>
</p>

<p>
	<span style="font-size:12px;"><span style="font-family:courier new,courier,monospace;"><span style="color:#FF0000;">** Selection</span></span></span>
</p>

<p>
	<span style="font-size:12px;"><span style="font-family:courier new,courier,monospace;"><span style="color:#0000FF;">***&nbsp;Insertion</span></span></span>
</p>

<p>
	<span style="font-size:12px;"><span style="font-family:courier new,courier,monospace;"><span style="color:#006400;">**** Merging</span></span></span>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>479</wp:post_id>
		<wp:post_date>2015-09-15 12:47:14</wp:post_date>
		<wp:post_date_gmt>2015-09-15 16:47:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sort-algorithm</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>我想和你虚度时光-程璧</title>
		<link>http://godlzr.com/index.php/2015/09/17/woxianghenixudushiguang/</link>
		<pubDate>Thu, 17 Sep 2015 23:13:46 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=486</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	[su_youtube url="https://www.youtube.com/watch?v=AK6pJmeqR6M" height="460"]
</p>

<p>
	<span style="font-size:12px;">所属专辑：我想和你虚度时光</span>
</p>

<p>
	<span style="font-size:12px;">演唱者：程璧;&nbsp;莫西子诗</span>
</p>

<p>
	<span style="font-size:12px;">作词：李元胜</span>
</p>

<p>
	<span style="font-size:12px;">作曲：程璧 / 莫西子诗</span>
</p>

<p>
	<span style="font-size:12px;">编曲：莫西子诗</span>
</p>

<p>
	<span style="font-size:12px;">我想和你虚度时光，比如低头看鱼<br />
	比如把茶杯留在桌子上，离开<br />
	浪费它们好看的阴影</span>
</p>

<p>
	<span style="font-size:12px;">我还想连落日一起浪费，比如散步<br />
	一直消磨到星光满天<br />
	我还要浪费风起的时候<br />
	坐在走廊发呆，直到你眼中乌云<br />
	全部被吹到窗外</span>
</p>

<p>
	<span style="font-size:12px;">我已经虚度了世界，它经过我<br />
	疲倦，又像从未被爱过<br />
	但是明天我还要这样，虚度，我还要这样<br />
	满目的花草，生活应该像它们一样美好<br />
	一样无意义，像被虚度的电影<br />
	比如靠在栏杆上，低头看水的镜子<br />
	直到所有被虚度的事物<br />
	在我们身后，长出薄薄的翅膀</span>
</p>

<p>
	<span style="font-size:12px;">我已经虚度了世界，它经过我<br />
	疲倦，又像从未被爱过<br />
	但是明天我还要这样，虚度，我还要这样<br />
	我想和你互相浪费<br />
	一起虚度短的沉默，长的无意义<br />
	一起消磨精致而苍老的宇宙<br />
	---------------------------------<br />
	诗歌原始文本：</span>
</p>

<p>
	<span style="font-size:12px;">我想和你虚度时光，比如低头看鱼<br />
	比如把茶杯留在桌子上，离开<br />
	浪费它们好看的阴影<br />
	我还想连落日一起浪费，比如散步<br />
	一直消磨到星光满天<br />
	我还要浪费风起的时候<br />
	坐在走廊发呆，直到你眼中乌云<br />
	全部被吹到窗外</span>
</p>

<p>
	<span style="font-size:12px;">我已经虚度了世界，它经过我<br />
	疲倦，又像从未被爱过<br />
	但是明天我还要这样，虚度<br />
	满目的花草，生活应该像它们一样美好<br />
	一样无意义，像被虚度的电影<br />
	那些绝望的爱和赴死<br />
	为我们带来短暂的沉默<br />
	我想和你互相浪费<br />
	一起虚度短的沉默，长的无意义<br />
	一起消磨精致而苍老的宇宙<br />
	比如靠在栏杆上，低头看水的镜子<br />
	直到所有被虚度的事物<br />
	在我们身后，长出薄薄的翅膀</span>
</p>

<p>
	<span style="font-size:12px;">吉他：胡晨<br />
	大提琴：宋昭<br />
	萨克斯：李增辉<br />
	套鼓：毛毛<br />
	沙筒&amp;口琴：莫西子诗&nbsp;<br />
	录音：时俊峰（福达录音棚）<br />
	混音&amp;Master：王博（O2录音室）</span>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>486</wp:post_id>
		<wp:post_date>2015-09-17 19:13:46</wp:post_date>
		<wp:post_date_gmt>2015-09-17 23:13:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>woxianghenixudushiguang</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="music"><![CDATA[Music]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e6%88%91%e6%83%b3%e5%92%8c%e4%bd%a0%e8%99%9a%e5%ba%a6%e6%97%b6%e5%85%89]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The best figure to describe the OpenGL flowchart</title>
		<link>http://godlzr.com/index.php/2015/09/28/the-best-figure-to-describe-the-opengl-flowchart/</link>
		<pubDate>Mon, 28 Sep 2015 21:05:05 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=500</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	<img alt="" src="http://hi.csdn.net/attachment/201107/8/0_1310133462o5WH.gif" />
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>500</wp:post_id>
		<wp:post_date>2015-09-28 17:05:05</wp:post_date>
		<wp:post_date_gmt>2015-09-28 21:05:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-best-figure-to-describe-the-opengl-flowchart</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opencv"><![CDATA[OpenCV]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>June 17th Cisco On-site interview</title>
		<link>http://godlzr.com/index.php/2016/06/23/june-17th-cisco-on-site-interview/</link>
		<pubDate>Fri, 24 Jun 2016 03:15:51 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">https://godlzr.wordpress.com/?p=163</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
	<li>
		two developers
		<ol>
			<li>
				balanced binary tree
			</li>
			<li>
				circular buffer
			</li>
			<li>
				pass-by-reference and pass-by-value
			</li>
			<li>
				&nbsp;
			</li>
		</ol>
	</li>
	<li>
		two developers
		<ol>
			<li>
				heap and stack
			</li>
			<li>
				string comparison
			</li>
			<li>
				opengl and webgl
			</li>
			<li>
				why you want change to networking area.
			</li>
		</ol>
	</li>
	<li>
		manager
		<ol>
			<li>
				the most difficult decision
			</li>
			<li>
				describe a monitor beside you
			</li>
			<li>
				&nbsp;
			</li>
		</ol>
	</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2016-06-23 23:15:51</wp:post_date>
		<wp:post_date_gmt>2016-06-24 03:15:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>june-17th-cisco-on-site-interview</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="interview-logs"><![CDATA[Interview Logs]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>基于物理渲染的基础理论</title>
		<link>http://godlzr.com/index.php/2016/06/23/%e5%9f%ba%e4%ba%8e%e7%89%a9%e7%90%86%e6%b8%b2%e6%9f%93%e7%9a%84%e5%9f%ba%e7%a1%80%e7%90%86%e8%ae%ba/</link>
		<pubDate>Fri, 24 Jun 2016 03:10:30 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=497</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>
	基于物理渲染的基础理论
</h1>

<p>
	---翻译自<a href="https://www.marmoset.co/toolbag/learn/pbr-theory">Basic Theory of Physically-Based Rendering</a>&nbsp;By&nbsp;<a href="https://twitter.com/j3ffdr" target="_blank">Jeff Russell</a>
</p>

<p>
	---【译】李仲锐
</p>

<p>
	Physcially-based Rendering（PBR）基于物理渲染是令人兴奋的技术，因为缺少定义，近年来倾向于用实时渲染（Real-time Rendering）来指代。这项技术中杂糅了很多概念，所以经常让人困惑它的真实含义是什么。最简短的回答是：&ldquo;许多事物&rdquo;，和&ldquo;它有关于&rdquo; ，这个回答显然不令人满意，所以我尝试用我的方法来在一定程度上解释PBR代表的含义和它有别于其他渲染方法的地方。这篇文章是为了那些非工程出身的读者，主要是艺术工作者而写的，其中不包含任何的数学知识与计算机代码。
</p>

<p>
	基于物理的着色（shading）系统与以往技术的最大不同在于对光线与物体表面行为属性的关注。一些以往的方法的着色能力已经足够先进，使那些近似而不精确的视觉效果可以被忽略，这些方法已被用于艺术相关的创作中。工程人员和艺术工作者应该理解这些方法改变与演进的动机。
</p>

<p>
	我们将会从一些基础开始，对于基础深刻的理解有助于我们开始探究PBR的新鲜技术。但是如果你能忍受我讲述你已经知道的部分，你将发现这些内容是值得一读的。你可能还会想去查看Joe Wilson的文章 《<a href="http://www.marmoset.co/toolbag/learn/pbr-practice">Creating PBR artwork</a>》
</p>

<h2>
	Diffusion &amp; Reflection 漫反射和反射
</h2>

<p>
	漫反射和反射 - 对应于&ldquo;漫射光&rdquo;和&ldquo;镜面反射光&rdquo;，是两个用来描述最为基本的物体表面和光线交汇情况分类。实践上，大多数人比较熟悉这些概念，但是可能不清楚其具体的物理区别。
</p>

<p>
	When light hits a surface boundary some of it will reflect &ndash; that is, bounce off &ndash; from the surface and leave heading in a direction on the opposing side of the surface normal. This behavior is very similar to a ball thrown against the ground or a wall &ndash; it will bounce off at the opposite angle. On a smooth surface this will result in a mirror-like appearance. The word &ldquo;specular&rdquo;, often used to describe the effect, is derived from the latin for &ldquo;mirror&rdquo; (it seems &ldquo;specularity&rdquo; sounds less awkward than &ldquo;mirrorness&rdquo;).
</p>

<p>
	Not all light reflects from a surface, however. Usually some will penetrate into the interior of the illuminated object. There it will either be absorbed by the material (usually converting to heat) or scattered internally. Some of this scattered light may make its way back out of the surface, then becoming visible once more to eyeballs and cameras. This is known by many names: &ldquo;Diffuse Light&rdquo;, &ldquo;Diffusion&rdquo;, &ldquo;Subsurface Scattering&rdquo; &ndash; all describe the same effect.
</p>

<p>
	The absorption and scattering of diffuse light are often quite different for different wavelengths of light, which is what gives objects their color (e.g. if an object absorbs most light but scatters blue, it will appear blue). The scattering is often so uniformly chaotic that it can be said to appear the same from all directions &ndash; quite different from the case of a mirror! A shader using this approximation really just needs one input: &ldquo;albedo&rdquo;, a color which describes the fractions of various colors of light that will scatter back out of a surface. &ldquo;Diffuse color&rdquo; is a phrase sometimes used synonymously.
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>497</wp:post_id>
		<wp:post_date>2016-06-23 23:10:30</wp:post_date>
		<wp:post_date_gmt>2016-06-24 03:10:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9f%ba%e4%ba%8e%e7%89%a9%e7%90%86%e6%b8%b2%e6%9f%93%e7%9a%84%e5%9f%ba%e7%a1%80%e7%90%86%e8%ae%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="computer-visiongraphics"><![CDATA[Computer Vision/Graphics]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>GLSL Attributes, Uniforms And Varyings</title>
		<link>http://godlzr.com/index.php/2016/06/23/glsl-attributes-uniforms-and-varyings/</link>
		<pubDate>Fri, 24 Jun 2016 03:08:06 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=502</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>502</wp:post_id>
		<wp:post_date>2016-06-23 23:08:06</wp:post_date>
		<wp:post_date_gmt>2016-06-24 03:08:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>glsl-attributes-uniforms-and-varyings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="opengl"><![CDATA[OpenGL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Git Command</title>
		<link>http://godlzr.com/index.php/2015/10/01/git-command/</link>
		<pubDate>Thu, 01 Oct 2015 21:03:01 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=503</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>
	<code><span style="font-family:arial,helvetica,sans-serif;">1.Git configuration</span></code>
</h1>

<ul>
	<li>
		<code>$ git config --global user.name &quot;Your Name&quot;</code>
	</li>
	<li>
		<code>$ git config --global user.email &quot;email@example.com&quot;</code>
	</li>
</ul>

<h1>
	<span style="font-family:arial,helvetica,sans-serif;"><code>2.Great Respository</code></span>
</h1>

<ul>
	<li>
		<code>$ git init</code>
	</li>
	<li>
		<code>$ git add &lt;file&gt;</code>
	</li>
	<li>
		<code>$ git commit -m &quot;XXXXXX&quot;</code>
	</li>
</ul>

<h1>
	3. Respository Reset
</h1>

<ul>
	<li>
		<code>$ git status</code>
	</li>
	<li>
		<code>$ git diff</code>
	</li>
	<li>
		<code>$ git diff reset --hard commit_id</code>&nbsp;
	</li>
	<li>
		<code>$ git log --pretty=oneline</code>
	</li>
	<li>
		<code>$ git reflog</code>
	</li>
	<li>
		<code>$ git checkout --file</code>
	</li>
	<li>
		<code>$ git rm</code>
	</li>
</ul>

<h1>
	4. Add remote Responsitory
</h1>

<ul>
	<li>
		<code>$ git remote add origin gitaddress</code>
	</li>
	<li>
		<code>$ git clone gitaddress</code>
	</li>
</ul>

<h1>
	<code>5.Branch Manage</code>
</h1>

<ul>
	<li>
		查看分支：<code>git branch</code>
	</li>
	<li>
		创建分支：<code>git branch &lt;name&gt;</code>
	</li>
	<li>
		切换分支：<code>git checkout &lt;name&gt;</code>
	</li>
	<li>
		创建+切换分支：<code>git checkout -b &lt;name&gt;</code>
	</li>
	<li>
		合并某分支到当前分支：<code>git merge &lt;name&gt;</code>
	</li>
	<li>
		删除分支：<code>git branch -d &lt;name&gt;</code>
	</li>
	<li>
		<font face="monospace">查看分支图： git log --graph</font>
	</li>
	<li>
		当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复bug，修复后，再<code>git stash pop</code>，回到工作现场
	</li>
</ul>

<h1>
	6. Coorpration
</h1>

<ul>
	<li>
		查看远程库信息，使用<code>git remote -v</code>；
	</li>
	<li>
		本地新建的分支如果不推送到远程，对其他人就是不可见的；
	</li>
	<li>
		从本地推送分支，使用<code>git push origin branch-name</code>，如果推送失败，先用<code>git pull</code>抓取远程的新提交；
	</li>
	<li>
		在本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致；
	</li>
	<li>
		建立本地分支和远程分支的关联，使用<code>git branch --set-upstream branch-name origin/branch-name</code>；
	</li>
	<li>
		从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。
	</li>
</ul>

<p>
	&nbsp;
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date>2015-10-01 17:03:01</wp:post_date>
		<wp:post_date_gmt>2015-10-01 21:03:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-command</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Tech]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>宋冬野-平淡日子里的刺</title>
		<link>http://godlzr.com/index.php/2015/10/12/pingdanrizilideci/</link>
		<pubDate>Tue, 13 Oct 2015 01:20:06 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=508</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	[su_youtube url="https://www.youtube.com/watch?v=W5-cpGi7QYY" height="460"]
</p>

<p>
	在歌舞升平的城市
</p>

<p>
	忍不住回頭看我的城池
</p>

<p>
	在我手的 將要丟失
</p>

<p>
	她的幼稚 我的固執 都成為歷史
</p>

<p>
	破的城市 平淡日子
</p>

<p>
	她要尋找 生活的刺
</p>

<p>
	生活是這樣子 不如詩
</p>

<p>
	轉身撞到現實
</p>

<p>
	又只能如是
</p>

<p>
	她卻依然 對現實放肆
</p>

<p>
	等著 美麗的故事被腐蝕
</p>

<p>
	最後的好夢 漸漸消失
</p>

<p>
	放下玩具 舉起雙手 都沒有微辭
</p>

<p>
	她的幼稚 我的固執 都成為歷史
</p>

<p>
	破的城市 平淡日子
</p>

<p>
	她要尋找 生活的刺
</p>

<p>
	生活是這樣子 不如詩
</p>

<p>
	轉身撞到現實 又只能如是
</p>

<p>
	她卻依然 對現實放肆
</p>

<p>
	等著美麗的故事被腐蝕
</p>

<p>
	最後的好夢 漸漸消失
</p>

<p>
	放下玩具 舉起雙手
</p>

<p>
	都沒有微辭
</p>

<p>
	這是個很久遠的事
</p>

<p>
	在歌舞升平的城市
</p>

<p>
	在我手的 將要丟失
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>508</wp:post_id>
		<wp:post_date>2015-10-12 21:20:06</wp:post_date>
		<wp:post_date_gmt>2015-10-13 01:20:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pingdanrizilideci</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="music"><![CDATA[Music]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>牡丹亭外-陈升</title>
		<link>http://godlzr.com/index.php/2015/11/03/mudantingwai/</link>
		<pubDate>Wed, 04 Nov 2015 02:06:35 +0000</pubDate>
		<dc:creator><![CDATA[godlzr]]></dc:creator>
		<guid isPermaLink="false">http://godlzr.com/?p=512</guid>
		<description></description>
		<content:encoded><![CDATA[<p>
	[su_youtube url="https://www.youtube.com/watch?v=8jo0Xg9iZAQ" height="460"]</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>512</wp:post_id>
		<wp:post_date>2015-11-03 21:06:35</wp:post_date>
		<wp:post_date_gmt>2015-11-04 02:06:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mudantingwai</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="music"><![CDATA[Music]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e7%89%a1%e4%b8%b9%e4%ba%ad%e5%a4%96]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
